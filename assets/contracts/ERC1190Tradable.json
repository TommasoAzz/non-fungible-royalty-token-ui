{
  "contractName": "ERC1190Tradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenBaseUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "AssetRented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferCreativeLicense",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferOwnershipLicense",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creativeOwner",
          "type": "address"
        }
      ],
      "name": "balanceOfCreativeOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "balanceOfRenter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "getRented",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "royaltyForRental",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "royaltyForOwnershipTransfer",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setOwnershipLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setCreativeLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setRentalPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainOwnershipLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainCreativeLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"AssetRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferCreativeLicense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferOwnershipLicense\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creativeOwner\",\"type\":\"address\"}],\"name\":\"balanceOfCreativeOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"balanceOfRenter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"getRented\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"royaltyForRental\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"royaltyForOwnershipTransfer\",\"type\":\"uint8\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainCreativeLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setCreativeLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setOwnershipLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setRentalPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of ERC1190 with payable methods.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC1190-approve}.\"},\"balanceOfCreativeOwner(address)\":{\"details\":\"See {IERC1190-balanceOfCreativeOwner}.\"},\"balanceOfOwner(address)\":{\"details\":\"See {IERC1190-balanceOfOwner}.\"},\"balanceOfRenter(address)\":{\"details\":\"See {IERC1190-balanceOfRenter}.\"},\"constructor\":{\"details\":\"See {ERC1190-constructor}.\"},\"creativeOwnerOf(uint256)\":{\"details\":\"See {IERC1190-creativeOwnerOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC1190-getApproved}.\"},\"getRented(uint256,address)\":{\"details\":\"See {IERC1190-getRented}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1190-isApprovedForAll}.\"},\"mint(address,uint8,uint8)\":{\"details\":\"Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`.\"},\"name()\":{\"details\":\"See {IERC1190Metadata-name}.\"},\"obtainCreativeLicense(uint256)\":{\"details\":\"Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"obtainOwnershipLicense(uint256)\":{\"details\":\"Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC1190-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rentAsset(address,uint256,uint256)\":{\"details\":\"See {IERC1190-rentAsset}.\"},\"rentAsset(uint256,uint256)\":{\"details\":\"Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses.\"},\"rentersOf(uint256)\":{\"details\":\"See {IERC1190-rentersOf}.\"},\"safeTransferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferCreativeLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1190-setApprovalForAll}.\"},\"setCreativeLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setOwnershipLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setRentalPrice(uint256,uint256)\":{\"details\":\"Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC1190Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC1190Metadata-tokenURI}.\"},\"transferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferCreativeLicense}.\"},\"transferCreativeLicense(uint256,address)\":{\"details\":\"Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferOwnershipLicense}.\"},\"transferOwnershipLicense(uint256,address)\":{\"details\":\"Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":\"ERC1190Tradable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"non-fungible-royalty-token/contracts/ERC1190.sol\":{\"keccak256\":\"0x87c5eaed374baaefeb6eab57a2772678c6efe7b779dc6a606f3c9575d1ce5f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523006bf0c3190a57163362814bbb609678bf59d7f93660cf31a832a258a3641\",\"dweb:/ipfs/QmYvFTvRUHGtq3KPRTparJNWqo5w4St8zhqpDWSA8uV9Uf\"]},\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":{\"keccak256\":\"0x0f5249a01bdf86df1983b151114fc4d6cf053d41724b628f09123b92514963b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7f433b7b7a4ca99732db29053006cd488a5101d453131198a66dacc48de43cf\",\"dweb:/ipfs/Qma87p7Awitsushn8yWVW1p6crbV4aax93ZRbm12EQemrQ\"]},\"non-fungible-royalty-token/contracts/IERC1190.sol\":{\"keccak256\":\"0x5e3900926a431223b3e1440ece11eb5f4d6d4a4984883ce02429a98a2347101c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab59370ae94fa0be22ff10401ea241aa281416b4b750fb375f6251be25bc18de\",\"dweb:/ipfs/QmXoh5TUjkUuZEA2mL9KQMif8MxH1wjHe44c45FX4K5H18\"]},\"non-fungible-royalty-token/contracts/IERC1190Approver.sol\":{\"keccak256\":\"0x5cfe8bd143e6c86c443a02ea6e94e2f7d6c53474d6256bf55ee79691b714e8d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://188ed6db1029ae83b6e06293dfdd2f220b77d59255a5a76af76feae1a1d799c1\",\"dweb:/ipfs/QmY7TpFWDHydRg2mi8eyKPW3saMXYE2MYjgYd1qvh4dXZc\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeLicenseReceiver.sol\":{\"keccak256\":\"0x9874faa59977fddaf0d252be515418e26866d4c8f5668176e55b479604ae4c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d164d320f1ffa7db1aa93c9685988784fe2e32a9ad93a98062468bf9e5e1bd4d\",\"dweb:/ipfs/QmXR8K1VtLd8CbfNTHPaFtrAhDF9rZSHi9JiFSW1ZqEM9d\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeOwner.sol\":{\"keccak256\":\"0xd4e44eeb23623ad7ea99d56d9b6318ecc678f25660e6a66128e3f8f26bd82df9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b350bdaf466d21b78a3e53b568fd396e8093717932554907ff15913f83c8f\",\"dweb:/ipfs/QmaywMBe5sjeJAiRNc68n4GCsEgj4pr542xcVqsBwpuyF4\"]},\"non-fungible-royalty-token/contracts/IERC1190Metadata.sol\":{\"keccak256\":\"0xa35fa1bcd09130941ca255b6972841b83400b1981b87f1913088dba4b13d09c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da7c2757cd7163b2c8e21355df095e1d977ff4f8a95dd62c4ee89f86f93fd20e\",\"dweb:/ipfs/QmVnp9quJ3gSHNXiVMRrHx2nL982rdiosiz6v5rEqyTyvJ\"]},\"non-fungible-royalty-token/contracts/IERC1190Owner.sol\":{\"keccak256\":\"0x3b3eb1a173a0c912b83b97446793e9c456b3f04ef968b866cc5db1788fb78827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6092fb88805deb255a39ab7b15049de42c1242b822edb68707c74a062d7626d8\",\"dweb:/ipfs/QmWcgWeFCjed5CJKuT6UoTszRj1C25ESEgX9n8Ab5neDNW\"]},\"non-fungible-royalty-token/contracts/IERC1190OwnershipLicenseReceiver.sol\":{\"keccak256\":\"0xea676c2f50bff066256ff8cedf8a092971a2fb124f964c91e7d8739d9b35cbc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b09a8d9ad2954151b7c22bd6434c16898237494efaf54bf842b105fb24e6d58\",\"dweb:/ipfs/QmNj1accKopyGKxdcSfStz1gCcQBmr319quhxS7K1B2yiD\"]},\"non-fungible-royalty-token/contracts/IERC1190Renter.sol\":{\"keccak256\":\"0x437edfff992d3e85c39ed53b3b92e466f83d7e8013d02cee94894bb27f5f9830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1241705d5d61fd2b121c728dabbddd92171b1bd6e502b61deb765e29e66d64f3\",\"dweb:/ipfs/QmNmxf88PBVAG8oM4GVWgRbpNisK7dNQosce6wALX2LXce\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102195760003560e01c80638d6cf8bc1161011d578063b042ce94116100b0578063e985e9c51161007f578063f2fde38b11610064578063f2fde38b14610641578063f3e4198e14610661578063f9de1d831461068157600080fd5b8063e985e9c5146105d8578063ec2b20ac1461062157600080fd5b8063b042ce9414610565578063c66130d714610578578063c87b56dd14610598578063de8e7bab146105b857600080fd5b8063a22cb465116100ec578063a22cb465146104e5578063a333818c14610505578063aad1b61714610532578063afe9a4ff1461055257600080fd5b80638d6cf8bc146104725780638da5cb5b1461049257806395d89b41146104b05780639f2cd0e4146104c557600080fd5b80633c734234116101b05780636352211e1161017f578063715018a611610164578063715018a61461041d57806379b66eb7146104325780638c4b5a921461045257600080fd5b80636352211e146103dd5780636ebd773d146103fd57600080fd5b80633c7342341461035d5780634909d94e1461037d5780634cd5ca8e1461039d578063606428f7146103bd57600080fd5b80630b97be96116101ec5780630b97be96146102cf578063224157ea146102ef57806325dc12641461030f578063352926a81461032f57600080fd5b806301ffc9a71461021e57806306fdde0314610253578063081812fc14610275578063095ea7b3146102ad575b600080fd5b34801561022a57600080fd5b5061023e610239366004613866565b610694565b60405190151581526020015b60405180910390f35b34801561025f57600080fd5b50610268610758565b60405161024a91906138db565b34801561028157600080fd5b506102956102903660046138ee565b6107ea565b6040516001600160a01b03909116815260200161024a565b3480156102b957600080fd5b506102cd6102c8366004613923565b61086d565b005b3480156102db57600080fd5b506102cd6102ea366004613963565b6109c6565b3480156102fb57600080fd5b5061029561030a3660046138ee565b610a7a565b34801561031b57600080fd5b506102cd61032a366004613a3f565b610b05565b34801561033b57600080fd5b5061034f61034a366004613a8c565b610b20565b60405190815260200161024a565b34801561036957600080fd5b506102cd610378366004613963565b610bb5565b34801561038957600080fd5b506102cd610398366004613a3f565b610c63565b3480156103a957600080fd5b5061034f6103b8366004613acf565b610d10565b3480156103c957600080fd5b5061034f6103d8366004613aea565b610daa565b3480156103e957600080fd5b506102956103f83660046138ee565b61112a565b34801561040957600080fd5b506102cd610418366004613aea565b6111b5565b34801561042957600080fd5b506102cd6112ed565b34801561043e57600080fd5b506102cd61044d366004613b16565b611353565b34801561045e57600080fd5b506102cd61046d366004613a3f565b611469565b34801561047e57600080fd5b506102cd61048d366004613aea565b611484565b34801561049e57600080fd5b50600d546001600160a01b0316610295565b3480156104bc57600080fd5b5061026861159f565b3480156104d157600080fd5b506102cd6104e0366004613a3f565b6115ae565b3480156104f157600080fd5b506102cd610500366004613b38565b61165b565b34801561051157600080fd5b506105256105203660046138ee565b61166a565b60405161024a9190613b74565b34801561053e57600080fd5b5061034f61054d366004613acf565b6116d6565b6102cd6105603660046138ee565b61175e565b6102cd610573366004613b16565b611a23565b34801561058457600080fd5b5061034f610593366004613acf565b611db3565b3480156105a457600080fd5b506102686105b33660046138ee565b611e4d565b3480156105c457600080fd5b506102cd6105d3366004613b16565b611f0b565b3480156105e457600080fd5b5061023e6105f3366004613bc1565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b34801561062d57600080fd5b506102cd61063c366004613b16565b612021565b34801561064d57600080fd5b506102cd61065c366004613acf565b612137565b34801561066d57600080fd5b506102cd61067c366004613beb565b612219565b6102cd61068f3660046138ee565b612224565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061070657507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061075257507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461076790613c1e565b80601f016020809104026020016040519081016040528092919081815260200182805461079390613c1e565b80156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b5050505050905090565b60006107f5826125b9565b6108515760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b60006108788261112a565b9050806001600160a01b0316836001600160a01b031614156109025760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e000000000000000000000000000000000000000000006064820152608401610848565b336001600160a01b038216148061091e575061091e81336105f3565b6109b65760405162461bcd60e51b815260206004820152605060248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206f662074686520746f6b656e206e6f7220617070726f7660648201527f656420746f206d616e6167652069742e00000000000000000000000000000000608482015260a401610848565b6109c18184846125f8565b505050565b6109d03383612661565b610a685760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a401610848565b610a748484848461273d565b50505050565b6000818152600360205260408120546001600160a01b0316806107525760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e0000000000000000000000006064820152608401610848565b6109c183838360405180602001604052806000815250610bb5565b600d546000906001600160a01b03163314610b7d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610848565b610b8b600e80546001019055565b6000610b96600e5490565b9050610ba285826127c8565b610bad8185856129b3565b949350505050565b610bbf3383612b46565b610c575760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a401610848565b610a7484848484612bb3565b610c6d3382612661565b610d055760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a401610848565b6109c1838383612bca565b60006001600160a01b038216610d8e5760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e00000000000000000000000000006064820152608401610848565b506001600160a01b031660009081526007602052604090205490565b6000610db5836125b9565b610e0c5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610848565b6001600160a01b038216610e765760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610848565b60008381526004602090815260408083206001600160a01b0386168452909152902054610f0b5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e000000000000000000000000000000000000006064820152608401610848565b60008381526004602090815260408083206001600160a01b0386168452909152902054610f3a426103e8613c6f565b8110156111005760008481526004602090815260408083206001600160a01b03871684529091528120819055805b60008681526005602052604090205481108015610f83575081155b156110cf57600086815260056020526040902080546001600160a01b038716919083908110610fb457610fb4613c8e565b6000918252602090912001546001600160a01b031614156110bd5760008681526005602052604090208054610feb90600190613ca4565b81548110610ffb57610ffb613c8e565b60009182526020808320909101548883526005909152604090912080546001600160a01b03909216918390811061103457611034613c8e565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03949094169390931790925587815260059091526040902080548061108957611089613cbb565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b806110c781613cd1565b915050610f68565b506001600160a01b03841660009081526008602052604081208054600192906110f9908490613ca4565b9091555050505b505060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b6000818152600260205260408120546001600160a01b0316806107525760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e0000000000000000000000000000000000000000006064820152608401610848565b6001600160a01b0381166112575760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865204372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a401610848565b600061126283610a7a565b9050336001600160a01b038216146112e25760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e00006064820152608401610848565b6109c18183856115ae565b600d546001600160a01b031633146113475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610848565b6113516000612dd2565b565b61135c826125b9565b6113bb5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b600081116114575760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a401610848565b60009182526010602052604090912055565b6109c1838383604051806020016040528060008152506109c6565b6001600160a01b0381166115145760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865204f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a401610848565b600061151f8361112a565b9050336001600160a01b038216146112e25760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e006064820152608401610848565b60606001805461076790613c1e565b6115b83382612b46565b6116505760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a401610848565b6109c1838383612e31565b611666338383613039565b5050565b6000818152600560209081526040918290208054835181840281018401909452808452606093928301828280156116ca57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116ac575b50505050509050919050565b60006001600160a01b0382166117425760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610848565b506001600160a01b031660009081526008602052604090205490565b611767816125b9565b6117c65760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b60008181526011602052604090205461186d5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a401610848565b60008181526011602052604090205434101561193d5760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c401610848565b336119d65760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a401610848565b60006119e182610a7a565b90506119ee8133846115ae565b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156109c1573d6000803e3d6000fd5b611a2c826125b9565b611a8b5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b600082815260126020526040902054611b325760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a401610848565b600042611b416103e884613d02565b611b4b9190613ca4565b905060008111611bc35760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e00000000000000000000000000006064820152608401610848565b600083815260126020526040812054611bdc9083613c6f565b905080341015611c7a5760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a401610848565b6000611c858561112a565b90506000611c9286610a7a565b9050611c9f338787612219565b806001600160a01b0316826001600160a01b03161415611cf4576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015611cee573d6000803e3d6000fd5b50611dab565b6000611cff87613127565b90506001600160a01b0383166108fc6064611d1a8482613d16565b611d279060ff1634613c6f565b611d319190613d02565b6040518115909202916000818181858888f19350505050158015611d59573d6000803e3d6000fd5b506001600160a01b0382166108fc6064611d7660ff851634613c6f565b611d809190613d02565b6040518115909202916000818181858888f19350505050158015611da8573d6000803e3d6000fd5b50505b505050505050565b60006001600160a01b038216611e315760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e000000000000000000000000000000000000000000006064820152608401610848565b506001600160a01b031660009081526006602052604090205490565b6060611e58826125b9565b611eaf5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610848565b6000611eb96131a0565b90506000815111611ed95760405180602001604052806000815250611f04565b80611ee3846131af565b604051602001611ef4929190613d39565b6040516020818303038152906040525b9392505050565b611f14826125b9565b611f735760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b6000811161200f5760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a401610848565b60009182526011602052604090912055565b61202a826125b9565b6120895760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b600081116121255760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a401610848565b60009182526012602052604090912055565b600d546001600160a01b031633146121915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610848565b6001600160a01b03811661220d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610848565b61221681612dd2565b50565b6109c18383836132e1565b61222d816125b9565b61228c5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610848565b6000818152601060205260409020546123335760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a401610848565b6000818152601060205260409020543410156124035760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c401610848565b3361248a5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a401610848565b60006124958261112a565b905060006124a283610a7a565b90506124af823385610c63565b806001600160a01b0316826001600160a01b031614156124fe576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610a74573d6000803e3d6000fd5b60006125098461346e565b90506001600160a01b0383166108fc60646125248482613d16565b6125319060ff1634613c6f565b61253b9190613d02565b6040518115909202916000818181858888f19350505050158015612563573d6000803e3d6000fd5b506001600160a01b0382166108fc606461258060ff851634613c6f565b61258a9190613d02565b6040518115909202916000818181858888f193505050501580156125b2573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906107525750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061266c826125b9565b6126c35760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610848565b60006126ce8361112a565b9050806001600160a01b0316846001600160a01b031614806127095750836001600160a01b03166126fe846107ea565b6001600160a01b0316145b80610bad57506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff16610bad565b612748848484612bca565b612754848484846134e7565b610a74576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e6064820152608401610848565b6001600160a01b0382166128445760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e000000000000000000000000000000000000000000000000006064820152608401610848565b61284d816125b9565b156128a55760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610848565b6001600160a01b03821660009081526006602052604081208054600192906128ce908490613d68565b90915550506001600160a01b03821660009081526007602052604081208054600192906128fc908490613d68565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b6129bc836125b9565b612a085760405162461bcd60e51b815260206004820152601d60248201527f455243313139303a20746f6b656e20616c7265616479206d696e7465640000006044820152606401610848565b60648260ff1611158015612a1a575060015b612a8c5760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e0000000000000000000000000000006064820152608401610848565b60648160ff1611158015612a9e575060015b612b105760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e0000006064820152608401610848565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b6000612b51826125b9565b612ba85760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610848565b60006126ce83610a7a565b612bbe848484612e31565b61275484848484613687565b6000612bd58261112a565b9050836001600160a01b0316816001600160a01b031614612c845760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a401610848565b6001600160a01b038316612d005760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e000000000000000000000000000000000000006064820152608401610848565b612d0c816000846125f8565b6001600160a01b0384166000908152600660205260408120805460019290612d35908490613ca4565b90915550506001600160a01b0383166000908152600660205260408120805460019290612d63908490613d68565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600d80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612e3c82610a7a565b9050836001600160a01b0316816001600160a01b031614612eeb5760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a401610848565b6001600160a01b038316612f675760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e000000000000000000000000000000000000006064820152608401610848565b612f73816000846125f8565b6001600160a01b0384166000908152600760205260408120805460019290612f9c908490613ca4565b90915550506001600160a01b0383166000908152600760205260408120805460019290612fca908490613d68565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156130c15760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e00000000000000000000000000000000000000006064820152608401610848565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b6000613132826125b9565b1561318a5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610848565b506000908152600a602052604090205460ff1690565b6060600f805461076790613c1e565b6060816131ef57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613219578061320381613cd1565b91506132129050600a83613d02565b91506131f3565b60008167ffffffffffffffff8111156132345761323461394d565b6040519080825280601f01601f19166020018201604052801561325e576020820181803683370190505b5090505b8415610bad57613273600183613ca4565b9150613280600a86613d80565b61328b906030613d68565b60f81b8183815181106132a0576132a0613c8e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506132da600a86613d02565b9450613262565b6001600160a01b03831661334b5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610848565b613354826125b9565b6133ab5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610848565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff19168317905590845260089092528220805491929091613424908490613d68565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b6000613479826125b9565b156134d15760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610848565b506000908152600b602052604090205460ff1690565b60006001600160a01b0384163b1561367c576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea76190613544903390899088908890600401613d94565b6020604051808303816000875af192505050801561357f575060408051601f3d908101601f1916820190925261357c91810190613dd0565b60015b613631573d8080156135ad576040519150601f19603f3d011682016040523d82523d6000602084013e6135b2565b606091505b508051613629576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e6064820152608401610848565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea76100000000000000000000000000000000000000000000000000000000149050610bad565b506001949350505050565b60006001600160a01b0384163b1561367c576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e0906136e4903390899088908890600401613d94565b6020604051808303816000875af192505050801561371f575060408051601f3d908101601f1916820190925261371c91810190613dd0565b60015b6137ed573d80801561374d576040519150601f19603f3d011682016040523d82523d6000602084013e613752565b606091505b5080516136295760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a401610848565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e000000000000000000000000000000000000000000000000000000000149050610bad565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461221657600080fd5b60006020828403121561387857600080fd5b8135611f0481613838565b60005b8381101561389e578181015183820152602001613886565b83811115610a745750506000910152565b600081518084526138c7816020860160208601613883565b601f01601f19169290920160200192915050565b602081526000611f0460208301846138af565b60006020828403121561390057600080fd5b5035919050565b80356001600160a01b038116811461391e57600080fd5b919050565b6000806040838503121561393657600080fd5b61393f83613907565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561397957600080fd5b61398285613907565b935061399060208601613907565b925060408501359150606085013567ffffffffffffffff808211156139b457600080fd5b818701915087601f8301126139c857600080fd5b8135818111156139da576139da61394d565b604051601f8201601f19908116603f01168101908382118183101715613a0257613a0261394d565b816040528281528a6020848701011115613a1b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215613a5457600080fd5b613a5d84613907565b9250613a6b60208501613907565b9150604084013590509250925092565b803560ff8116811461391e57600080fd5b600080600060608486031215613aa157600080fd5b613aaa84613907565b9250613ab860208501613a7b565b9150613ac660408501613a7b565b90509250925092565b600060208284031215613ae157600080fd5b611f0482613907565b60008060408385031215613afd57600080fd5b82359150613b0d60208401613907565b90509250929050565b60008060408385031215613b2957600080fd5b50508035926020909101359150565b60008060408385031215613b4b57600080fd5b613b5483613907565b915060208301358015158114613b6957600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015613bb55783516001600160a01b031683529284019291840191600101613b90565b50909695505050505050565b60008060408385031215613bd457600080fd5b613bdd83613907565b9150613b0d60208401613907565b600080600060608486031215613c0057600080fd5b613c0984613907565b95602085013595506040909401359392505050565b600181811c90821680613c3257607f821691505b60208210811415613c5357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613c8957613c89613c59565b500290565b634e487b7160e01b600052603260045260246000fd5b600082821015613cb657613cb6613c59565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415613ce557613ce5613c59565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082613d1157613d11613cec565b500490565b600060ff821660ff841680821015613d3057613d30613c59565b90039392505050565b60008351613d4b818460208801613883565b835190830190613d5f818360208801613883565b01949350505050565b60008219821115613d7b57613d7b613c59565b500190565b600082613d8f57613d8f613cec565b500690565b60006001600160a01b03808716835280861660208401525083604083015260806060830152613dc660808301846138af565b9695505050505050565b600060208284031215613de257600080fd5b8151611f048161383856fea2646970667358221220a255fefd44c7e06bf4aaab06365122bf2cdd50348d0203a296e568e5d1182ee964736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2189:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "210:821:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "259:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "268:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "271:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "261:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "261:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "261:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "238:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "246:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "253:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "230:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "220:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "284:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "300:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "294:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:13:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "288:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "316:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "334:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "338:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "342:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:18:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "320:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "367:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "369:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "369:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "369:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "363:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "356:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "353:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "398:17:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:20",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:7:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "402:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "424:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "444:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "438:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "428:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "478:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "502:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "498:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "498:13:20"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "494:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "490:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:31:20"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "523:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "486:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "460:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "586:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "588:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "588:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "588:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "545:10:20"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "542:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "565:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "577:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "562:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "539:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "536:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "628:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "655:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "663:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "648:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "648:18:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "675:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "685:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "679:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "735:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "744:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "737:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "737:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "737:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "712:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "720:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "708:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "708:15:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "725:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "704:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "704:24:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "730:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "701:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "698:53:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "760:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "769:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "764:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "825:87:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "854:6:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "862:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "850:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "850:14:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "846:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:23:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "885:6:20"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:1:20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "881:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "881:14:20"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "877:23:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "871:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "871:30:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "839:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:63:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "839:63:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "790:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "793:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "787:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:9:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "797:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "799:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "808:1:20"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "811:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "804:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "799:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "783:3:20",
                    "statements": []
                  },
                  "src": "779:133:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "942:59:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "971:6:20"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "979:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "967:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "967:15:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "963:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:24:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:35:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:35:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "927:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "930:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "924:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "921:80:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:15:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1019:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1010:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "184:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "192:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "200:5:20",
                "type": ""
              }
            ],
            "src": "146:885:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:621:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1227:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1236:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1239:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1229:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1229:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1229:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1191:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1252:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1272:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:16:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1256:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1291:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1305:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1305:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1317:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1301:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:18:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1295:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1346:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1355:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1358:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1348:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1348:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1342:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1331:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1328:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1371:71:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1414:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1425:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1434:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1381:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:61:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1371:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1451:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1488:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1473:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1467:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1455:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1533:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1507:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1517:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:20"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1600:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1585:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1611:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1556:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1628:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1665:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1644:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "1632:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1707:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1710:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "1684:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1694:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1681:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1678:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:20"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "1777:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1788:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1733:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1723:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1131:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1142:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1154:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1162:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1170:6:20",
                "type": ""
              }
            ],
            "src": "1036:766:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:325:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1886:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1889:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1933:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1939:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1907:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1980:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1982:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1996:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1992:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1982:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1960:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1950:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2070:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2098:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2094:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2094:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2135:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2128:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2156:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2156:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2156:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2026:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2049:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2046:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2023:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2020:161:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1842:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1851:6:20",
                "type": ""
              }
            ],
            "src": "1807:380:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:28519:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:133:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "81:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "92:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "99:66:20",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "88:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "88:78:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "78:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "78:89:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "71:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "71:97:20"
                  },
                  "nodeType": "YulIf",
                  "src": "68:117:20"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "47:5:20",
                "type": ""
              }
            ],
            "src": "14:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "311:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "313:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "313:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "313:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "286:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "295:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "282:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "282:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "307:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "278:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "278:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "275:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "336:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "349:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "340:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "405:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "381:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "381:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "430:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "420:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "231:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "242:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "254:6:20",
                "type": ""
              }
            ],
            "src": "196:245:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "551:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "574:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "551:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "611:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "611:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "604:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "586:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "521:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "532:4:20",
                "type": ""
              }
            ],
            "src": "446:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "710:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "705:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "791:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "791:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "814:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "810:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "804:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "804:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "784:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "784:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "731:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "734:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "728:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "742:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "744:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "753:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "749:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "749:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "744:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "724:3:20",
                    "statements": []
                  },
                  "src": "720:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "859:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "877:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "868:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "868:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "861:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "861:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "861:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "848:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "851:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "845:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "842:48:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "669:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "674:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "679:6:20",
                "type": ""
              }
            ],
            "src": "638:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:267:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "961:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "981:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "975:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:12:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "965:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1003:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "996:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1050:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:16:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1068:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1073:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:14:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1080:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1024:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1024:63:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:116:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1111:3:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1120:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1120:15:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1137:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1116:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1116:88:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:98:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1103:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:109:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1096:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "935:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "943:3:20",
                "type": ""
              }
            ],
            "src": "901:317:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1344:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1361:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1372:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1354:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1354:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1354:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1384:53:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1410:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1392:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:45:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1384:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1313:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1324:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1335:4:20",
                "type": ""
              }
            ],
            "src": "1223:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:110:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1539:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1548:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1560:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1528:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1589:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1612:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1599:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:20",
                "type": ""
              }
            ],
            "src": "1448:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:125:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1744:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1786:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1801:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:74:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1714:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1725:4:20",
                "type": ""
              }
            ],
            "src": "1633:226:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1913:147:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1945:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1932:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1923:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2038:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2047:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2040:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2040:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2040:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1974:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1985:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1992:42:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1981:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1981:54:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1971:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:65:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:73:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1961:93:20"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1892:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1903:5:20",
                "type": ""
              }
            ],
            "src": "1864:196:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2198:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2210:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2200:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2200:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2200:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2173:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2182:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2165:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2162:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2252:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2233:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2271:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2298:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2309:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2294:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2294:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2281:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2281:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2110:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2121:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2133:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2141:6:20",
                "type": ""
              }
            ],
            "src": "2065:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2373:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2376:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2463:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2494:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2324:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:1067:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2690:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2699:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2702:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2692:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2692:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2692:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2664:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2656:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2656:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2653:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2715:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2725:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2763:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2807:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2792:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2773:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2830:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2820:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2885:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2875:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2926:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2936:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2930:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2981:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2990:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2983:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2983:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2969:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2966:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2963:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3006:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3020:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3031:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3016:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3016:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3010:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3086:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3095:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3088:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3088:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3088:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3065:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3061:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3061:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3076:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3047:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3111:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3134:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3121:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:16:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3115:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3160:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3162:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3162:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3162:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3152:2:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3149:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3146:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3191:76:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3201:66:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3195:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3276:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3290:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3280:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3308:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3330:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3354:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3358:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3350:13:20"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3365:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3346:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3370:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3342:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3342:31:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "3375:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3312:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3438:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3440:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3440:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3440:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3397:10:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3409:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3394:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3417:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3429:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3414:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3391:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3388:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3476:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3480:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3507:6:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3515:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:18:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3541:2:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3545:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3537:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3537:11:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3550:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:20:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3555:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3530:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3527:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3606:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3602:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3623:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3627:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:11:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3632:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3589:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3589:46:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3589:46:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3659:6:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3667:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3655:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3655:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3651:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:24:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:35:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3688:16:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3698:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3688:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2585:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2596:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2608:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2616:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2624:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2632:6:20",
                "type": ""
              }
            ],
            "src": "2513:1197:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3819:224:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3865:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3874:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3877:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3867:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3867:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3867:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3840:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3849:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3836:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3836:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3832:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3829:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3890:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3919:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3900:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3938:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3982:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3948:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3948:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3995:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4022:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4033:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4018:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4005:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4005:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3995:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3769:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3780:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3792:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3800:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3808:6:20",
                "type": ""
              }
            ],
            "src": "3715:328:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4095:109:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4105:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4114:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4105:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4182:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4191:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4194:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4184:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4184:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4184:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4156:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4167:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4174:4:20",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4163:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4163:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4153:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4153:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4146:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4143:55:20"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4074:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4085:5:20",
                "type": ""
              }
            ],
            "src": "4048:156:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4309:226:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4355:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4364:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4367:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4357:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4357:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4357:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4330:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4339:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4351:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4322:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4322:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4319:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4380:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4409:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4390:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4380:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4428:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4459:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4470:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4455:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4455:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4438:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4438:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4428:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4483:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4514:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4525:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4510:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4510:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4493:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4493:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4483:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4259:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4270:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4282:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4290:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4298:6:20",
                "type": ""
              }
            ],
            "src": "4209:326:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4641:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4651:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4663:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4674:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4659:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4659:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4651:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4693:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4704:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4686:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4686:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4686:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4610:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4621:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4632:4:20",
                "type": ""
              }
            ],
            "src": "4540:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4792:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4838:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4847:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4850:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4840:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4840:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4840:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4813:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4822:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4809:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4809:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4834:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4805:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4802:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4863:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4892:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4873:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4873:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4863:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4758:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4769:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4781:6:20",
                "type": ""
              }
            ],
            "src": "4722:186:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5000:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5046:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5055:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5058:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5048:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5048:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5048:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5021:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5017:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5042:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5013:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5013:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5010:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5071:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5094:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5081:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5081:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5071:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5113:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5146:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5157:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5142:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5123:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5123:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5113:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4958:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4969:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4981:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4989:6:20",
                "type": ""
              }
            ],
            "src": "4913:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5259:161:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5305:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5314:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5317:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5307:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5307:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5307:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5280:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5289:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5276:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5276:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5301:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5272:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5272:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5269:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5330:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5353:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5340:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5340:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5330:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5372:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5399:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5410:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5395:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5395:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5382:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5217:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5228:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5240:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5248:6:20",
                "type": ""
              }
            ],
            "src": "5172:248:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5509:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5555:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5564:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5567:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5557:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5557:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5557:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5530:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5539:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5526:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5526:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5551:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5522:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5522:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5519:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5580:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5609:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5590:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5590:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5580:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5628:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5658:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5669:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5654:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5654:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5641:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5641:32:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5632:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5726:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5735:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5738:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5728:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5728:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5728:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5695:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5716:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5709:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5709:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5702:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5702:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5692:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5692:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5685:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5682:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5751:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5761:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5751:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5467:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5478:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5490:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5498:6:20",
                "type": ""
              }
            ],
            "src": "5425:347:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5928:530:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5938:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5948:2:20",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5942:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5959:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5977:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5988:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5973:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5973:18:20"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5963:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6007:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6018:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6000:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6000:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6000:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6030:17:20",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6041:6:20"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6034:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6056:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6076:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6070:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6070:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6060:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6099:6:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6107:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6092:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6092:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6092:22:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6123:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6134:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6145:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6130:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6130:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6123:3:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6157:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6175:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6183:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6171:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6171:15:20"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6161:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6195:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6204:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6199:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6263:169:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6284:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6299:6:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6293:5:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6293:13:20"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6308:42:20",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6289:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6289:62:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6277:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6277:75:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6277:75:20"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6365:19:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6376:3:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6381:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6372:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6372:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6365:3:20"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6397:25:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6411:6:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6419:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6407:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6407:15:20"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6397:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6225:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6228:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6222:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6222:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6236:18:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6238:14:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6247:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6250:1:20",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6243:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6243:9:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6238:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6218:3:20",
                    "statements": []
                  },
                  "src": "6214:218:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6441:11:20",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6449:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6441:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5897:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5908:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5919:4:20",
                "type": ""
              }
            ],
            "src": "5777:681:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6550:173:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6596:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6605:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6608:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6598:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6598:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6598:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6571:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6580:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6567:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6567:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6592:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6563:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6563:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6560:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6621:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6650:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6631:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6621:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6669:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6702:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6713:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6698:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6698:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6679:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6679:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6669:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6508:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6519:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6531:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6539:6:20",
                "type": ""
              }
            ],
            "src": "6463:260:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6832:218:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6878:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6887:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6890:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6880:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6880:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6880:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6853:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6862:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6849:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6849:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6874:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6845:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6845:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6842:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6903:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6932:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6913:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6903:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6978:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6989:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6974:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6974:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6961:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6951:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7002:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7029:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7040:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7025:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7025:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7012:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7012:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7002:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6782:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6793:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6805:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6813:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6821:6:20",
                "type": ""
              }
            ],
            "src": "6728:322:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7110:382:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7120:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7134:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7137:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "7130:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7130:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7151:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7181:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7187:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7177:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7177:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7155:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7228:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7230:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7244:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7252:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7240:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7240:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7230:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7208:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7201:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7201:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7198:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7318:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7339:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7342:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7332:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7332:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7332:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7440:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7443:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7433:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7433:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7433:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7468:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7471:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7461:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7461:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7461:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7274:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7297:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7305:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7294:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7294:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7271:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7268:218:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7090:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7099:6:20",
                "type": ""
              }
            ],
            "src": "7055:437:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7671:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7688:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7699:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7681:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7681:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7681:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7722:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7733:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7718:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7718:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7738:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7711:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7711:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7711:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7761:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7772:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7757:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7757:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20646f6573206e6f742065786973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7777:34:20",
                        "type": "",
                        "value": "ERC1190: The token does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7750:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7750:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7750:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7832:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7843:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7828:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7828:18:20"
                      },
                      {
                        "hexValue": "742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7848:4:20",
                        "type": "",
                        "value": "t."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7821:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7821:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7821:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7862:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7874:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7885:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7870:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7870:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7862:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7648:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7662:4:20",
                "type": ""
              }
            ],
            "src": "7497:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8074:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8091:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8102:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8084:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8084:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8084:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8125:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8136:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8121:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8121:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8141:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8114:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8114:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8114:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8164:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8175:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8160:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8160:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8180:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8153:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8153:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8153:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8235:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8246:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8231:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8231:18:20"
                      },
                      {
                        "hexValue": "656e74206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8251:12:20",
                        "type": "",
                        "value": "ent owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8224:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8224:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8224:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8273:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8285:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8296:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8281:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8281:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8273:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8051:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8065:4:20",
                "type": ""
              }
            ],
            "src": "7900:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8485:310:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8502:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8513:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8495:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8495:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8536:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8547:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8532:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8552:2:20",
                        "type": "",
                        "value": "80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8525:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8525:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8525:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8575:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8586:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8571:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8571:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8591:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8564:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8646:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8657:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8642:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8642:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206f662074686520746f6b656e206e6f7220617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8662:34:20",
                        "type": "",
                        "value": "he owner of the token nor approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8635:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8635:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8635:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8717:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8728:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8713:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8713:19:20"
                      },
                      {
                        "hexValue": "656420746f206d616e6167652069742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8734:18:20",
                        "type": "",
                        "value": "ed to manage it."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8706:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8706:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8706:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8762:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8774:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8785:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8770:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8770:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8762:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b27074ee76ec418c9d7f4fc560335c1ae7aa4fad63b677a287a84432bda5ab7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8462:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8476:4:20",
                "type": ""
              }
            ],
            "src": "8311:484:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8974:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8991:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9002:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8984:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8984:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8984:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9025:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9036:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9021:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9021:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9041:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9014:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9014:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9014:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9064:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9075:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9060:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9060:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9080:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9053:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9053:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9053:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9135:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9146:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9131:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9131:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206e6f7220617070726f76656420746f206d616e61676520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9151:34:20",
                        "type": "",
                        "value": "he owner nor approved to manage "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9124:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9124:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9124:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9206:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9217:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9202:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9202:19:20"
                      },
                      {
                        "hexValue": "74686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9223:12:20",
                        "type": "",
                        "value": "the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9195:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9195:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9195:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9245:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9257:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9268:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9253:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9253:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9245:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8951:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8965:4:20",
                "type": ""
              }
            ],
            "src": "8800:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9457:242:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9474:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9485:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9467:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9467:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9467:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9508:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9519:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9504:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9504:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9524:2:20",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9497:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9497:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9497:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9547:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9558:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9543:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9543:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206372656174697665206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9563:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has creative own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9536:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9536:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9536:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9618:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9629:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9614:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9614:18:20"
                      },
                      {
                        "hexValue": "657273686970206f76657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9634:22:20",
                        "type": "",
                        "value": "ership over tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9607:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9607:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9607:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9666:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9678:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9689:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9674:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9674:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9666:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9434:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9448:4:20",
                "type": ""
              }
            ],
            "src": "9283:416:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9878:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9895:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9906:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9888:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9888:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9888:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9929:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9940:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9925:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9925:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9945:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9918:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9918:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9968:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9979:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9964:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9964:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9984:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9957:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9957:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9957:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10028:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10040:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10051:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10036:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10036:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10028:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9855:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9869:4:20",
                "type": ""
              }
            ],
            "src": "9704:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10239:313:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10256:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10267:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10249:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10249:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10249:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10290:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10301:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10286:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10286:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10306:2:20",
                        "type": "",
                        "value": "83"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10279:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10279:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10279:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10329:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10340:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10325:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10325:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10345:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10318:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10318:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10318:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10400:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10411:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10396:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10396:18:20"
                      },
                      {
                        "hexValue": "6865206372656174697665206f776e6572206e6f7220617070726f7665642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10416:34:20",
                        "type": "",
                        "value": "he creative owner nor approved t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10389:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10389:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10389:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10471:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10482:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10467:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10467:19:20"
                      },
                      {
                        "hexValue": "6f206d616e6167652074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10488:21:20",
                        "type": "",
                        "value": "o manage the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10460:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10460:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10460:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10519:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10531:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10542:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10527:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10527:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10519:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10216:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10230:4:20",
                "type": ""
              }
            ],
            "src": "10065:487:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10731:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10748:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10759:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10741:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10741:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10741:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10782:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10793:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10778:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10778:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10798:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10771:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10771:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10821:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10832:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10817:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10817:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2063726561746976654f776e65722063616e6e6f74206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10837:34:20",
                        "type": "",
                        "value": "ERC1190: creativeOwner cannot be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10810:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10810:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10810:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10892:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10903:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10888:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10888:18:20"
                      },
                      {
                        "hexValue": "20746865207a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10908:20:20",
                        "type": "",
                        "value": " the zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10881:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10881:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10881:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10938:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10950:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10961:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10946:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10946:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10938:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10708:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10722:4:20",
                "type": ""
              }
            ],
            "src": "10557:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11150:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11167:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11178:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11160:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11160:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11160:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11201:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11212:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11197:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11197:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11217:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11190:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11190:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11190:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11240:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11251:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11236:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11236:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2072656e7465722063616e6e6f7420626520746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11256:34:20",
                        "type": "",
                        "value": "ERC1190: renter cannot be the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11229:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11229:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11311:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11322:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11307:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11307:18:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11327:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11300:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11300:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11300:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11350:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11362:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11373:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11358:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11358:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11350:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11127:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11141:4:20",
                "type": ""
              }
            ],
            "src": "10976:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11562:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11579:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11590:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11572:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11572:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11572:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11613:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11624:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11609:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11609:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11629:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11602:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11602:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11602:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11652:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11663:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11648:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11648:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652072656e74657220686173206e6f742072656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11668:34:20",
                        "type": "",
                        "value": "ERC1190: The renter has not rent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11641:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11641:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11641:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11723:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11734:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11719:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11719:18:20"
                      },
                      {
                        "hexValue": "65642074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11739:15:20",
                        "type": "",
                        "value": "ed the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11712:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11712:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11712:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11764:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11776:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11787:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11772:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11772:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11764:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11539:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11553:4:20",
                "type": ""
              }
            ],
            "src": "11388:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11834:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11851:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11854:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11844:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11844:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11844:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11948:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11951:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11941:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11941:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11941:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11972:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11975:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11965:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11965:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11965:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11802:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12043:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12162:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12164:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12164:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12164:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12074:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12067:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12067:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12060:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12060:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12082:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12089:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12157:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12085:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12085:74:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12079:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12079:81:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12056:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12056:105:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12053:131:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12193:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12208:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12211:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12204:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12204:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12193:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12022:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12025:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12031:7:20",
                "type": ""
              }
            ],
            "src": "11991:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12256:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12273:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12276:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12266:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12266:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12266:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12370:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12373:4:20",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12363:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12363:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12363:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12394:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12397:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12387:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12387:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12387:15:20"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "12224:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12462:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12484:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12486:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12486:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12486:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12478:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12481:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12475:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12475:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12472:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12515:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12527:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12530:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12523:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12523:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12515:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12444:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12447:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12453:4:20",
                "type": ""
              }
            ],
            "src": "12413:125:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12575:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12592:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12595:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12585:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12585:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12585:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12689:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12692:4:20",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12682:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12682:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12682:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12713:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12716:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12706:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12706:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12706:15:20"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "12543:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12779:148:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12870:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12872:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12872:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12872:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12795:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12802:66:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12792:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12792:77:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12789:103:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12901:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12912:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12919:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12908:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12908:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12901:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12761:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12771:3:20",
                "type": ""
              }
            ],
            "src": "12732:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13106:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13123:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13134:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13116:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13116:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13116:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13157:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13168:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13153:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13153:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13173:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13146:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13146:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13146:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13196:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13207:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13192:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13192:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206f776e657273686970206f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13212:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has ownership ov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13185:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13185:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13185:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13267:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13278:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13263:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13263:18:20"
                      },
                      {
                        "hexValue": "657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13283:13:20",
                        "type": "",
                        "value": "er tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13256:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13256:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13256:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13306:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13318:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13329:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13314:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13314:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13306:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13083:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13097:4:20",
                "type": ""
              }
            ],
            "src": "12932:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13518:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13535:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13546:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13528:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13528:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13528:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13569:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13580:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13565:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13565:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13585:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13558:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13558:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13558:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13608:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13619:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13604:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13604:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13624:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13597:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13597:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13597:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13679:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13690:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13675:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13675:18:20"
                      },
                      {
                        "hexValue": "20746865204372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13695:34:20",
                        "type": "",
                        "value": " the Creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13668:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13668:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13668:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13750:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13761:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13746:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13746:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13767:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13739:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13739:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13739:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13789:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13801:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13812:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13797:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13797:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13789:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13495:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13509:4:20",
                "type": ""
              }
            ],
            "src": "13344:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14001:252:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14018:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14029:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14011:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14011:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14011:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14052:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14063:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14048:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14048:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14068:2:20",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14041:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14041:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14041:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14091:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14102:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14087:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14087:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14107:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14080:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14080:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14080:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14162:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14173:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14158:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14158:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14178:32:20",
                        "type": "",
                        "value": " not own the creative license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14151:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14151:60:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14151:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14220:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14232:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14243:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14228:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14228:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14220:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13978:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13992:4:20",
                "type": ""
              }
            ],
            "src": "13827:426:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14432:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14449:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14460:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14442:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14442:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14442:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14483:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14494:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14479:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14479:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14499:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14472:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14472:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14472:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14522:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14533:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14518:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14518:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14538:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The token does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14511:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14511:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14511:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14593:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14604:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14589:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14589:18:20"
                      },
                      {
                        "hexValue": "6e6f742065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14609:12:20",
                        "type": "",
                        "value": "not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14582:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14582:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14582:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14631:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14643:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14654:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14639:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14639:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14631:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14409:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14423:4:20",
                "type": ""
              }
            ],
            "src": "14258:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14843:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14860:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14871:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14853:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14853:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14853:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14894:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14905:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14890:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14890:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14910:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14883:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14883:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14883:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14933:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14944:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14929:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14929:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14949:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14922:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14922:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14922:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15004:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15015:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15000:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15000:18:20"
                      },
                      {
                        "hexValue": "6963656e736520636f7374206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15020:34:20",
                        "type": "",
                        "value": "icense cost must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14993:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14993:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14993:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15075:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15086:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15071:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15071:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15092:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15064:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15064:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15064:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15107:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15119:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15130:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15115:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15115:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15107:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14820:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14834:4:20",
                "type": ""
              }
            ],
            "src": "14669:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15319:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15336:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15347:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15329:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15329:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15329:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15370:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15381:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15366:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15366:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15386:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15359:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15359:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15359:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15409:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15420:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15405:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15405:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15425:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15398:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15398:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15398:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15480:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15491:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15476:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15476:18:20"
                      },
                      {
                        "hexValue": "20746865204f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15496:34:20",
                        "type": "",
                        "value": " the Ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15469:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15469:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15551:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15562:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15547:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15547:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15568:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15540:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15540:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15540:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15591:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15603:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15614:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15599:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15599:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15591:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15296:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15310:4:20",
                "type": ""
              }
            ],
            "src": "15145:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15803:253:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15820:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15831:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15813:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15813:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15813:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15854:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15865:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15850:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15850:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15870:2:20",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15843:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15843:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15843:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15893:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15904:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15889:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15889:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15909:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15882:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15882:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15882:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15964:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15975:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15960:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15960:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15980:33:20",
                        "type": "",
                        "value": " not own the ownership license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15953:61:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15953:61:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16023:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16035:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16046:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16031:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16031:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16023:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15780:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15794:4:20",
                "type": ""
              }
            ],
            "src": "15629:427:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16235:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16252:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16263:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16245:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16245:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16245:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16286:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16297:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16282:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16282:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16302:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16275:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16275:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16275:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16325:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16336:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16321:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16321:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16341:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16314:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16314:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16314:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16396:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16407:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16392:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16392:18:20"
                      },
                      {
                        "hexValue": "63656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16412:34:20",
                        "type": "",
                        "value": "cense of this token cannot be tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16385:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16385:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16385:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16467:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16478:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16463:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16463:19:20"
                      },
                      {
                        "hexValue": "616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16484:12:20",
                        "type": "",
                        "value": "ansferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16456:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16456:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16456:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16506:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16518:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16529:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16514:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16514:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16506:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16212:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16226:4:20",
                "type": ""
              }
            ],
            "src": "16061:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16718:378:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16735:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16746:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16728:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16728:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16728:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16769:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16780:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16765:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16765:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16785:3:20",
                        "type": "",
                        "value": "107"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16758:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16758:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16758:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16809:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16820:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16805:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16805:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16825:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16798:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16798:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16798:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16880:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16891:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16876:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16876:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16896:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16869:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16869:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16869:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16951:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16962:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16947:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16947:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206372656174697665206c6963656e7365206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16968:34:20",
                        "type": "",
                        "value": "taining the creative license of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16940:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16940:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16940:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17023:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17034:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17019:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17019:19:20"
                      },
                      {
                        "hexValue": "7468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17040:13:20",
                        "type": "",
                        "value": "this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17012:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17012:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17012:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17063:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17075:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17086:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17071:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17071:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17063:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16695:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16709:4:20",
                "type": ""
              }
            ],
            "src": "16544:552:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17275:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17292:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17303:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17285:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17285:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17285:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17326:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17337:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17322:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17322:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17342:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17315:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17315:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17315:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17365:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17376:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17361:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17361:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17381:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17354:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17354:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17354:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17436:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17447:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17432:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17432:18:20"
                      },
                      {
                        "hexValue": "20746865206372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17452:34:20",
                        "type": "",
                        "value": " the creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17425:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17425:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17425:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17507:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17518:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17503:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17503:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17524:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17496:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17496:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17496:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17546:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17558:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17569:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17554:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17554:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17546:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17252:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17266:4:20",
                "type": ""
              }
            ],
            "src": "17101:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17758:295:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17775:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17786:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17768:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17768:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17768:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17809:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17820:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17805:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17805:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17825:2:20",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17798:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17798:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17798:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17848:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17859:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17844:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17844:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17864:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The asset relat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17837:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17837:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17837:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17919:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17930:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17915:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17915:18:20"
                      },
                      {
                        "hexValue": "656420746f207468697320746f6b656e206973206e6f742072656e7461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17935:34:20",
                        "type": "",
                        "value": "ed to this token is not rentable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17908:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17908:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17908:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17990:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18001:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17986:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17986:19:20"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18007:3:20",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17979:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17979:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17979:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18020:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18032:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18043:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18028:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18028:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18020:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17735:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17749:4:20",
                "type": ""
              }
            ],
            "src": "17584:469:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18090:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18107:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18110:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18100:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18100:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18100:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18204:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18207:4:20",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18197:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18197:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18197:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18228:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18231:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18221:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18221:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18221:15:20"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18058:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18293:74:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18316:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "18318:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18318:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18318:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18313:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18306:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18306:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "18303:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18347:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18356:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18359:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "18352:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18352:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "18347:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18278:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18281:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "18287:1:20",
                "type": ""
              }
            ],
            "src": "18247:120:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18546:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18574:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18556:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18556:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18556:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18597:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18608:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18593:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18593:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18613:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18586:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18586:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18586:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18636:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18647:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18632:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18632:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18652:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18625:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18625:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18625:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18707:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18718:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18703:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18703:18:20"
                      },
                      {
                        "hexValue": "206d75737420626520706f7369746976652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18723:20:20",
                        "type": "",
                        "value": " must be positive."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18696:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18696:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18696:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18753:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18765:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18776:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18761:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18761:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18753:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18523:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18537:4:20",
                "type": ""
              }
            ],
            "src": "18372:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18965:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18982:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18993:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18975:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18975:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18975:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19016:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19027:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19012:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19012:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19032:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19005:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19005:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19005:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19055:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19066:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19051:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19051:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19071:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19044:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19044:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19044:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19126:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19137:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19122:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19122:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420746f20636f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19142:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient to cov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19115:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19115:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19115:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19197:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19208:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19193:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19193:19:20"
                      },
                      {
                        "hexValue": "6572207468652072656e7420657870656e7365732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19214:23:20",
                        "type": "",
                        "value": "er the rent expenses."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19186:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19186:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19186:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19247:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19259:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19270:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19255:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19255:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19247:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18942:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18956:4:20",
                "type": ""
              }
            ],
            "src": "18791:489:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19332:148:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19342:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19357:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19360:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19353:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19353:12:20"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "19346:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19374:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19389:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19392:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19385:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19385:12:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "19378:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19422:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19424:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19424:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19424:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "19412:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "19417:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "19409:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19409:12:20"
                  },
                  "nodeType": "YulIf",
                  "src": "19406:38:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19453:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "19465:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "19470:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "19461:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19461:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "19453:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19314:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19317:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "19323:4:20",
                "type": ""
              }
            ],
            "src": "19285:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19659:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19676:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19687:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19669:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19669:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19669:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19710:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19721:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19706:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19706:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19726:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19699:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19699:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19699:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19749:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19760:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19745:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19745:18:20"
                      },
                      {
                        "hexValue": "455243313139303a206f776e65722063616e6e6f7420626520746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19765:34:20",
                        "type": "",
                        "value": "ERC1190: owner cannot be the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19738:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19738:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19738:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19820:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19831:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19816:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19816:18:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19836:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19809:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19809:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19809:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19858:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19870:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19881:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19866:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19866:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19858:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19636:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19650:4:20",
                "type": ""
              }
            ],
            "src": "19485:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20083:283:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20093:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20113:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20107:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20107:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20097:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20155:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20163:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20151:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20151:17:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20170:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20175:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20129:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20129:53:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20129:53:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20191:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20208:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20213:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20204:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20204:16:20"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "20195:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20229:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20251:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20245:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20245:13:20"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "20233:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20293:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20301:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20289:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20289:17:20"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "20308:5:20"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "20315:8:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20267:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20267:57:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20267:57:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20333:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "20344:5:20"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "20351:8:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20340:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20340:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20333:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20051:3:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20056:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20064:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20075:3:20",
                "type": ""
              }
            ],
            "src": "19896:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20545:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20562:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20573:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20555:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20555:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20555:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20596:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20607:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20592:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20592:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20612:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20585:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20585:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20585:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20635:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20646:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20631:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20631:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20651:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20624:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20624:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20706:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20717:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20702:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20702:18:20"
                      },
                      {
                        "hexValue": "63656e736520636f7374206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20722:34:20",
                        "type": "",
                        "value": "cense cost must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20695:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20695:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20695:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20777:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20788:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20773:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20773:19:20"
                      },
                      {
                        "hexValue": "302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20794:4:20",
                        "type": "",
                        "value": "0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20766:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20766:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20766:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20808:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20820:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20831:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20816:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20816:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20808:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20522:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20536:4:20",
                "type": ""
              }
            ],
            "src": "20371:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21020:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21037:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21048:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21030:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21030:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21030:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21071:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21082:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21067:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21067:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21087:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21060:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21060:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21060:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21110:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21121:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21106:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21106:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f7374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21126:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental cost"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21099:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21099:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21099:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21181:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21192:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21177:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21177:18:20"
                      },
                      {
                        "hexValue": "20706572207365636f6e64206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21197:34:20",
                        "type": "",
                        "value": " per second must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21170:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21170:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21170:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21252:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21263:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21248:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21248:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21269:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21241:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21241:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21241:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21284:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21296:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21307:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21292:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21292:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21284:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20997:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21011:4:20",
                "type": ""
              }
            ],
            "src": "20846:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21496:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21513:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21524:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21506:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21506:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21506:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21547:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21558:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21543:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21543:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21563:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21536:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21536:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21536:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21586:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21597:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21582:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21582:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21602:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21575:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21575:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21575:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21657:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21668:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21653:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21653:18:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21673:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21646:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21646:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21646:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21691:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21703:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21714:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21699:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21699:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21691:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21473:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21487:4:20",
                "type": ""
              }
            ],
            "src": "21322:402:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21903:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21920:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21931:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21913:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21913:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21913:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21954:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21965:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21950:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21950:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21970:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21943:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21943:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21943:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21993:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22004:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21989:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21989:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22009:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21982:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21982:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21982:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22064:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22075:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22060:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22060:18:20"
                      },
                      {
                        "hexValue": "6963656e7365206f66207468697320746f6b656e2063616e6e6f742062652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22080:34:20",
                        "type": "",
                        "value": "icense of this token cannot be t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22053:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22053:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22053:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22135:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22146:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22131:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22131:19:20"
                      },
                      {
                        "hexValue": "72616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22152:13:20",
                        "type": "",
                        "value": "ransferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22124:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22124:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22124:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22175:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22187:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22198:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22183:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22183:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22175:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21880:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21894:4:20",
                "type": ""
              }
            ],
            "src": "21729:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22387:379:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22404:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22415:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22397:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22397:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22397:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22438:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22449:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22434:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22434:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22454:3:20",
                        "type": "",
                        "value": "108"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22427:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22427:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22427:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22478:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22489:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22474:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22474:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22494:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22467:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22467:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22467:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22549:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22560:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22545:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22545:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22565:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22538:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22538:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22538:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22620:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22631:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22616:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22616:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206f776e657273686970206c6963656e7365206f66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22637:34:20",
                        "type": "",
                        "value": "taining the ownership license of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22609:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22609:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22609:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22692:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22703:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22688:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22688:19:20"
                      },
                      {
                        "hexValue": "207468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22709:14:20",
                        "type": "",
                        "value": " this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22681:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22681:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22681:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22733:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22745:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22756:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22741:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22741:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22733:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22364:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22378:4:20",
                "type": ""
              }
            ],
            "src": "22213:553:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22945:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22962:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22973:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22955:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22955:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22955:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22996:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23007:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22992:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22992:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23012:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22985:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22985:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22985:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23035:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23046:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23031:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23031:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23051:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23024:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23024:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23024:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23106:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23117:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23102:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23102:18:20"
                      },
                      {
                        "hexValue": "20746865206f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23122:34:20",
                        "type": "",
                        "value": " the ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23095:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23095:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23095:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23177:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23188:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23173:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23173:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23194:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23166:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23166:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23166:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23217:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23229:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23240:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23225:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23225:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23217:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22922:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22936:4:20",
                "type": ""
              }
            ],
            "src": "22771:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23429:254:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23446:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23457:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23439:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23439:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23439:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23480:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23491:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23476:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23476:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23496:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23469:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23469:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23519:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23530:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23515:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23515:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472616e7366657220746f20636f6e7472616374206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23535:34:20",
                        "type": "",
                        "value": "ERC1190: Transfer to contract no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23508:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23508:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23508:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23590:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23601:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23586:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23586:18:20"
                      },
                      {
                        "hexValue": "7420696d706c656d656e74696e6720494552433131393052656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23606:34:20",
                        "type": "",
                        "value": "t implementing IERC1190Receiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23579:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23579:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23579:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23650:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23662:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23673:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23658:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23658:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23650:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23406:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23420:4:20",
                "type": ""
              }
            ],
            "src": "23255:428:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23862:229:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23879:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23890:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23872:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23872:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23872:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23913:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23924:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23909:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23909:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23929:2:20",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23902:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23902:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23902:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23952:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23963:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23948:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23948:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f2063616e6e6f7420626520746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23968:34:20",
                        "type": "",
                        "value": "ERC1190: to cannot be the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23941:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23941:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23941:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24023:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24034:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24019:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24019:18:20"
                      },
                      {
                        "hexValue": "6464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24039:9:20",
                        "type": "",
                        "value": "ddress."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24012:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24012:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24012:37:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24058:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24070:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24081:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24066:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24066:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24058:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23839:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23853:4:20",
                "type": ""
              }
            ],
            "src": "23688:403:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24270:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24287:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24298:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24280:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24280:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24280:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24321:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24332:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24317:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24317:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24337:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24310:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24310:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24360:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24371:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24356:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24356:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20616c7265616479206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24376:34:20",
                        "type": "",
                        "value": "ERC1190: The token already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24349:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24349:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24349:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24431:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24442:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24427:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24427:18:20"
                      },
                      {
                        "hexValue": "732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24447:4:20",
                        "type": "",
                        "value": "s."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24420:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24420:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24420:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24461:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24473:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24484:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24469:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24469:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24461:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24247:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24261:4:20",
                "type": ""
              }
            ],
            "src": "24096:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24547:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24574:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "24576:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24576:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24576:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "24563:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "24570:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "24566:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24566:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "24560:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24560:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "24557:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24605:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "24616:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "24619:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24612:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24612:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "24605:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "24530:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "24533:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "24539:3:20",
                "type": ""
              }
            ],
            "src": "24499:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24806:179:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24823:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24834:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24816:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24816:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24816:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24857:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24868:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24853:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24853:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24873:2:20",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24846:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24846:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24846:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24896:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24907:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24892:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24892:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f6b656e20616c7265616479206d696e746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24912:31:20",
                        "type": "",
                        "value": "ERC1190: token already minted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24885:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24885:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24885:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24953:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24965:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24976:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24961:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24961:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24953:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e051fa44a8b6b5d8a68986e5094a412682411371b2426de7a46426392ad90731__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24783:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24797:4:20",
                "type": ""
              }
            ],
            "src": "24632:353:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25164:239:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25181:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25192:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25174:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25174:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25174:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25215:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25226:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25211:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25211:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25231:2:20",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25204:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25204:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25204:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25254:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25265:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25250:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25250:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f722072656e74616c206f757420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25270:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for rental out "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25243:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25243:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25243:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25325:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25336:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25321:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25321:18:20"
                      },
                      {
                        "hexValue": "6f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25341:19:20",
                        "type": "",
                        "value": "of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25314:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25314:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25314:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25370:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25382:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25393:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25378:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25378:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25370:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25141:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25155:4:20",
                "type": ""
              }
            ],
            "src": "24990:413:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25582:251:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25599:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25610:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25592:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25592:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25592:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25633:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25644:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25629:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25629:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25649:2:20",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25622:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25622:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25622:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25672:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25683:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25668:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25668:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f72206f776e6572736869702074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25688:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for ownership t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25661:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25661:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25661:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25743:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25754:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25739:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25739:18:20"
                      },
                      {
                        "hexValue": "72616e73666572206f7574206f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25759:31:20",
                        "type": "",
                        "value": "ransfer out of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25732:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25732:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25732:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25800:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25812:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25823:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25808:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25808:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25800:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25559:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25573:4:20",
                "type": ""
              }
            ],
            "src": "25408:425:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26012:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26029:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26040:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26022:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26022:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26022:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26063:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26074:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26059:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26059:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26079:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26052:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26052:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26052:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26102:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26113:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26098:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26098:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746865206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26118:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer the own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26091:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26091:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26091:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26173:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26184:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26169:18:20"
                      },
                      {
                        "hexValue": "657273686970206c6963656e7365206966206974206973206e6f74206f776e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26189:34:20",
                        "type": "",
                        "value": "ership license if it is not owne"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26162:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26162:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26162:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26244:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26255:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26240:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26240:19:20"
                      },
                      {
                        "hexValue": "642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26261:4:20",
                        "type": "",
                        "value": "d."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26233:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26233:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26233:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26275:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26287:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26298:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26283:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26283:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26275:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25989:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26003:4:20",
                "type": ""
              }
            ],
            "src": "25838:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26487:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26504:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26515:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26497:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26497:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26497:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26538:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26549:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26534:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26534:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26554:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26527:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26527:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26527:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26577:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26588:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26573:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26573:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746f2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26593:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer to the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26566:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26566:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26566:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26648:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26659:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26644:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26644:18:20"
                      },
                      {
                        "hexValue": "7a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26664:15:20",
                        "type": "",
                        "value": "zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26637:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26637:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26637:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26689:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26701:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26712:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26697:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26697:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26689:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26464:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26478:4:20",
                "type": ""
              }
            ],
            "src": "26313:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26901:234:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26918:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26929:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26911:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26911:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26911:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26952:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26963:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26948:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26948:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26968:2:20",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26941:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26941:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26941:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26991:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27002:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26987:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26987:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20546865206f776e65722063616e6e6f7420617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27007:34:20",
                        "type": "",
                        "value": "ERC1190: The owner cannot approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26980:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26980:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26980:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27062:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27073:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27058:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27058:18:20"
                      },
                      {
                        "hexValue": "6520746865697273656c662e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27078:14:20",
                        "type": "",
                        "value": "e theirself."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27051:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27051:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27051:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27102:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27114:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27125:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27110:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27110:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27102:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26878:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26892:4:20",
                "type": ""
              }
            ],
            "src": "26727:408:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27178:74:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "27201:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "27203:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "27203:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "27203:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "27198:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "27191:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27191:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "27188:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27232:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "27241:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "27244:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "27237:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27237:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "27232:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "27163:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "27166:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "27172:1:20",
                "type": ""
              }
            ],
            "src": "27140:112:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27460:309:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "27470:52:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "27480:42:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "27474:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27538:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "27553:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "27561:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "27549:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27549:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27531:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27531:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27531:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27585:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27596:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27581:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27581:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "27605:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "27613:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "27601:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27601:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27574:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27574:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27574:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27637:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27648:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27633:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27633:18:20"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "27653:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27626:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27626:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27626:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27680:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27691:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27676:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27676:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27696:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27669:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27669:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27669:31:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27709:54:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "27735:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27747:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27758:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27743:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27743:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "27717:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27717:46:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27709:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27405:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "27416:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "27424:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "27432:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "27440:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27451:4:20",
                "type": ""
              }
            ],
            "src": "27257:512:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27854:169:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "27900:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "27909:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "27912:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "27902:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "27902:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "27902:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "27875:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27884:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27871:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27871:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27896:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "27867:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27867:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "27864:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "27925:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27944:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "27938:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27938:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "27929:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "27987:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "27963:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27963:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27963:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28002:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "28012:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "28002:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27820:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "27831:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "27843:6:20",
                "type": ""
              }
            ],
            "src": "27774:249:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28202:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28219:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28230:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28212:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28212:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28212:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28253:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28264:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28249:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28249:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28269:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28242:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28242:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28242:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28292:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28303:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28288:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28288:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472696564207472616e7366657220746f20636f6e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28308:34:20",
                        "type": "",
                        "value": "ERC1190: Tried transfer to contr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28281:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28281:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28281:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28363:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28374:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28359:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28359:18:20"
                      },
                      {
                        "hexValue": "616374206e6f7420696d706c656d656e74696e67204945524331313930437265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28379:34:20",
                        "type": "",
                        "value": "act not implementing IERC1190Cre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28352:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28352:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28352:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28434:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28445:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28430:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28430:19:20"
                      },
                      {
                        "hexValue": "61746976654c6963656e736552656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28451:23:20",
                        "type": "",
                        "value": "ativeLicenseReceiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28423:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28423:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28423:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28484:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28496:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28507:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28492:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28492:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28484:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28179:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28193:4:20",
                "type": ""
              }
            ],
            "src": "28028:489:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token does not exis\")\n        mstore(add(headStart, 96), \"t.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b27074ee76ec418c9d7f4fc560335c1ae7aa4fad63b677a287a84432bda5ab7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner of the token nor approv\")\n        mstore(add(headStart, 128), \"ed to manage it.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner nor approved to manage \")\n        mstore(add(headStart, 128), \"the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has creative own\")\n        mstore(add(headStart, 96), \"ership over tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he creative owner nor approved t\")\n        mstore(add(headStart, 128), \"o manage the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190: creativeOwner cannot be\")\n        mstore(add(headStart, 96), \" the zero address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: renter cannot be the ze\")\n        mstore(add(headStart, 96), \"ro address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: The renter has not rent\")\n        mstore(add(headStart, 96), \"ed the token.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has ownership ov\")\n        mstore(add(headStart, 96), \"er tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the Creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the creative license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The token does \")\n        mstore(add(headStart, 96), \"not exist.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense cost must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the Ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the ownership license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense of this token cannot be tr\")\n        mstore(add(headStart, 128), \"ansferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 107)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the creative license of \")\n        mstore(add(headStart, 160), \"this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The asset relat\")\n        mstore(add(headStart, 96), \"ed to this token is not rentable\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental time\")\n        mstore(add(headStart, 96), \" must be positive.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient to cov\")\n        mstore(add(headStart, 128), \"er the rent expenses.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: owner cannot be the zer\")\n        mstore(add(headStart, 96), \"o address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense cost must be greater than \")\n        mstore(add(headStart, 128), \"0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental cost\")\n        mstore(add(headStart, 96), \" per second must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense of this token cannot be t\")\n        mstore(add(headStart, 128), \"ransferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 108)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the ownership license of\")\n        mstore(add(headStart, 160), \" this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"ERC1190: Transfer to contract no\")\n        mstore(add(headStart, 96), \"t implementing IERC1190Receiver.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC1190: to cannot be the zero a\")\n        mstore(add(headStart, 96), \"ddress.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token already exist\")\n        mstore(add(headStart, 96), \"s.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e051fa44a8b6b5d8a68986e5094a412682411371b2426de7a46426392ad90731__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC1190: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for rental out \")\n        mstore(add(headStart, 96), \"of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for ownership t\")\n        mstore(add(headStart, 96), \"ransfer out of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer the own\")\n        mstore(add(headStart, 96), \"ership license if it is not owne\")\n        mstore(add(headStart, 128), \"d.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer to the \")\n        mstore(add(headStart, 96), \"zero address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC1190: The owner cannot approv\")\n        mstore(add(headStart, 96), \"e theirself.\")\n        tail := add(headStart, 128)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190: Tried transfer to contr\")\n        mstore(add(headStart, 96), \"act not implementing IERC1190Cre\")\n        mstore(add(headStart, 128), \"ativeLicenseReceiver.\")\n        tail := add(headStart, 160)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "261:9734:8:-:0;;;843:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2234:17:7;;951:9:8;;962:11;;2234:17:7;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;2262:21:7;;;;:7;;:21;;;;;:::i;:::-;;2159:132;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;989:20:8;;::::1;::::0;:5:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;843:173:::0;;;261:9734;;640:96:2;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;261:9734:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:9734:8;;;-1:-1:-1;261:9734:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:766::-;1154:6;1162;1170;1223:2;1211:9;1202:7;1198:23;1194:32;1191:52;;;1239:1;1236;1229:12;1191:52;1266:16;;-1:-1:-1;;;;;1331:14:20;;;1328:34;;;1358:1;1355;1348:12;1328:34;1381:61;1434:7;1425:6;1414:9;1410:22;1381:61;:::i;:::-;1371:71;;1488:2;1477:9;1473:18;1467:25;1451:41;;1517:2;1507:8;1504:16;1501:36;;;1533:1;1530;1523:12;1501:36;1556:63;1611:7;1600:8;1589:9;1585:24;1556:63;:::i;:::-;1546:73;;1665:2;1654:9;1650:18;1644:25;1628:41;;1694:2;1684:8;1681:16;1678:36;;;1710:1;1707;1700:12;1678:36;;1733:63;1788:7;1777:8;1766:9;1762:24;1733:63;:::i;:::-;1723:73;;;1036:766;;;;;:::o;1807:380::-;1886:1;1882:12;;;;1929;;;1950:61;;2004:4;1996:6;1992:17;1982:27;;1950:61;2057:2;2049:6;2046:14;2026:18;2023:38;2020:161;;;2103:10;2098:3;2094:20;2091:1;2084:31;2138:4;2135:1;2128:15;2166:4;2163:1;2156:15;2020:161;;1807:380;;;:::o;:::-;261:9734:8;;;;;;",
  "deployedSourceMap": "261:9734:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:357:7;;;;;;;;;;-1:-1:-1;2363:357:7;;;;;:::i;:::-;;:::i;:::-;;;611:14:20;;604:22;586:41;;574:2;559:18;2363:357:7;;;;;;;;5079:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7538:261::-;;;;;;;;;;-1:-1:-1;7538:261:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1797:55:20;;;1779:74;;1767:2;1752:18;7538:261:7;1633:226:20;6693:452:7;;;;;;;;;;-1:-1:-1;6693:452:7;;;;;:::i;:::-;;:::i;:::-;;11673:418;;;;;;;;;;-1:-1:-1;11673:418:7;;;;;:::i;:::-;;:::i;4378:379::-;;;;;;;;;;-1:-1:-1;4378:379:7;;;;;:::i;:::-;;:::i;13974:207::-;;;;;;;;;;-1:-1:-1;13974:207:7;;;;;:::i;:::-;;:::i;1384:446:8:-;;;;;;;;;;-1:-1:-1;1384:446:8;;;;;:::i;:::-;;:::i;:::-;;;4686:25:20;;;4674:2;4659:18;1384:446:8;4540:177:20;14264:433:7;;;;;;;;;;-1:-1:-1;14264:433:7;;;;;:::i;:::-;;:::i;10133:376::-;;;;;;;;;;-1:-1:-1;10133:376:7;;;;;:::i;:::-;;:::i;3175:355::-;;;;;;;;;;-1:-1:-1;3175:355:7;;;;;:::i;:::-;;:::i;20049:1375::-;;;;;;;;;;-1:-1:-1;20049:1375:7;;;;;:::i;:::-;;:::i;3977:330::-;;;;;;;;;;-1:-1:-1;3977:330:7;;;;;:::i;:::-;;:::i;8214:513:8:-;;;;;;;;;;-1:-1:-1;8214:513:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;2066:407:8:-;;;;;;;;;;-1:-1:-1;2066:407:8;;;;;:::i;:::-;;:::i;11380:209:7:-;;;;;;;;;;-1:-1:-1;11380:209:7;;;;;:::i;:::-;;:::i;5821:484:8:-;;;;;;;;;;-1:-1:-1;5821:484:8;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;5251:106:7;;;;;;;;;;;;;:::i;12660:391::-;;;;;;;;;;-1:-1:-1;12660:391:7;;;;;:::i;:::-;;:::i;7872:187::-;;;;;;;;;;-1:-1:-1;7872:187:7;;;;;:::i;:::-;;:::i;4822:189::-;;;;;;;;;;-1:-1:-1;4822:189:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3601:313::-;;;;;;;;;;-1:-1:-1;3601:313:7;;;;;:::i;:::-;;:::i;9066:927:8:-;;;;;;:::i;:::-;;:::i;4083:1443::-;;;;;;:::i;:::-;;:::i;2790:307:7:-;;;;;;;;;;-1:-1:-1;2790:307:7;;;;;:::i;:::-;;:::i;5868:420::-;;;;;;;;;;-1:-1:-1;5868:420:7;;;;;:::i;:::-;;:::i;2708:404:8:-;;;;;;;;;;-1:-1:-1;2708:404:8;;;;;:::i;:::-;;:::i;8649:214:7:-;;;;;;;;;;-1:-1:-1;8649:214:7;;;;;:::i;:::-;-1:-1:-1;;;;;8820:25:7;;;8791:4;8820:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8649:214;3309:382:8;;;;;;;;;;-1:-1:-1;3309:382:8;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;19135:220:7:-;;;;;;;;;;-1:-1:-1;19135:220:7;;;;;:::i;:::-;;:::i;6647:1255:8:-;;;;;;:::i;:::-;;:::i;2363:357:7:-;2510:4;2552:41;;;;;:107;;-1:-1:-1;2610:49:7;;;2625:34;2610:49;2552:107;:160;;;-1:-1:-1;952:25:5;937:40;;;;2676:36:7;2532:180;2363:357;-1:-1:-1;;2363:357:7:o;5079:102::-;5135:13;5168:5;5161:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5079:102;:::o;7538:261::-;7659:7;7692:16;7700:7;7692;:16::i;:::-;7684:63;;;;-1:-1:-1;;;7684:63:7;;7699:2:20;7684:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;7684:63:7;;;;;;;;;-1:-1:-1;7767:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;7767:24:7;;7538:261::o;6693:452::-;6774:13;6790:24;6806:7;6790:15;:24::i;:::-;6774:40;;6839:5;-1:-1:-1;;;;;6833:11:7;:2;-1:-1:-1;;;;;6833:11:7;;;6825:66;;;;-1:-1:-1;;;6825:66:7;;8102:2:20;6825:66:7;;;8084:21:20;8141:2;8121:18;;;8114:30;8180:34;8160:18;;;8153:62;8251:12;8231:18;;;8224:40;8281:19;;6825:66:7;7900:406:20;6825:66:7;719:10:2;-1:-1:-1;;;;;6926:21:7;;;;:62;;-1:-1:-1;6951:37:7;6968:5;719:10:2;8649:214:7;:::i;6951:37::-;6904:192;;;;-1:-1:-1;;;6904:192:7;;8513:2:20;6904:192:7;;;8495:21:20;8552:2;8532:18;;;8525:30;8591:34;8571:18;;;8564:62;8662:34;8642:18;;;8635:62;8734:18;8713:19;;;8706:47;8770:19;;6904:192:7;8311:484:20;6904:192:7;7109:28;7118:5;7125:2;7129:7;7109:8;:28::i;:::-;6763:382;6693:452;;:::o;11673:418::-;11873:41;719:10:2;11906:7:7;11873:18;:41::i;:::-;11851:165;;;;-1:-1:-1;;;11851:165:7;;9002:2:20;11851:165:7;;;8984:21:20;9041:2;9021:18;;;9014:30;9080:34;9060:18;;;9053:62;9151:34;9131:18;;;9124:62;9223:12;9202:19;;;9195:41;9253:19;;11851:165:7;8800:478:20;11851:165:7;12029:54;12059:4;12065:2;12069:7;12078:4;12029:29;:54::i;:::-;11673:418;;;;:::o;4378:379::-;4503:7;4552:24;;;:15;:24;;;;;;-1:-1:-1;;;;;4552:24:7;4609:27;4587:129;;;;-1:-1:-1;;;4587:129:7;;9485:2:20;4587:129:7;;;9467:21:20;9524:2;9504:18;;;9497:30;9563:34;9543:18;;;9536:62;9634:22;9614:18;;;9607:50;9674:19;;4587:129:7;9283:416:20;13974:207:7;14123:50;14151:4;14157:2;14161:7;14123:50;;;;;;;;;;;;:27;:50::i;1384:446:8:-;1108:6:0;;1532:7:8;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;9906:2:20;1240:68:0;;;9888:21:20;;;9925:18;;;9918:30;9984:34;9964:18;;;9957:62;10036:18;;1240:68:0;9704:356:20;1240:68:0;1551:21:8::1;:9;1032:19:3::0;;1050:1;1032:19;;;945:123;1551:21:8::1;1583:17;1603:19;:9;918:14:3::0;;827:112;1603:19:8::1;1583:39;;1632:31;1644:7;1653:9;1632:11;:31::i;:::-;1673:123;1706:9;1729:16;1759:27;1673:19;:123::i;:::-;1814:9:::0;1384:446;-1:-1:-1;;;;1384:446:8:o;14264:433:7:-;14463:49;719:10:2;14504:7:7;14463:26;:49::i;:::-;14441:182;;;;-1:-1:-1;;;14441:182:7;;10267:2:20;14441:182:7;;;10249:21:20;10306:2;10286:18;;;10279:30;10345:34;10325:18;;;10318:62;10416:34;10396:18;;;10389:62;10488:21;10467:19;;;10460:50;10527:19;;14441:182:7;10065:487:20;14441:182:7;14636:53;14665:4;14671:2;14675:7;14684:4;14636:28;:53::i;10133:376::-;10301:41;719:10:2;10334:7:7;10301:18;:41::i;:::-;10279:165;;;;-1:-1:-1;;;10279:165:7;;9002:2:20;10279:165:7;;;8984:21:20;9041:2;9021:18;;;9014:30;9080:34;9060:18;;;9053:62;9151:34;9131:18;;;9124:62;9223:12;9202:19;;;9195:41;9253:19;;10279:165:7;8800:478:20;10279:165:7;10457:44;10483:4;10489:2;10493:7;10457:25;:44::i;3175:355::-;3313:7;-1:-1:-1;;;;;3360:27:7;;3338:127;;;;-1:-1:-1;;;3338:127:7;;10759:2:20;3338:127:7;;;10741:21:20;10798:2;10778:18;;;10771:30;10837:34;10817:18;;;10810:62;10908:20;10888:18;;;10881:48;10946:19;;3338:127:7;10557:414:20;3338:127:7;-1:-1:-1;;;;;;3485:37:7;;;;;:22;:37;;;;;;;3175:355::o;20049:1375::-;20170:7;20203:16;20211:7;20203;:16::i;:::-;20195:63;;;;-1:-1:-1;;;20195:63:7;;7699:2:20;20195:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;20195:63:7;7497:398:20;20195:63:7;-1:-1:-1;;;;;20293:20:7;;20271:113;;;;-1:-1:-1;;;20271:113:7;;11178:2:20;20271:113:7;;;11160:21:20;11217:2;11197:18;;;11190:30;11256:34;11236:18;;;11229:62;-1:-1:-1;;;11307:18:20;;;11300:41;11358:19;;20271:113:7;10976:407:20;20271:113:7;20419:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20419:25:7;;;;;;;;;;20397:125;;;;-1:-1:-1;;;20397:125:7;;11590:2:20;20397:125:7;;;11572:21:20;11629:2;11609:18;;;11602:30;11668:34;11648:18;;;11641:62;11739:15;11719:18;;;11712:43;11772:19;;20397:125:7;11388:409:20;20397:125:7;20535:18;20556:17;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20556:25:7;;;;;;;;;;20611:22;:15;20629:4;20611:22;:::i;:::-;20598:10;:35;20594:778;;;20719:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20719:25:7;;;;;;;;;20712:32;;;20719:17;20791:527;20850:21;;;;:12;:21;;;;;:28;20846:32;;:41;;;;;20883:4;20882:5;20846:41;20791:527;;;20948:21;;;;:12;:21;;;;;:24;;-1:-1:-1;;;;;20948:34:7;;;:21;20970:1;;20948:24;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;20948:24:7;:34;20944:359;;;21144:21;;;;:12;:21;;;;;21166:28;;:32;;21197:1;;21166:32;:::i;:::-;21144:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;21117:21;;;:12;:21;;;;;;;:24;;-1:-1:-1;;;;;21144:55:7;;;;21139:1;;21117:24;;;;;;:::i;:::-;;;;;;;;;;;;;:82;;-1:-1:-1;;21117:82:7;-1:-1:-1;;;;;21117:82:7;;;;;;;;;;;21222:21;;;:12;:21;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;21222:27:7;;;;;-1:-1:-1;;21222:27:7;;;;;;;;-1:-1:-1;20944:359:7;20906:3;;;;:::i;:::-;;;;20791:527;;;-1:-1:-1;;;;;;21332:23:7;;;;;;:15;:23;;;;;:28;;21359:1;;21332:23;:28;;21359:1;;21332:28;:::i;:::-;;;;-1:-1:-1;;;20594:778:7;-1:-1:-1;;21391:17:7;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21391:25:7;;;;;;;;;;;;;20049:1375::o;3977:330::-;4094:7;4135:16;;;:7;:16;;;;;;-1:-1:-1;;;;;4135:16:7;4184:19;4162:112;;;;-1:-1:-1;;;4162:112:7;;13134:2:20;4162:112:7;;;13116:21:20;13173:2;13153:18;;;13146:30;13212:34;13192:18;;;13185:62;13283:13;13263:18;;;13256:41;13314:19;;4162:112:7;12932:407:20;8214:513:8;-1:-1:-1;;;;;8316:16:8;;8295:137;;;;-1:-1:-1;;;8295:137:8;;13546:2:20;8295:137:8;;;13528:21:20;13585:2;13565:18;;;13558:30;13624:34;13604:18;;;13597:62;13695:34;13675:18;;;13668:62;13767:12;13746:19;;;13739:41;13797:19;;8295:137:8;13344:478:20;8295:137:8;8443:21;8467:30;8489:7;8467:21;:30::i;:::-;8443:54;-1:-1:-1;719:10:2;-1:-1:-1;;;;;8529:35:8;;;8508:144;;;;-1:-1:-1;;;8508:144:8;;14029:2:20;8508:144:8;;;14011:21:20;14068:2;14048:18;;;14041:30;14107:34;14087:18;;;14080:62;14178:32;14158:18;;;14151:60;14228:19;;8508:144:8;13827:426:20;8508:144:8;8663:57;8693:13;8708:2;8712:7;8663:29;:57::i;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;9906:2:20;1240:68:0;;;9888:21:20;;;9925:18;;;9918:30;9984:34;9964:18;;;9957:62;10036:18;;1240:68:0;9704:356:20;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2066:407:8:-;2189:22;2203:7;2189:13;:22::i;:::-;2168:111;;;;-1:-1:-1;;;2168:111:8;;14460:2:20;2168:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;2168:111:8;14258:406:20;2168:111:8;2324:1;2311:10;:14;2290:128;;;;-1:-1:-1;;;2290:128:8;;14871:2:20;2290:128:8;;;14853:21:20;14910:2;14890:18;;;14883:30;14949:34;14929:18;;;14922:62;15020:34;15000:18;;;14993:62;15092:5;15071:19;;;15064:34;15115:19;;2290:128:8;14669:471:20;2290:128:8;2429:24;;;;:15;:24;;;;;;:37;2066:407::o;11380:209:7:-;11530:51;11559:4;11565:2;11569:7;11530:51;;;;;;;;;;;;:28;:51::i;5821:484:8:-;-1:-1:-1;;;;;5924:16:8;;5903:138;;;;-1:-1:-1;;;5903:138:8;;15347:2:20;5903:138:8;;;15329:21:20;15386:2;15366:18;;;15359:30;15425:34;15405:18;;;15398:62;15496:34;15476:18;;;15469:62;-1:-1:-1;;;15547:19:20;;;15540:42;15599:19;;5903:138:8;15145:479:20;5903:138:8;6052:13;6068:22;6082:7;6068:13;:22::i;:::-;6052:38;-1:-1:-1;719:10:2;-1:-1:-1;;;;;6122:27:8;;;6101:137;;;;-1:-1:-1;;;6101:137:8;;15831:2:20;6101:137:8;;;15813:21:20;15870:2;15850:18;;;15843:30;15909:34;15889:18;;;15882:62;15980:33;15960:18;;;15953:61;16031:19;;6101:137:8;15629:427:20;5251:106:7;5309:13;5342:7;5335:14;;;;;:::i;12660:391::-;12827:49;719:10:2;12868:7:7;12827:26;:49::i;:::-;12805:182;;;;-1:-1:-1;;;12805:182:7;;10267:2:20;12805:182:7;;;10249:21:20;10306:2;10286:18;;;10279:30;10345:34;10325:18;;;10318:62;10416:34;10396:18;;;10389:62;10488:21;10467:19;;;10460:50;10527:19;;12805:182:7;10065:487:20;12805:182:7;13000:43;13025:4;13031:2;13035:7;13000:24;:43::i;7872:187::-;7999:52;719:10:2;8032:8:7;8042;7999:18;:52::i;:::-;7872:187;;:::o;4822:189::-;4982:21;;;;:12;:21;;;;;;;;;4975:28;;;;;;;;;;;;;;;;;4941:16;;4975:28;;;4982:21;4975:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4975:28:7;;;;;;;;;;;;;;;;;;;;;;;4822:189;;;:::o;3601:313::-;3725:7;-1:-1:-1;;;;;3772:20:7;;3750:113;;;;-1:-1:-1;;;3750:113:7;;11178:2:20;3750:113:7;;;11160:21:20;11217:2;11197:18;;;11190:30;11256:34;11236:18;;;11229:62;-1:-1:-1;;;11307:18:20;;;11300:41;11358:19;;3750:113:7;10976:407:20;3750:113:7;-1:-1:-1;;;;;;3883:23:7;;;;;:15;:23;;;;;;;3601:313::o;9066:927:8:-;9162:22;9176:7;9162:13;:22::i;:::-;9141:111;;;;-1:-1:-1;;;9141:111:8;;14460:2:20;9141:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;9141:111:8;14258:406:20;9141:111:8;9310:1;9284:23;;;:14;:23;;;;;;9263:148;;;;-1:-1:-1;;;9263:148:8;;16263:2:20;9263:148:8;;;16245:21:20;16302:2;16282:18;;;16275:30;16341:34;16321:18;;;16314:62;16412:34;16392:18;;;16385:62;16484:12;16463:19;;;16456:41;16514:19;;9263:148:8;16061:478:20;9263:148:8;9456:23;;;;:14;:23;;;;;;9443:9;:36;;9422:190;;;;-1:-1:-1;;;9422:190:8;;16746:2:20;9422:190:8;;;16728:21:20;16785:3;16765:18;;;16758:31;16825:34;16805:18;;;16798:62;16896:34;16876:18;;;16869:62;16968:34;16947:19;;;16940:63;17040:13;17019:19;;;17012:42;17071:19;;9422:190:8;16544:552:20;9422:190:8;719:10:2;9623:153:8;;;;-1:-1:-1;;;9623:153:8;;17303:2:20;9623:153:8;;;17285:21:20;17342:2;17322:18;;;17315:30;17381:34;17361:18;;;17354:62;17452:34;17432:18;;;17425:62;17524:12;17503:19;;;17496:41;17554:19;;9623:153:8;17101:478:20;9623:153:8;9787:29;9827:30;9849:7;9827:21;:30::i;:::-;9787:71;-1:-1:-1;9869:73:8;9787:71;719:10:2;9934:7:8;9869:29;:73::i;:::-;9953:33;;-1:-1:-1;;;;;9953:22:8;;;9976:9;9953:33;;;;;;;;;9976:9;9953:22;:33;;;;;;;;;;;;;;;;;;;4083:1443;4223:22;4237:7;4223:13;:22::i;:::-;4202:111;;;;-1:-1:-1;;;4202:111:8;;14460:2:20;4202:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;4202:111:8;14258:406:20;4202:111:8;4369:1;4345:21;;;:12;:21;;;;;;4324:137;;;;-1:-1:-1;;;4324:137:8;;17786:2:20;4324:137:8;;;17768:21:20;17825:2;17805:18;;;17798:30;17864:34;17844:18;;;17837:62;17935:34;17915:18;;;17908:62;18007:3;17986:19;;;17979:32;18028:19;;4324:137:8;17584:469:20;4324:137:8;4472:25;4550:15;4501:33;4530:4;4501:26;:33;:::i;:::-;4500:65;;;;:::i;:::-;4472:93;;4617:1;4597:17;:21;4576:118;;;;-1:-1:-1;;;4576:118:8;;18574:2:20;4576:118:8;;;18556:21:20;18613:2;18593:18;;;18586:30;18652:34;18632:18;;;18625:62;18723:20;18703:18;;;18696:48;18761:19;;4576:118:8;18372:414:20;4576:118:8;4705:24;4752:21;;;:12;:21;;;;;;4732:41;;:17;:41;:::i;:::-;4705:68;;4818:16;4805:9;:29;;4784:161;;;;-1:-1:-1;;;4784:161:8;;18993:2:20;4784:161:8;;;18975:21:20;19032:2;19012:18;;;19005:30;19071:34;19051:18;;;19044:62;19142:34;19122:18;;;19115:62;19214:23;19193:19;;;19186:52;19255:19;;4784:161:8;18791:489:20;4784:161:8;4956:21;4988:22;5002:7;4988:13;:22::i;:::-;4956:55;;5021:29;5061:30;5083:7;5061:21;:30::i;:::-;5021:71;-1:-1:-1;5103:118:8;719:10:2;5164:7:8;5185:26;5103:15;:118::i;:::-;5245:13;-1:-1:-1;;;;;5236:22:8;:5;-1:-1:-1;;;;;5236:22:8;;5232:288;;;5274:25;;-1:-1:-1;;;;;5274:14:8;;;5289:9;5274:25;;;;;;;;;5289:9;5274:14;:25;;;;;;;;;;;;;;;;;;;;;5232:288;;;5330:13;5346:32;5370:7;5346:23;:32::i;:::-;5330:48;-1:-1:-1;;;;;;5393:14:8;;:51;5440:3;5422:13;5330:48;5440:3;5422:13;:::i;:::-;5409:27;;;;:9;:27;:::i;:::-;5408:35;;;;:::i;:::-;5393:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5458:22:8;;:51;5505:3;5482:19;;;;:9;:19;:::i;:::-;5481:27;;;;:::i;:::-;5458:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5316:204;5232:288;4192:1334;;;;4083:1443;;:::o;2790:307:7:-;2912:7;-1:-1:-1;;;;;2959:19:7;;2937:111;;;;-1:-1:-1;;;2937:111:7;;19687:2:20;2937:111:7;;;19669:21:20;19726:2;19706:18;;;19699:30;19765:34;19745:18;;;19738:62;19836:12;19816:18;;;19809:40;19866:19;;2937:111:7;19485:406:20;2937:111:7;-1:-1:-1;;;;;;3068:21:7;;;;;:14;:21;;;;;;;2790:307::o;5868:420::-;5988:13;6027:16;6035:7;6027;:16::i;:::-;6019:63;;;;-1:-1:-1;;;6019:63:7;;7699:2:20;6019:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;6019:63:7;7497:398:20;6019:63:7;6095:21;6119:10;:8;:10::i;:::-;6095:34;;6184:1;6166:7;6160:21;:25;:120;;;;;;;;;;;;;;;;;6229:7;6238:18;:7;:16;:18::i;:::-;6212:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6160:120;6140:140;5868:420;-1:-1:-1;;;5868:420:7:o;2708:404:8:-;2830:22;2844:7;2830:13;:22::i;:::-;2809:111;;;;-1:-1:-1;;;2809:111:8;;14460:2:20;2809:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;2809:111:8;14258:406:20;2809:111:8;2965:1;2952:10;:14;2931:127;;;;-1:-1:-1;;;2931:127:8;;20573:2:20;2931:127:8;;;20555:21:20;20612:2;20592:18;;;20585:30;20651:34;20631:18;;;20624:62;20722:34;20702:18;;;20695:62;20794:4;20773:19;;;20766:33;20816:19;;2931:127:8;20371:470:20;2931:127:8;3069:23;;;;:14;:23;;;;;;:36;2708:404::o;3309:382::-;3410:22;3424:7;3410:13;:22::i;:::-;3389:111;;;;-1:-1:-1;;;3389:111:8;;14460:2:20;3389:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;3389:111:8;14258:406:20;3389:111:8;3545:1;3532:10;:14;3511:128;;;;-1:-1:-1;;;3511:128:8;;21048:2:20;3511:128:8;;;21030:21:20;21087:2;21067:18;;;21060:30;21126:34;21106:18;;;21099:62;21197:34;21177:18;;;21170:62;21269:5;21248:19;;;21241:34;21292:19;;3511:128:8;20846:471:20;3511:128:8;3650:21;;;;:12;:21;;;;;;:34;3309:382::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;9906:2:20;1240:68:0;;;9888:21:20;;;9925:18;;;9918:30;9984:34;9964:18;;;9957:62;10036:18;;1240:68:0;9704:356:20;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;21524:2:20;1998:73:0::1;::::0;::::1;21506:21:20::0;21563:2;21543:18;;;21536:30;21602:34;21582:18;;;21575:62;21673:8;21653:18;;;21646:36;21699:19;;1998:73:0::1;21322:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;19135:220:7:-;19292:55;19303:6;19311:7;19320:26;19292:10;:55::i;6647:1255:8:-;6744:22;6758:7;6744:13;:22::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:8;;14460:2:20;6723:111:8;;;14442:21:20;14499:2;14479:18;;;14472:30;14538:34;14518:18;;;14511:62;-1:-1:-1;;;14589:18:20;;;14582:40;14639:19;;6723:111:8;14258:406:20;6723:111:8;6893:1;6866:24;;;:15;:24;;;;;;6845:150;;;;-1:-1:-1;;;6845:150:8;;21931:2:20;6845:150:8;;;21913:21:20;21970:2;21950:18;;;21943:30;22009:34;21989:18;;;21982:62;22080:34;22060:18;;;22053:62;22152:13;22131:19;;;22124:42;22183:19;;6845:150:8;21729:479:20;6845:150:8;7040:24;;;;:15;:24;;;;;;7027:9;:37;;7006:192;;;;-1:-1:-1;;;7006:192:8;;22415:2:20;7006:192:8;;;22397:21:20;22454:3;22434:18;;;22427:31;22494:34;22474:18;;;22467:62;22565:34;22545:18;;;22538:62;22637:34;22616:19;;;22609:63;22709:14;22688:19;;;22681:43;22741:19;;7006:192:8;22213:553:20;7006:192:8;719:10:2;7209:154:8;;;;-1:-1:-1;;;7209:154:8;;22973:2:20;7209:154:8;;;22955:21:20;23012:2;22992:18;;;22985:30;23051:34;23031:18;;;23024:62;23122:34;23102:18;;;23095:62;-1:-1:-1;;;23173:19:20;;;23166:42;23225:19;;7209:154:8;22771:479:20;7209:154:8;7374:21;7406:22;7420:7;7406:13;:22::i;:::-;7374:55;;7439:29;7479:30;7501:7;7479:21;:30::i;:::-;7439:71;-1:-1:-1;7521:66:8;7552:5;719:10:2;7579:7:8;7521:30;:66::i;:::-;7611:13;-1:-1:-1;;;;;7602:22:8;:5;-1:-1:-1;;;;;7602:22:8;;7598:298;;;7640:25;;-1:-1:-1;;;;;7640:14:8;;;7655:9;7640:25;;;;;;;;;7655:9;7640:14;:25;;;;;;;;;;;;;;;;;;;7598:298;7696:13;7712:43;7747:7;7712:34;:43::i;:::-;7696:59;-1:-1:-1;;;;;;7769:14:8;;:51;7816:3;7798:13;7696:59;7816:3;7798:13;:::i;:::-;7785:27;;;;:9;:27;:::i;:::-;7784:35;;;;:::i;:::-;7769:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7834:22:8;;:51;7881:3;7858:19;;;;:9;:19;:::i;:::-;7857:27;;;;:::i;:::-;7834:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7682:214;6713:1189;;6647:1255;:::o;5612:184:7:-;5677:4;5702:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5702:16:7;:30;;;;:85;;-1:-1:-1;;5785:1:7;5749:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5749:24:7;:38;;;5612:184::o;7264:207::-;7388:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;7388:29:7;-1:-1:-1;;;;;7388:29:7;;;;;;;;;7435:28;;7388:24;;7435:28;;;;;;;7264:207;;;:::o;9030:408::-;9159:4;9189:16;9197:7;9189;:16::i;:::-;9181:63;;;;-1:-1:-1;;;9181:63:7;;7699:2:20;9181:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;9181:63:7;7497:398:20;9181:63:7;9255:13;9271:24;9287:7;9271:15;:24::i;:::-;9255:40;;9327:5;-1:-1:-1;;;;;9316:16:7;:7;-1:-1:-1;;;;;9316:16:7;;:64;;;;9373:7;-1:-1:-1;;;;;9349:31:7;:20;9361:7;9349:11;:20::i;:::-;-1:-1:-1;;;;;9349:31:7;;9316:64;:113;;;-1:-1:-1;;;;;;8820:25:7;;;8791:4;8820:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9397:32;8649:214;12166:415;12338:44;12364:4;12370:2;12374:7;12338:25;:44::i;:::-;12417:64;12457:4;12463:2;12467:7;12476:4;12417:39;:64::i;:::-;12395:178;;;;;-1:-1:-1;;;12395:178:7;;23457:2:20;12395:178:7;;;23439:21:20;23476:18;;;23469:30;;;;23535:34;23515:18;;;23508:62;23606:34;23586:18;;;23579:62;23658:19;;12395:178:7;23255:428:20;16995:504:7;-1:-1:-1;;;;;17075:16:7;;17067:68;;;;-1:-1:-1;;;17067:68:7;;23890:2:20;17067:68:7;;;23872:21:20;23929:2;23909:18;;;23902:30;23968:34;23948:18;;;23941:62;24039:9;24019:18;;;24012:37;24066:19;;17067:68:7;23688:403:20;17067:68:7;17155:16;17163:7;17155;:16::i;:::-;17154:17;17146:64;;;;-1:-1:-1;;;17146:64:7;;24298:2:20;17146:64:7;;;24280:21:20;24337:2;24317:18;;;24310:30;24376:34;24356:18;;;24349:62;-1:-1:-1;;;24427:18:20;;;24420:32;24469:19;;17146:64:7;24096:398:20;17146:64:7;-1:-1:-1;;;;;17223:18:7;;;;;;:14;:18;;;;;:23;;17245:1;;17223:18;:23;;17245:1;;17223:23;:::i;:::-;;;;-1:-1:-1;;;;;;;17257:26:7;;;;;;:22;:26;;;;;:31;;17287:1;;17257:26;:31;;17287:1;;17257:31;:::i;:::-;;;;-1:-1:-1;;17299:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;17299:21:7;;-1:-1:-1;;17299:21:7;;;;;;;;17331:15;:24;;;;;;:29;;;;;;;;;;17378:49;17307:7;;17299:16;17378:49;;17299:16;;17378:49;17443:48;;17483:7;;-1:-1:-1;;;;;17443:48:7;;;17475:1;;17443:48;;17475:1;;17443:48;16995:504;;:::o;17780:738::-;17949:16;17957:7;17949;:16::i;:::-;17941:58;;;;-1:-1:-1;;;17941:58:7;;24834:2:20;17941:58:7;;;24816:21:20;24873:2;24853:18;;;24846:30;24912:31;24892:18;;;24885:59;24961:18;;17941:58:7;24632:353:20;17941:58:7;18054:3;18034:16;:23;;;;:48;;;;-1:-1:-1;18061:21:7;18034:48;18012:147;;;;-1:-1:-1;;;18012:147:7;;25192:2:20;18012:147:7;;;25174:21:20;25231:2;25211:18;;;25204:30;25270:34;25250:18;;;25243:62;25341:19;25321:18;;;25314:47;25378:19;;18012:147:7;24990:413:20;18012:147:7;18225:3;18194:27;:34;;;;:87;;;;-1:-1:-1;18249:32:7;18194:87;18172:198;;;;-1:-1:-1;;;18172:198:7;;25610:2:20;18172:198:7;;;25592:21:20;25649:2;25629:18;;;25622:30;25688:34;25668:18;;;25661:62;25759:31;25739:18;;;25732:59;25808:19;;18172:198:7;25408:425:20;18172:198:7;18383:28;;;;:19;:28;;;;;;;;:47;;-1:-1:-1;;18383:47:7;;;;;;;;;;;18441:30;:39;;;;;;:69;;;;;;;;;;17780:738::o;9605:448::-;9742:4;9772:16;9780:7;9772;:16::i;:::-;9764:63;;;;-1:-1:-1;;;9764:63:7;;7699:2:20;9764:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;9764:63:7;7497:398:20;9764:63:7;9838:21;9862:32;9886:7;9862:23;:32::i;14771:412::-;14942:43;14967:4;14973:2;14977:7;14942:24;:43::i;:::-;15020:63;15059:4;15065:2;15069:7;15078:4;15020:38;:63::i;10580:716::-;10720:13;10736:24;10752:7;10736:15;:24::i;:::-;10720:40;;10802:4;-1:-1:-1;;;;;10793:13:7;:5;-1:-1:-1;;;;;10793:13:7;;10771:129;;;;-1:-1:-1;;;10771:129:7;;26040:2:20;10771:129:7;;;26022:21:20;26079:2;26059:18;;;26052:30;26118:34;26098:18;;;26091:62;26189:34;26169:18;;;26162:62;26261:4;26240:19;;;26233:33;26283:19;;10771:129:7;25838:470:20;10771:129:7;-1:-1:-1;;;;;10933:16:7;;10911:111;;;;-1:-1:-1;;;10911:111:7;;26515:2:20;10911:111:7;;;26497:21:20;26554:2;26534:18;;;26527:30;26593:34;26573:18;;;26566:62;26664:15;26644:18;;;26637:43;26697:19;;10911:111:7;26313:409:20;10911:111:7;11087:36;11096:5;11111:1;11115:7;11087:8;:36::i;:::-;-1:-1:-1;;;;;11136:20:7;;;;;;:14;:20;;;;;:25;;11160:1;;11136:20;:25;;11160:1;;11136:25;:::i;:::-;;;;-1:-1:-1;;;;;;;11172:18:7;;;;;;:14;:18;;;;;:23;;11194:1;;11172:18;:23;;11194:1;;11172:23;:::i;:::-;;;;-1:-1:-1;;11206:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;11206:21:7;-1:-1:-1;;;;;11206:21:7;;;;;;;;;11245:43;;11206:16;;11245:43;;;;;;;10709:587;10580:716;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;13121:770:7:-;13260:21;13284:32;13308:7;13284:23;:32::i;:::-;13260:56;;13366:4;-1:-1:-1;;;;;13349:21:7;:13;-1:-1:-1;;;;;13349:21:7;;13327:137;;;;-1:-1:-1;;;13327:137:7;;26040:2:20;13327:137:7;;;26022:21:20;26079:2;26059:18;;;26052:30;26118:34;26098:18;;;26091:62;26189:34;26169:18;;;26162:62;26261:4;26240:19;;;26233:33;26283:19;;13327:137:7;25838:470:20;13327:137:7;-1:-1:-1;;;;;13497:16:7;;13475:111;;;;-1:-1:-1;;;13475:111:7;;26515:2:20;13475:111:7;;;26497:21:20;26554:2;26534:18;;;26527:30;26593:34;26573:18;;;26566:62;26664:15;26644:18;;;26637:43;26697:19;;13475:111:7;26313:409:20;13475:111:7;13651:44;13660:13;13683:1;13687:7;13651:8;:44::i;:::-;-1:-1:-1;;;;;13708:28:7;;;;;;:22;:28;;;;;:33;;13740:1;;13708:28;:33;;13740:1;;13708:33;:::i;:::-;;;;-1:-1:-1;;;;;;;13752:26:7;;;;;;:22;:26;;;;;:31;;13782:1;;13752:26;:31;;13782:1;;13752:31;:::i;:::-;;;;-1:-1:-1;;13794:24:7;;;;:15;:24;;;;;;:29;;-1:-1:-1;;13794:29:7;-1:-1:-1;;;;;13794:29:7;;;;;;;;;13841:42;;13794:24;;13841:42;;;;;;;13249:642;13121:770;;;:::o;8202:375::-;8371:8;-1:-1:-1;;;;;8362:17:7;:5;-1:-1:-1;;;;;8362:17:7;;;8340:111;;;;-1:-1:-1;;;8340:111:7;;26929:2:20;8340:111:7;;;26911:21:20;26968:2;26948:18;;;26941:30;27007:34;26987:18;;;26980:62;27078:14;27058:18;;;27051:42;27110:19;;8340:111:7;26727:408:20;8340:111:7;-1:-1:-1;;;;;8464:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;8464:46:7;;;;;;;;;;8528:41;;8464:46;;:35;:25;8528:41;;;8202:375;;;:::o;18526:257::-;18638:5;18670:17;18678:8;18670:7;:17::i;:::-;18669:18;18661:65;;;;-1:-1:-1;;;18661:65:7;;24298:2:20;18661:65:7;;;24280:21:20;24337:2;24317:18;;;24310:30;24376:34;24356:18;;;24349:62;-1:-1:-1;;;24427:18:20;;;24420:32;24469:19;;18661:65:7;24096:398:20;18661:65:7;-1:-1:-1;18746:29:7;;;;:19;:29;;;;;;;;;18526:257::o;1069:104:8:-;1129:13;1161:5;1154:12;;;;;:::i;328:703:4:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:4;;;;;;;;;;;;;;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:4;;-1:-1:-1;773:2:4;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:4;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:4;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;972:11:4;981:2;972:11;;:::i;:::-;;;844:150;;19411:573:7;-1:-1:-1;;;;;19584:20:7;;19562:113;;;;-1:-1:-1;;;19562:113:7;;11178:2:20;19562:113:7;;;11160:21:20;11217:2;11197:18;;;11190:30;11256:34;11236:18;;;11229:62;-1:-1:-1;;;11307:18:20;;;11300:41;11358:19;;19562:113:7;10976:407:20;19562:113:7;19696:16;19704:7;19696;:16::i;:::-;19688:63;;;;-1:-1:-1;;;19688:63:7;;7699:2:20;19688:63:7;;;7681:21:20;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:20;;;7821:32;7870:19;;19688:63:7;7497:398:20;19688:63:7;19764:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;19764:25:7;;;;;;;;;;;:54;;;19829:21;;;:12;:21;;;;;:34;;;;;;;;;;;;;;;;;-1:-1:-1;;19829:34:7;;;;;19874:23;;;:15;:23;;;;;:28;;19829:34;;19874:23;;:28;;19829:34;;19874:28;:::i;:::-;;;;-1:-1:-1;;19920:56:7;;4686:25:20;;;19940:7:7;;-1:-1:-1;;;;;19920:56:7;;;;;4674:2:20;4659:18;19920:56:7;;;;;;;19411:573;;;:::o;18791:279::-;18914:5;18946:17;18954:8;18946:7;:17::i;:::-;18945:18;18937:65;;;;-1:-1:-1;;;18937:65:7;;24298:2:20;18937:65:7;;;24280:21:20;24337:2;24317:18;;;24310:30;24376:34;24356:18;;;24349:62;-1:-1:-1;;;24427:18:20;;;24420:32;24469:19;;18937:65:7;24096:398:20;18937:65:7;-1:-1:-1;19022:40:7;;;;:30;:40;;;;;;;;;18791:279::o;23816:1213::-;23987:4;-1:-1:-1;;;;;24008:13:7;;1087:20:1;1133:8;24004:1018:7;;24061:250;;;;;-1:-1:-1;;;;;24061:92:7;;;;;:250;;719:10:2;;24219:4:7;;24250:7;;24284:4;;24061:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24061:250:7;;;;;;;;-1:-1:-1;;24061:250:7;;;;;;;;;;;;:::i;:::-;;;24040:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24622:13:7;;24618:334;;24665:122;;;-1:-1:-1;;;24665:122:7;;23457:2:20;24665:122:7;;;23439:21:20;23476:18;;;23469:30;;;;23535:34;23515:18;;;23508:62;23606:34;23586:18;;;23579:62;23658:19;;24665:122:7;23255:428:20;24618:334:7;24902:6;24896:13;24887:6;24883:2;24879:15;24872:38;24040:927;24396:158;;24427:127;24396:158;;-1:-1:-1;24368:186:7;;24004:1018;-1:-1:-1;25006:4:7;23816:1213;;;;;;:::o;22005:1229::-;22175:4;-1:-1:-1;;;;;22196:13:7;;1087:20:1;1133:8;22192:1035:7;;22249:248;;;;;-1:-1:-1;;;;;22249:90:7;;;;;:248;;719:10:2;;22405:4:7;;22436:7;;22470:4;;22249:248;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22249:248:7;;;;;;;;-1:-1:-1;;22249:248:7;;;;;;;;;;;;:::i;:::-;;;22228:944;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22806:13:7;;22802:355;;22849:143;;-1:-1:-1;;;22849:143:7;;28230:2:20;22849:143:7;;;28212:21:20;28269:2;28249:18;;;28242:30;28308:34;28288:18;;;28281:62;28379:34;28359:18;;;28352:62;28451:23;28430:19;;;28423:52;28492:19;;22849:143:7;28028:489:20;22228:944:7;22582:156;;22613:125;22582:156;;-1:-1:-1;22554:184:7;;14:177:20;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:20;868:16;;861:27;638:258::o;901:317::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1132:2;1120:15;-1:-1:-1;;1116:88:20;1107:98;;;;1207:4;1103:109;;901:317;-1:-1:-1;;901:317:20:o;1223:220::-;1372:2;1361:9;1354:21;1335:4;1392:45;1433:2;1422:9;1418:18;1410:6;1392:45;:::i;1448:180::-;1507:6;1560:2;1548:9;1539:7;1535:23;1531:32;1528:52;;;1576:1;1573;1566:12;1528:52;-1:-1:-1;1599:23:20;;1448:180;-1:-1:-1;1448:180:20:o;1864:196::-;1932:20;;-1:-1:-1;;;;;1981:54:20;;1971:65;;1961:93;;2050:1;2047;2040:12;1961:93;1864:196;;;:::o;2065:254::-;2133:6;2141;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2309:2;2294:18;;;;2281:32;;-1:-1:-1;;;2065:254:20:o;2324:184::-;-1:-1:-1;;;2373:1:20;2366:88;2473:4;2470:1;2463:15;2497:4;2494:1;2487:15;2513:1197;2608:6;2616;2624;2632;2685:3;2673:9;2664:7;2660:23;2656:33;2653:53;;;2702:1;2699;2692:12;2653:53;2725:29;2744:9;2725:29;:::i;:::-;2715:39;;2773:38;2807:2;2796:9;2792:18;2773:38;:::i;:::-;2763:48;;2858:2;2847:9;2843:18;2830:32;2820:42;;2913:2;2902:9;2898:18;2885:32;2936:18;2977:2;2969:6;2966:14;2963:34;;;2993:1;2990;2983:12;2963:34;3031:6;3020:9;3016:22;3006:32;;3076:7;3069:4;3065:2;3061:13;3057:27;3047:55;;3098:1;3095;3088:12;3047:55;3134:2;3121:16;3156:2;3152;3149:10;3146:36;;;3162:18;;:::i;:::-;3296:2;3290:9;3358:4;3350:13;;-1:-1:-1;;3346:22:20;;;3370:2;3342:31;3338:40;3326:53;;;3394:18;;;3414:22;;;3391:46;3388:72;;;3440:18;;:::i;:::-;3480:10;3476:2;3469:22;3515:2;3507:6;3500:18;3555:7;3550:2;3545;3541;3537:11;3533:20;3530:33;3527:53;;;3576:1;3573;3566:12;3527:53;3632:2;3627;3623;3619:11;3614:2;3606:6;3602:15;3589:46;3677:1;3672:2;3667;3659:6;3655:15;3651:24;3644:35;3698:6;3688:16;;;;;;;2513:1197;;;;;;;:::o;3715:328::-;3792:6;3800;3808;3861:2;3849:9;3840:7;3836:23;3832:32;3829:52;;;3877:1;3874;3867:12;3829:52;3900:29;3919:9;3900:29;:::i;:::-;3890:39;;3948:38;3982:2;3971:9;3967:18;3948:38;:::i;:::-;3938:48;;4033:2;4022:9;4018:18;4005:32;3995:42;;3715:328;;;;;:::o;4048:156::-;4114:20;;4174:4;4163:16;;4153:27;;4143:55;;4194:1;4191;4184:12;4209:326;4282:6;4290;4298;4351:2;4339:9;4330:7;4326:23;4322:32;4319:52;;;4367:1;4364;4357:12;4319:52;4390:29;4409:9;4390:29;:::i;:::-;4380:39;;4438:36;4470:2;4459:9;4455:18;4438:36;:::i;:::-;4428:46;;4493:36;4525:2;4514:9;4510:18;4493:36;:::i;:::-;4483:46;;4209:326;;;;;:::o;4722:186::-;4781:6;4834:2;4822:9;4813:7;4809:23;4805:32;4802:52;;;4850:1;4847;4840:12;4802:52;4873:29;4892:9;4873:29;:::i;4913:254::-;4981:6;4989;5042:2;5030:9;5021:7;5017:23;5013:32;5010:52;;;5058:1;5055;5048:12;5010:52;5094:9;5081:23;5071:33;;5123:38;5157:2;5146:9;5142:18;5123:38;:::i;:::-;5113:48;;4913:254;;;;;:::o;5172:248::-;5240:6;5248;5301:2;5289:9;5280:7;5276:23;5272:32;5269:52;;;5317:1;5314;5307:12;5269:52;-1:-1:-1;;5340:23:20;;;5410:2;5395:18;;;5382:32;;-1:-1:-1;5172:248:20:o;5425:347::-;5490:6;5498;5551:2;5539:9;5530:7;5526:23;5522:32;5519:52;;;5567:1;5564;5557:12;5519:52;5590:29;5609:9;5590:29;:::i;:::-;5580:39;;5669:2;5658:9;5654:18;5641:32;5716:5;5709:13;5702:21;5695:5;5692:32;5682:60;;5738:1;5735;5728:12;5682:60;5761:5;5751:15;;;5425:347;;;;;:::o;5777:681::-;5948:2;6000:21;;;6070:13;;5973:18;;;6092:22;;;5919:4;;5948:2;6171:15;;;;6145:2;6130:18;;;5919:4;6214:218;6228:6;6225:1;6222:13;6214:218;;;6293:13;;-1:-1:-1;;;;;6289:62:20;6277:75;;6407:15;;;;6372:12;;;;6250:1;6243:9;6214:218;;;-1:-1:-1;6449:3:20;;5777:681;-1:-1:-1;;;;;;5777:681:20:o;6463:260::-;6531:6;6539;6592:2;6580:9;6571:7;6567:23;6563:32;6560:52;;;6608:1;6605;6598:12;6560:52;6631:29;6650:9;6631:29;:::i;:::-;6621:39;;6679:38;6713:2;6702:9;6698:18;6679:38;:::i;6728:322::-;6805:6;6813;6821;6874:2;6862:9;6853:7;6849:23;6845:32;6842:52;;;6890:1;6887;6880:12;6842:52;6913:29;6932:9;6913:29;:::i;:::-;6903:39;6989:2;6974:18;;6961:32;;-1:-1:-1;7040:2:20;7025:18;;;7012:32;;6728:322;-1:-1:-1;;;6728:322:20:o;7055:437::-;7134:1;7130:12;;;;7177;;;7198:61;;7252:4;7244:6;7240:17;7230:27;;7198:61;7305:2;7297:6;7294:14;7274:18;7271:38;7268:218;;;-1:-1:-1;;;7339:1:20;7332:88;7443:4;7440:1;7433:15;7471:4;7468:1;7461:15;7268:218;;7055:437;;;:::o;11802:184::-;-1:-1:-1;;;11851:1:20;11844:88;11951:4;11948:1;11941:15;11975:4;11972:1;11965:15;11991:228;12031:7;12157:1;-1:-1:-1;;12085:74:20;12082:1;12079:81;12074:1;12067:9;12060:17;12056:105;12053:131;;;12164:18;;:::i;:::-;-1:-1:-1;12204:9:20;;11991:228::o;12224:184::-;-1:-1:-1;;;12273:1:20;12266:88;12373:4;12370:1;12363:15;12397:4;12394:1;12387:15;12413:125;12453:4;12481:1;12478;12475:8;12472:34;;;12486:18;;:::i;:::-;-1:-1:-1;12523:9:20;;12413:125::o;12543:184::-;-1:-1:-1;;;12592:1:20;12585:88;12692:4;12689:1;12682:15;12716:4;12713:1;12706:15;12732:195;12771:3;-1:-1:-1;;12795:5:20;12792:77;12789:103;;;12872:18;;:::i;:::-;-1:-1:-1;12919:1:20;12908:13;;12732:195::o;18058:184::-;-1:-1:-1;;;18107:1:20;18100:88;18207:4;18204:1;18197:15;18231:4;18228:1;18221:15;18247:120;18287:1;18313;18303:35;;18318:18;;:::i;:::-;-1:-1:-1;18352:9:20;;18247:120::o;19285:195::-;19323:4;19360;19357:1;19353:12;19392:4;19389:1;19385:12;19417:3;19412;19409:12;19406:38;;;19424:18;;:::i;:::-;19461:13;;;19285:195;-1:-1:-1;;;19285:195:20:o;19896:470::-;20075:3;20113:6;20107:13;20129:53;20175:6;20170:3;20163:4;20155:6;20151:17;20129:53;:::i;:::-;20245:13;;20204:16;;;;20267:57;20245:13;20204:16;20301:4;20289:17;;20267:57;:::i;:::-;20340:20;;19896:470;-1:-1:-1;;;;19896:470:20:o;24499:128::-;24539:3;24570:1;24566:6;24563:1;24560:13;24557:39;;;24576:18;;:::i;:::-;-1:-1:-1;24612:9:20;;24499:128::o;27140:112::-;27172:1;27198;27188:35;;27203:18;;:::i;:::-;-1:-1:-1;27237:9:20;;27140:112::o;27257:512::-;27451:4;-1:-1:-1;;;;;27561:2:20;27553:6;27549:15;27538:9;27531:34;27613:2;27605:6;27601:15;27596:2;27585:9;27581:18;27574:43;;27653:6;27648:2;27637:9;27633:18;27626:34;27696:3;27691:2;27680:9;27676:18;27669:31;27717:46;27758:3;27747:9;27743:19;27735:6;27717:46;:::i;:::-;27709:54;27257:512;-1:-1:-1;;;;;;27257:512:20:o;27774:249::-;27843:6;27896:2;27884:9;27875:7;27871:23;27867:32;27864:52;;;27912:1;27909;27902:12;27864:52;27944:9;27938:16;27963:30;27987:5;27963:30;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./ERC1190.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev Implementation of ERC1190 with payable methods.\n */\ncontract ERC1190Tradable is ERC1190, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    // Base URI\n    string private _base;\n\n    // The price in wei of each token that can be owned.\n    mapping(uint256 => uint256) private _ownershipPrice;\n\n    // The price in wei of each token that can be creative owned.\n    mapping(uint256 => uint256) private _creativePrice;\n\n    // The price in wei of each token that can be rented.\n    mapping(uint256 => uint256) private _rentalPrice;\n\n    /**\n     * @dev See {ERC1190-constructor}.\n     */\n    constructor(string memory tokenName, string memory tokenSymbol, string memory tokenBaseUri)\n        ERC1190(tokenName, tokenSymbol)\n    {\n        _base = tokenBaseUri;\n    }\n\n    /**\n     * See {ERC1190-_baseURI}.\n     */\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _base;\n    }\n\n    /**\n     * @dev Generates a new token and assigns its ownership and creative\n     * license to `creator`.\n     * The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`.\n     */\n    function mint(\n        address creator,\n        uint8 royaltyForRental,\n        uint8 royaltyForOwnershipTransfer\n    ) external onlyOwner returns (uint256) {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        super._mint(creator, newItemId);\n        super._setRoyalties(\n            newItemId,\n            royaltyForRental,\n            royaltyForOwnershipTransfer\n        );\n\n        return newItemId;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the ownership license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setOwnershipLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The ownership license cost must be greater than 0.\"\n        );\n\n        _ownershipPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the creative license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setCreativeLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The creative license cost must be greater than 0.\"\n        );\n\n        _creativePrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for renting `tokenId` for 1 second.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setRentalPrice(uint256 tokenId, uint256 priceInWei) external {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The rental cost per second must be greater than 0.\"\n        );\n\n        _rentalPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A rental price must have been set via {setRentalPrice}.\n     * - `rentExpirationDateInMillis` should correspond to a future date.\n     * - the sent money should be enough to cover the renting expenses.\n     */\n    function rentAsset(uint256 tokenId, uint256 rentExpirationDateInMillis)\n        external\n        payable\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _rentalPrice[tokenId] > 0,\n            \"ERC1190Tradable: The asset related to this token is not rentable.\"\n        );\n\n        uint256 rentTimeInSeconds = (rentExpirationDateInMillis / 1000) -\n            block.timestamp;\n\n        require(\n            rentTimeInSeconds > 0,\n            \"ERC1190Tradable: The rental time must be positive.\"\n        );\n\n        uint256 rentalTotalPrice = rentTimeInSeconds * _rentalPrice[tokenId];\n\n        require(\n            msg.value >= rentalTotalPrice,\n            \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.rentAsset(\n            super._msgSender(),\n            tokenId,\n            rentExpirationDateInMillis\n        );\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForRental(tokenId);\n\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferOwnershipLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\"\n        );\n\n        address owner = super.ownerOf(tokenId);\n\n        require(\n            super._msgSender() == owner,\n            \"ERC1190Tradable: The sender does not own the ownership license.\"\n        );\n\n        super.transferCreativeLicense(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A ownership license price must have been set via {setOwnershipLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainOwnershipLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _ownershipPrice[tokenId] > 0,\n            \"ERC1190Tradable: The ownership license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _ownershipPrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferOwnershipLicense(owner, super._msgSender(), tokenId);\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForOwnershipTransfer(tokenId);\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the creative license from the current creative owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the creative owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferCreativeLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\"\n        );\n\n        address creativeOwner = super.creativeOwnerOf(tokenId);\n\n        require(\n            super._msgSender() == creativeOwner,\n            \"ERC1190Tradable: The sender does not own the creative license.\"\n        );\n\n        super.transferCreativeLicense(creativeOwner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the creative license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A creative license price must have been set via {setCreativeLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainCreativeLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _creativePrice[tokenId] > 0,\n            \"ERC1190Tradable: The creative license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _creativePrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\n        );\n\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferCreativeLicense(creativeOwner, super._msgSender(), tokenId);\n\n        creativeOwner.transfer(msg.value);\n    }\n}\n",
  "sourcePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
  "ast": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2236
      ],
      "ERC1190Tradable": [
        2848
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        2864
      ],
      "IERC1190Approver": [
        2920
      ],
      "IERC1190CreativeLicenseReceiver": [
        2938
      ],
      "IERC1190CreativeOwner": [
        3000
      ],
      "IERC1190Metadata": [
        3027
      ],
      "IERC1190Owner": [
        3089
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3107
      ],
      "IERC1190Renter": [
        3158
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 2849,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2238,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 2237,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2243,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2236,
              "src": "289:7:8"
            },
            "id": 2244,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2245,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2246,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2242,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 2848,
        "linearizedBaseContracts": [
          2848,
          104,
          2236,
          3027,
          2864,
          3158,
          3000,
          3089,
          2920,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2250,
            "libraryName": {
              "id": 2247,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2249,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2248,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2253,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2252,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2251,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2255,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "425:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "410:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2254,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "410:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2259,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "530:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "494:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2258,
              "keyType": {
                "id": 2256,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "494:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2257,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2263,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "654:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "618:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2262,
              "keyType": {
                "id": 2260,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "626:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "618:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2261,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "637:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2267,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "769:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "733:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2266,
              "keyType": {
                "id": 2264,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "733:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2265,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2285,
              "nodeType": "Block",
              "src": "979:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2281,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "989:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2282,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "997:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "989:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2284,
                  "nodeType": "ExpressionStatement",
                  "src": "989:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2268,
              "nodeType": "StructuredDocumentation",
              "src": "788:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2286,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2277,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2270,
                    "src": "951:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2278,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2272,
                    "src": "962:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2279,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2276,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2236,
                  "src": "943:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "943:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "869:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "855:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2269,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2272,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "894:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "880:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2271,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2274,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "921:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "907:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:80:8"
            },
            "returnParameters": {
              "id": 2280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:8"
            },
            "scope": 2848,
            "src": "843:173:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1104
            ],
            "body": {
              "id": 2295,
              "nodeType": "Block",
              "src": "1144:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2293,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2255,
                    "src": "1161:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2292,
                  "id": 2294,
                  "nodeType": "Return",
                  "src": "1154:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2287,
              "nodeType": "StructuredDocumentation",
              "src": "1022:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1078:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2289,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1111:8:8"
            },
            "parameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:8"
            },
            "returnParameters": {
              "id": 2292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2296,
                  "src": "1129:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2290,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:15:8"
            },
            "scope": 2848,
            "src": "1069:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2338,
              "nodeType": "Block",
              "src": "1541:289:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2310,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1551:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1551:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:21:8"
                },
                {
                  "assignments": [
                    2316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2316,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1591:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2338,
                      "src": "1583:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2320,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2317,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1603:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1603:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1583:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2324,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2299,
                        "src": "1644:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "1653:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2321,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1632:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1632:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2331,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "1706:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2332,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "1729:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2333,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2303,
                        "src": "1759:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2328,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1673:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1865,
                      "src": "1673:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:123:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:123:8"
                },
                {
                  "expression": {
                    "id": 2336,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2316,
                    "src": "1814:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2309,
                  "id": 2337,
                  "nodeType": "Return",
                  "src": "1807:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2297,
              "nodeType": "StructuredDocumentation",
              "src": "1179:200:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
            },
            "functionSelector": "352926a8",
            "id": 2339,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2305,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1513:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1513:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "1393:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1415:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1407:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "1438:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1432:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2303,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "1470:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1464:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:106:8"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1532:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:9:8"
            },
            "scope": 2848,
            "src": "1384:446:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2368,
              "nodeType": "Block",
              "src": "2158:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2350,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "2203:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2348,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2189:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "2189:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2168:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2356,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "2311:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2324:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2311:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2290:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:128:8"
                },
                {
                  "expression": {
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2362,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "2429:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2364,
                      "indexExpression": {
                        "id": 2363,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2445:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2429:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2365,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "2456:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2429:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2367,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2340,
              "nodeType": "StructuredDocumentation",
              "src": "1836:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "2075:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2108:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2100:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2125:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2117:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:37:8"
            },
            "returnParameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2158:0:8"
            },
            "scope": 2848,
            "src": "2066:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "2799:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2380,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "2844:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2378,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2830:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "2830:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2830:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2809:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2809:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2386,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2374,
                          "src": "2952:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2965:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2952:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2980:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2931:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2391,
                  "nodeType": "ExpressionStatement",
                  "src": "2931:127:8"
                },
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2392,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "3069:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2394,
                      "indexExpression": {
                        "id": 2393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "3084:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3069:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2395,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2374,
                      "src": "3095:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3069:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2370,
              "nodeType": "StructuredDocumentation",
              "src": "2479:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "2717:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2749:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "2741:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2766:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "2758:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:37:8"
            },
            "returnParameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2799:0:8"
            },
            "scope": 2848,
            "src": "2708:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "3379:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2410,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2402,
                            "src": "3424:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2408,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3410:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "3410:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3410:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3446:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3389:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2414,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2416,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2404,
                          "src": "3532:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3532:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3511:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:128:8"
                },
                {
                  "expression": {
                    "id": 2426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2422,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "3650:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2424,
                      "indexExpression": {
                        "id": 2423,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "3663:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3650:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2425,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2404,
                      "src": "3674:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2427,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2400,
              "nodeType": "StructuredDocumentation",
              "src": "3118:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "3318:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3341:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "3333:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3358:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "3350:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:37:8"
            },
            "returnParameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:8"
            },
            "scope": 2848,
            "src": "3309:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2564,
              "nodeType": "Block",
              "src": "4192:1334:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2440,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "4237:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2438,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4223:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "4223:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4223:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4259:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4202:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2444,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2446,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "4345:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2448,
                          "indexExpression": {
                            "id": 2447,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "4358:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4345:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4369:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4345:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4384:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4324:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:137:8"
                },
                {
                  "assignments": [
                    2455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2455,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "4480:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4472:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4472:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2463,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2456,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2434,
                            "src": "4501:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4530:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4501:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2459,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4500:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2460,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4550:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4550:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4500:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4472:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2465,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2455,
                          "src": "4597:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4617:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4597:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4632:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4576:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:118:8"
                },
                {
                  "assignments": [
                    2472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2472,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "4713:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4705:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4705:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2473,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2455,
                      "src": "4732:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2474,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "4752:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2476,
                      "indexExpression": {
                        "id": 2475,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "4765:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4752:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4732:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4705:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2480,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4805:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4805:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2482,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2472,
                          "src": "4818:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4805:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4848:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4784:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:161:8"
                },
                {
                  "assignments": [
                    2488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2488,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4972:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4956:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4956:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2496,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2493,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "5002:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2491,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4988:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 962,
                          "src": "4988:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4988:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4980:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4980:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4980:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4956:55:8"
                },
                {
                  "assignments": [
                    2498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2498,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "5037:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "5021:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2497,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5021:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2503,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "5083:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2501,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5061:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "5061:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5061:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5053:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2499,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5053:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5053:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5021:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2510,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5132:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "5132:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5132:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2513,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "5164:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2514,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "5185:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2507,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5103:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1923,
                      "src": "5103:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5103:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "5103:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2517,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2488,
                      "src": "5236:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2518,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "5245:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5236:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2562,
                    "nodeType": "Block",
                    "src": "5316:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2529,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "5336:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2562,
                            "src": "5330:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2528,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5330:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2534,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2532,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2432,
                              "src": "5370:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2530,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "5346:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1885,
                            "src": "5346:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5346:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5330:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2538,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5409:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2539,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "5409:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2542,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2540,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5422:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2541,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2529,
                                            "src": "5428:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "5422:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2543,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5421:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5409:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2545,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5408:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5440:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "5408:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "5393:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5393:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5393:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2549,
                        "nodeType": "ExpressionStatement",
                        "src": "5393:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2553,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5482:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "5482:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2555,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2529,
                                      "src": "5494:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5482:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2557,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5481:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5505:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "5481:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2550,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2498,
                              "src": "5458:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5458:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5458:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2561,
                        "nodeType": "ExpressionStatement",
                        "src": "5458:51:8"
                      }
                    ]
                  },
                  "id": 2563,
                  "nodeType": "IfStatement",
                  "src": "5232:288:8",
                  "trueBody": {
                    "id": 2527,
                    "nodeType": "Block",
                    "src": "5260:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2523,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5289:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5289:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2520,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "5274:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5274:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5274:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2526,
                        "nodeType": "ExpressionStatement",
                        "src": "5274:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2430,
              "nodeType": "StructuredDocumentation",
              "src": "3697:381:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "4092:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4110:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2565,
                  "src": "4102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "4127:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2565,
                  "src": "4119:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:53:8"
            },
            "returnParameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4192:0:8"
            },
            "scope": 2848,
            "src": "4083:1443:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2607,
              "nodeType": "Block",
              "src": "5893:412:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2574,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "5924:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5938:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5930:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5930:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5930:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5924:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5954:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        }
                      ],
                      "id": 2573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5903:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5903:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:138:8"
                },
                {
                  "assignments": [
                    2584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2584,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6060:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2607,
                      "src": "6052:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6052:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2589,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "6082:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6068:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "6068:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6052:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2591,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6122:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "6122:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2594,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "6144:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6122:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6163:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6101:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2602,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "6279:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2603,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "6286:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2604,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "6290:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2599,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6249:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "6249:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6249:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2606,
                  "nodeType": "ExpressionStatement",
                  "src": "6249:49:8"
                }
              ]
            },
            "documentation": {
              "id": 2566,
              "nodeType": "StructuredDocumentation",
              "src": "5532:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "5830:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5863:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2608,
                  "src": "5855:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5855:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5880:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2608,
                  "src": "5872:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5872:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5854:29:8"
            },
            "returnParameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:8"
            },
            "scope": 2848,
            "src": "5821:484:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2730,
              "nodeType": "Block",
              "src": "6713:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2617,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "6758:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2615,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6744:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "6744:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6744:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6780:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6723:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2623,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "6866:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2625,
                          "indexExpression": {
                            "id": 2624,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "6882:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6866:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6893:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6866:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6908:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6845:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6845:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2630,
                  "nodeType": "ExpressionStatement",
                  "src": "6845:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2632,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7027:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7027:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2634,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "7040:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2636,
                          "indexExpression": {
                            "id": 2635,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7056:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7040:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7027:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7078:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7006:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2642,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7230:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7230:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7230:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7260:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7252:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7252:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7252:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7230:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7276:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7209:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "7209:154:8"
                },
                {
                  "assignments": [
                    2654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2654,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7390:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2730,
                      "src": "7374:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2653,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7374:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2662,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2659,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7420:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2657,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7406:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 962,
                          "src": "7406:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7406:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7398:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2655,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7398:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7374:55:8"
                },
                {
                  "assignments": [
                    2664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2664,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "7455:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2730,
                      "src": "7439:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2663,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7439:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2672,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2669,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7501:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2667,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7479:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "7479:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7479:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7471:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7471:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7471:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7439:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2676,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "7552:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2677,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7559:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "7559:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7559:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2680,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "7579:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2673,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7521:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "7521:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7521:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2682,
                  "nodeType": "ExpressionStatement",
                  "src": "7521:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2683,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2654,
                      "src": "7602:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2684,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2664,
                      "src": "7611:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7602:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "7682:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2695
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2695,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "7702:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2728,
                            "src": "7696:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2694,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7696:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2700,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2698,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2611,
                              "src": "7747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2696,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7712:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1905,
                            "src": "7712:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7712:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7696:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2704,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7785:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2705,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "7785:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2708,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2706,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7798:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2707,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2695,
                                            "src": "7804:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "7798:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2709,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "7797:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "7785:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2711,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7784:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7816:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7784:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2701,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2654,
                              "src": "7769:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7769:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7769:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2715,
                        "nodeType": "ExpressionStatement",
                        "src": "7769:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2719,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7858:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "7858:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2721,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2695,
                                      "src": "7870:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "7858:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2723,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7857:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7881:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7857:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2716,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2664,
                              "src": "7834:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7834:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7834:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2727,
                        "nodeType": "ExpressionStatement",
                        "src": "7834:51:8"
                      }
                    ]
                  },
                  "id": 2729,
                  "nodeType": "IfStatement",
                  "src": "7598:298:8",
                  "trueBody": {
                    "id": 2693,
                    "nodeType": "Block",
                    "src": "7626:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2689,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7655:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "7655:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2686,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2654,
                              "src": "7640:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7640:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7640:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2692,
                        "nodeType": "ExpressionStatement",
                        "src": "7640:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2609,
              "nodeType": "StructuredDocumentation",
              "src": "6311:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "6656:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6687:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2731,
                  "src": "6679:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6679:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6678:17:8"
            },
            "returnParameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6713:0:8"
            },
            "scope": 2848,
            "src": "6647:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2773,
              "nodeType": "Block",
              "src": "8285:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2740,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2736,
                          "src": "8316:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8330:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8322:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8322:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8322:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8316:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8346:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        }
                      ],
                      "id": 2739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8295:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8295:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "8295:137:8"
                },
                {
                  "assignments": [
                    2750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2750,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8451:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2773,
                      "src": "8443:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2749,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8443:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2755,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2753,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2734,
                        "src": "8489:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2751,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8467:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "8467:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8443:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2757,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8529:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8529:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8529:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2760,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2750,
                          "src": "8551:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8529:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8578:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8508:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8508:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "8508:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2768,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "8693:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2769,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "8708:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2770,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2734,
                        "src": "8712:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2765,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8663:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "8663:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8663:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2772,
                  "nodeType": "ExpressionStatement",
                  "src": "8663:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2732,
              "nodeType": "StructuredDocumentation",
              "src": "7908:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "8223:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8255:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "8247:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8247:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2736,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8272:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "8264:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8264:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8246:29:8"
            },
            "returnParameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8285:0:8"
            },
            "scope": 2848,
            "src": "8214:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2846,
              "nodeType": "Block",
              "src": "9131:862:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2783,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9176:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2781,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9162:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "9162:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9162:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9198:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9141:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9141:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "9141:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2789,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "9284:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2791,
                          "indexExpression": {
                            "id": 2790,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9299:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9284:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9310:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9284:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9325:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9263:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2796,
                  "nodeType": "ExpressionStatement",
                  "src": "9263:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9443:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9443:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2800,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "9456:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2802,
                          "indexExpression": {
                            "id": 2801,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9471:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9456:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9443:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9493:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9422:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9422:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "9422:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2808,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9644:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9644:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9644:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9674:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9666:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2811,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9666:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9666:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9644:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9690:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9623:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9623:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "9623:153:8"
                },
                {
                  "assignments": [
                    2820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2820,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9803:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "9787:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2819,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9787:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2828,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2825,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9849:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2823,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9827:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "9827:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9827:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9819:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2821,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9819:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9819:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9787:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2832,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "9899:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2833,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9914:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "9914:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9914:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2836,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2777,
                        "src": "9934:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2829,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9869:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "9869:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9869:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "9869:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9976:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9976:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "9953:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9953:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9953:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2845,
                  "nodeType": "ExpressionStatement",
                  "src": "9953:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2775,
              "nodeType": "StructuredDocumentation",
              "src": "8733:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 2847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "9075:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2777,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9105:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "9097:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9097:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9096:17:8"
            },
            "returnParameters": {
              "id": 2779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9131:0:8"
            },
            "scope": 2848,
            "src": "9066:927:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2849,
        "src": "261:9734:8",
        "usedErrors": []
      }
    ],
    "src": "32:9964:8"
  },
  "legacyAST": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2236
      ],
      "ERC1190Tradable": [
        2848
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        2864
      ],
      "IERC1190Approver": [
        2920
      ],
      "IERC1190CreativeLicenseReceiver": [
        2938
      ],
      "IERC1190CreativeOwner": [
        3000
      ],
      "IERC1190Metadata": [
        3027
      ],
      "IERC1190Owner": [
        3089
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3107
      ],
      "IERC1190Renter": [
        3158
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 2849,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2238,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 2237,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2240,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2849,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2243,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2236,
              "src": "289:7:8"
            },
            "id": 2244,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2245,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2246,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2242,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 2848,
        "linearizedBaseContracts": [
          2848,
          104,
          2236,
          3027,
          2864,
          3158,
          3000,
          3089,
          2920,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2250,
            "libraryName": {
              "id": 2247,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2249,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2248,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2253,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2252,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2251,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2255,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "425:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "410:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2254,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "410:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2259,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "530:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "494:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2258,
              "keyType": {
                "id": 2256,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "494:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2257,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2263,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "654:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "618:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2262,
              "keyType": {
                "id": 2260,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "626:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "618:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2261,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "637:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2267,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "769:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 2848,
            "src": "733:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2266,
              "keyType": {
                "id": 2264,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "733:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2265,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2285,
              "nodeType": "Block",
              "src": "979:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2281,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "989:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2282,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "997:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "989:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2284,
                  "nodeType": "ExpressionStatement",
                  "src": "989:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2268,
              "nodeType": "StructuredDocumentation",
              "src": "788:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2286,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2277,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2270,
                    "src": "951:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2278,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2272,
                    "src": "962:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2279,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2276,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2236,
                  "src": "943:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "943:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "869:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "855:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2269,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2272,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "894:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "880:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2271,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2274,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "921:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "907:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:80:8"
            },
            "returnParameters": {
              "id": 2280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:8"
            },
            "scope": 2848,
            "src": "843:173:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1104
            ],
            "body": {
              "id": 2295,
              "nodeType": "Block",
              "src": "1144:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2293,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2255,
                    "src": "1161:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2292,
                  "id": 2294,
                  "nodeType": "Return",
                  "src": "1154:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2287,
              "nodeType": "StructuredDocumentation",
              "src": "1022:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1078:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2289,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1111:8:8"
            },
            "parameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:8"
            },
            "returnParameters": {
              "id": 2292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2296,
                  "src": "1129:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2290,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:15:8"
            },
            "scope": 2848,
            "src": "1069:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2338,
              "nodeType": "Block",
              "src": "1541:289:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2310,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1551:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1551:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:21:8"
                },
                {
                  "assignments": [
                    2316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2316,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1591:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2338,
                      "src": "1583:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2320,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2317,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1603:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1603:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1583:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2324,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2299,
                        "src": "1644:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "1653:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2321,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1632:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1632:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2331,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "1706:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2332,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "1729:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2333,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2303,
                        "src": "1759:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2328,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1673:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1865,
                      "src": "1673:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:123:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:123:8"
                },
                {
                  "expression": {
                    "id": 2336,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2316,
                    "src": "1814:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2309,
                  "id": 2337,
                  "nodeType": "Return",
                  "src": "1807:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2297,
              "nodeType": "StructuredDocumentation",
              "src": "1179:200:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
            },
            "functionSelector": "352926a8",
            "id": 2339,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2305,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1513:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1513:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "1393:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1415:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1407:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "1438:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1432:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2303,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "1470:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1464:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:106:8"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "1532:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:9:8"
            },
            "scope": 2848,
            "src": "1384:446:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2368,
              "nodeType": "Block",
              "src": "2158:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2350,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2342,
                            "src": "2203:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2348,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2189:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "2189:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2189:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2168:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2356,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "2311:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2324:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2311:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2290:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:128:8"
                },
                {
                  "expression": {
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2362,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "2429:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2364,
                      "indexExpression": {
                        "id": 2363,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2445:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2429:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2365,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "2456:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2429:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2367,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2340,
              "nodeType": "StructuredDocumentation",
              "src": "1836:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "2075:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2108:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2100:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2125:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2369,
                  "src": "2117:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:37:8"
            },
            "returnParameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2158:0:8"
            },
            "scope": 2848,
            "src": "2066:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "2799:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2380,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "2844:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2378,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2830:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "2830:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2830:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2809:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2809:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2386,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2374,
                          "src": "2952:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2965:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2952:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2980:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2931:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2931:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2391,
                  "nodeType": "ExpressionStatement",
                  "src": "2931:127:8"
                },
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2392,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2263,
                        "src": "3069:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2394,
                      "indexExpression": {
                        "id": 2393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "3084:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3069:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2395,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2374,
                      "src": "3095:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3069:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2370,
              "nodeType": "StructuredDocumentation",
              "src": "2479:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "2717:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2749:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "2741:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2766:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "2758:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:37:8"
            },
            "returnParameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2799:0:8"
            },
            "scope": 2848,
            "src": "2708:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "3379:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2410,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2402,
                            "src": "3424:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2408,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3410:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "3410:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3410:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3446:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3389:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2414,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2416,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2404,
                          "src": "3532:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3532:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3511:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:128:8"
                },
                {
                  "expression": {
                    "id": 2426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2422,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "3650:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2424,
                      "indexExpression": {
                        "id": 2423,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "3663:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3650:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2425,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2404,
                      "src": "3674:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2427,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2400,
              "nodeType": "StructuredDocumentation",
              "src": "3118:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "3318:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3341:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "3333:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3358:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "3350:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:37:8"
            },
            "returnParameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:8"
            },
            "scope": 2848,
            "src": "3309:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2564,
              "nodeType": "Block",
              "src": "4192:1334:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2440,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "4237:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2438,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4223:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "4223:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4223:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4259:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4202:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2444,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2446,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "4345:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2448,
                          "indexExpression": {
                            "id": 2447,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "4358:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4345:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4369:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4345:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4384:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4324:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:137:8"
                },
                {
                  "assignments": [
                    2455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2455,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "4480:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4472:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4472:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2463,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2456,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2434,
                            "src": "4501:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4530:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4501:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2459,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4500:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2460,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4550:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4550:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4500:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4472:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2465,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2455,
                          "src": "4597:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4617:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4597:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4632:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4576:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:118:8"
                },
                {
                  "assignments": [
                    2472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2472,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "4713:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4705:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4705:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2473,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2455,
                      "src": "4732:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2474,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "4752:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2476,
                      "indexExpression": {
                        "id": 2475,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "4765:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4752:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4732:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4705:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2480,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4805:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4805:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2482,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2472,
                          "src": "4818:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4805:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4848:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4784:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4784:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "4784:161:8"
                },
                {
                  "assignments": [
                    2488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2488,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4972:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "4956:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4956:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2496,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2493,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "5002:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2491,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4988:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 962,
                          "src": "4988:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4988:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4980:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4980:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4980:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4956:55:8"
                },
                {
                  "assignments": [
                    2498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2498,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "5037:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2564,
                      "src": "5021:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2497,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5021:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2503,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2432,
                            "src": "5083:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2501,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5061:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "5061:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5061:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5053:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2499,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5053:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5053:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5021:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2510,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5132:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "5132:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5132:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2513,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "5164:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2514,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "5185:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2507,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5103:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1923,
                      "src": "5103:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5103:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "5103:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2517,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2488,
                      "src": "5236:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2518,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "5245:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5236:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2562,
                    "nodeType": "Block",
                    "src": "5316:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2529,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "5336:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2562,
                            "src": "5330:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2528,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5330:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2534,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2532,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2432,
                              "src": "5370:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2530,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "5346:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1885,
                            "src": "5346:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5346:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5330:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2538,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5409:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2539,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "5409:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2542,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2540,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5422:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2541,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2529,
                                            "src": "5428:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "5422:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2543,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5421:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5409:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2545,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5408:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5440:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "5408:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "5393:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5393:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5393:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2549,
                        "nodeType": "ExpressionStatement",
                        "src": "5393:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2553,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "5482:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "5482:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2555,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2529,
                                      "src": "5494:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5482:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2557,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5481:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5505:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "5481:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2550,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2498,
                              "src": "5458:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5458:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5458:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2561,
                        "nodeType": "ExpressionStatement",
                        "src": "5458:51:8"
                      }
                    ]
                  },
                  "id": 2563,
                  "nodeType": "IfStatement",
                  "src": "5232:288:8",
                  "trueBody": {
                    "id": 2527,
                    "nodeType": "Block",
                    "src": "5260:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2523,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5289:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5289:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2520,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "5274:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5274:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5274:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2526,
                        "nodeType": "ExpressionStatement",
                        "src": "5274:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2430,
              "nodeType": "StructuredDocumentation",
              "src": "3697:381:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "4092:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4110:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2565,
                  "src": "4102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "4127:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2565,
                  "src": "4119:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:53:8"
            },
            "returnParameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4192:0:8"
            },
            "scope": 2848,
            "src": "4083:1443:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2607,
              "nodeType": "Block",
              "src": "5893:412:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2574,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "5924:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5938:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5930:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5930:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5930:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5924:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5954:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        }
                      ],
                      "id": 2573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5903:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5903:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:138:8"
                },
                {
                  "assignments": [
                    2584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2584,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6060:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2607,
                      "src": "6052:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6052:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2589,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "6082:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2585,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6068:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "6068:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6068:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6052:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2591,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6122:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "6122:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2594,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "6144:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6122:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6163:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6101:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2602,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "6279:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2603,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "6286:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2604,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "6290:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2599,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6249:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "6249:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6249:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2606,
                  "nodeType": "ExpressionStatement",
                  "src": "6249:49:8"
                }
              ]
            },
            "documentation": {
              "id": 2566,
              "nodeType": "StructuredDocumentation",
              "src": "5532:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "5830:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5863:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2608,
                  "src": "5855:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5855:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5880:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2608,
                  "src": "5872:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5872:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5854:29:8"
            },
            "returnParameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:8"
            },
            "scope": 2848,
            "src": "5821:484:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2730,
              "nodeType": "Block",
              "src": "6713:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2617,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "6758:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2615,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6744:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "6744:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6744:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6780:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6723:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2623,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "6866:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2625,
                          "indexExpression": {
                            "id": 2624,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "6882:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6866:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6893:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6866:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6908:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6845:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6845:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2630,
                  "nodeType": "ExpressionStatement",
                  "src": "6845:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2632,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7027:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7027:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2634,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "7040:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2636,
                          "indexExpression": {
                            "id": 2635,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7056:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7040:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7027:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7078:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7006:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2642,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7230:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7230:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7230:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7260:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7252:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7252:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7252:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7230:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7276:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7209:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "7209:154:8"
                },
                {
                  "assignments": [
                    2654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2654,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7390:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2730,
                      "src": "7374:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2653,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7374:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2662,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2659,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7420:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2657,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7406:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 962,
                          "src": "7406:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7406:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7398:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2655,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7398:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7374:55:8"
                },
                {
                  "assignments": [
                    2664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2664,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "7455:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2730,
                      "src": "7439:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2663,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7439:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2672,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2669,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "7501:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2667,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7479:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "7479:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7479:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7471:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7471:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7471:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7439:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2676,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "7552:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2677,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7559:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "7559:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7559:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2680,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "7579:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2673,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7521:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "7521:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7521:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2682,
                  "nodeType": "ExpressionStatement",
                  "src": "7521:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2683,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2654,
                      "src": "7602:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2684,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2664,
                      "src": "7611:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7602:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "7682:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2695
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2695,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "7702:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2728,
                            "src": "7696:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2694,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7696:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2700,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2698,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2611,
                              "src": "7747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2696,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7712:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1905,
                            "src": "7712:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7712:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7696:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2704,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7785:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2705,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "7785:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2708,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2706,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7798:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2707,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2695,
                                            "src": "7804:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "7798:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2709,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "7797:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "7785:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2711,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7784:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7816:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7784:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2701,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2654,
                              "src": "7769:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7769:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7769:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2715,
                        "nodeType": "ExpressionStatement",
                        "src": "7769:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2719,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7858:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "7858:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2721,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2695,
                                      "src": "7870:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "7858:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2723,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7857:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7881:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "7857:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2716,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2664,
                              "src": "7834:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7834:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7834:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2727,
                        "nodeType": "ExpressionStatement",
                        "src": "7834:51:8"
                      }
                    ]
                  },
                  "id": 2729,
                  "nodeType": "IfStatement",
                  "src": "7598:298:8",
                  "trueBody": {
                    "id": 2693,
                    "nodeType": "Block",
                    "src": "7626:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2689,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7655:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "7655:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2686,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2654,
                              "src": "7640:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7640:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7640:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2692,
                        "nodeType": "ExpressionStatement",
                        "src": "7640:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2609,
              "nodeType": "StructuredDocumentation",
              "src": "6311:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "6656:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6687:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2731,
                  "src": "6679:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6679:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6678:17:8"
            },
            "returnParameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6713:0:8"
            },
            "scope": 2848,
            "src": "6647:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2773,
              "nodeType": "Block",
              "src": "8285:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2740,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2736,
                          "src": "8316:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8330:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8322:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8322:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8322:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8316:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8346:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        }
                      ],
                      "id": 2739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8295:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8295:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "8295:137:8"
                },
                {
                  "assignments": [
                    2750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2750,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8451:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2773,
                      "src": "8443:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2749,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8443:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2755,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2753,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2734,
                        "src": "8489:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2751,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8467:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "8467:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8467:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8443:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2757,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8529:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8529:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8529:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2760,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2750,
                          "src": "8551:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8529:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8578:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8508:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8508:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "8508:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2768,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "8693:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2769,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "8708:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2770,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2734,
                        "src": "8712:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2765,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8663:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "8663:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8663:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2772,
                  "nodeType": "ExpressionStatement",
                  "src": "8663:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2732,
              "nodeType": "StructuredDocumentation",
              "src": "7908:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "8223:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2734,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8255:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "8247:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8247:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2736,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8272:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2774,
                  "src": "8264:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8264:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8246:29:8"
            },
            "returnParameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8285:0:8"
            },
            "scope": 2848,
            "src": "8214:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2846,
              "nodeType": "Block",
              "src": "9131:862:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2783,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9176:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2781,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9162:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1053,
                          "src": "9162:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9162:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9198:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9141:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9141:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2787,
                  "nodeType": "ExpressionStatement",
                  "src": "9141:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2789,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "9284:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2791,
                          "indexExpression": {
                            "id": 2790,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9299:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9284:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9310:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9284:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9325:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9263:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2796,
                  "nodeType": "ExpressionStatement",
                  "src": "9263:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2798,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9443:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9443:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2800,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "9456:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2802,
                          "indexExpression": {
                            "id": 2801,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9471:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9456:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9443:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9493:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9422:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9422:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2806,
                  "nodeType": "ExpressionStatement",
                  "src": "9422:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2808,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9644:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9644:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9644:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9674:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9666:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2811,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9666:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9666:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9644:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9690:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9623:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9623:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "9623:153:8"
                },
                {
                  "assignments": [
                    2820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2820,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9803:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "9787:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2819,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9787:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2828,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2825,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2777,
                            "src": "9849:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2823,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9827:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 990,
                          "src": "9827:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9827:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9819:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2821,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9819:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9819:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9787:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2832,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "9899:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2833,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9914:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "9914:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9914:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2836,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2777,
                        "src": "9934:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2829,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9869:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2848_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "9869:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9869:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "9869:73:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9976:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9976:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2820,
                        "src": "9953:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9953:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9953:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2845,
                  "nodeType": "ExpressionStatement",
                  "src": "9953:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2775,
              "nodeType": "StructuredDocumentation",
              "src": "8733:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 2847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "9075:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2777,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9105:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "9097:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9097:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9096:17:8"
            },
            "returnParameters": {
              "id": 2779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9131:0:8"
            },
            "scope": 2848,
            "src": "9066:927:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2849,
        "src": "261:9734:8",
        "usedErrors": []
      }
    ],
    "src": "32:9964:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-24T17:11:24.543Z",
  "devdoc": {
    "details": "Implementation of ERC1190 with payable methods.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC1190-approve}."
      },
      "balanceOfCreativeOwner(address)": {
        "details": "See {IERC1190-balanceOfCreativeOwner}."
      },
      "balanceOfOwner(address)": {
        "details": "See {IERC1190-balanceOfOwner}."
      },
      "balanceOfRenter(address)": {
        "details": "See {IERC1190-balanceOfRenter}."
      },
      "constructor": {
        "details": "See {ERC1190-constructor}."
      },
      "creativeOwnerOf(uint256)": {
        "details": "See {IERC1190-creativeOwnerOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC1190-getApproved}."
      },
      "getRented(uint256,address)": {
        "details": "See {IERC1190-getRented}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1190-isApprovedForAll}."
      },
      "mint(address,uint8,uint8)": {
        "details": "Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
      },
      "name()": {
        "details": "See {IERC1190Metadata-name}."
      },
      "obtainCreativeLicense(uint256)": {
        "details": "Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "obtainOwnershipLicense(uint256)": {
        "details": "Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC1190-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rentAsset(address,uint256,uint256)": {
        "details": "See {IERC1190-rentAsset}."
      },
      "rentAsset(uint256,uint256)": {
        "details": "Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses."
      },
      "rentersOf(uint256)": {
        "details": "See {IERC1190-rentersOf}."
      },
      "safeTransferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferCreativeLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1190-setApprovalForAll}."
      },
      "setCreativeLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setOwnershipLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setRentalPrice(uint256,uint256)": {
        "details": "Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC1190Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC1190Metadata-tokenURI}."
      },
      "transferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferCreativeLicense}."
      },
      "transferCreativeLicense(uint256,address)": {
        "details": "Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferOwnershipLicense}."
      },
      "transferOwnershipLicense(uint256,address)": {
        "details": "Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}