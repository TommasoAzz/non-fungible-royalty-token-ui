{
  "contractName": "ERC1190Tradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenBaseUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "AssetRented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForRental",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForOwnershipTransfer",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferCreativeLicense",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferOwnershipLicense",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creativeOwner",
          "type": "address"
        }
      ],
      "name": "balanceOfCreativeOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "balanceOfRenter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "getRented",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "royaltyForRental",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "royaltyForOwnershipTransfer",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setOwnershipLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setCreativeLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setRentalPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainOwnershipLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainCreativeLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"AssetRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForRental\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForOwnershipTransfer\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferCreativeLicense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferOwnershipLicense\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creativeOwner\",\"type\":\"address\"}],\"name\":\"balanceOfCreativeOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"balanceOfRenter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"getRented\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"royaltyForRental\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"royaltyForOwnershipTransfer\",\"type\":\"uint8\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainCreativeLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setCreativeLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setOwnershipLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setRentalPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of ERC1190 with payable methods.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC1190-approve}.\"},\"balanceOfCreativeOwner(address)\":{\"details\":\"See {IERC1190-balanceOfCreativeOwner}.\"},\"balanceOfOwner(address)\":{\"details\":\"See {IERC1190-balanceOfOwner}.\"},\"balanceOfRenter(address)\":{\"details\":\"See {IERC1190-balanceOfRenter}.\"},\"constructor\":{\"details\":\"See {ERC1190-constructor}.\"},\"creativeOwnerOf(uint256)\":{\"details\":\"See {IERC1190-creativeOwnerOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC1190-getApproved}.\"},\"getRented(uint256,address)\":{\"details\":\"See {IERC1190-getRented}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1190-isApprovedForAll}.\"},\"mint(address,string,uint8,uint8)\":{\"details\":\"Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`.\"},\"name()\":{\"details\":\"See {IERC1190Metadata-name}.\"},\"obtainCreativeLicense(uint256)\":{\"details\":\"Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"obtainOwnershipLicense(uint256)\":{\"details\":\"Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC1190-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rentAsset(address,uint256,uint256)\":{\"details\":\"See {IERC1190-rentAsset}.\"},\"rentAsset(uint256,uint256)\":{\"details\":\"Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses.\"},\"rentersOf(uint256)\":{\"details\":\"See {IERC1190-rentersOf}.\"},\"safeTransferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferCreativeLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1190-setApprovalForAll}.\"},\"setCreativeLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setOwnershipLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setRentalPrice(uint256,uint256)\":{\"details\":\"Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC1190Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC1190Metadata-tokenURI}.\"},\"transferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferCreativeLicense}.\"},\"transferCreativeLicense(uint256,address)\":{\"details\":\"Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferOwnershipLicense}.\"},\"transferOwnershipLicense(uint256,address)\":{\"details\":\"Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":\"ERC1190Tradable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"non-fungible-royalty-token/contracts/ERC1190.sol\":{\"keccak256\":\"0x1ea5bfd73f49859ec72730b25148a70cda265e4a0eff16d790f15a9efc0e98a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be1f506118d3ad971920839d56c66268c17fbeb13645c2862ae6c045181fcd5\",\"dweb:/ipfs/QmcaEq8zdcmHUPTNWsKjEpADCMGKqrNkvghuARKSrjzGrE\"]},\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":{\"keccak256\":\"0x5a0cb21a94d070216e2884b6e8c3e54ca2d7c4afc700b699ca279fe7bb4e333e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1add91e0fd5bf5dabb17d21d7ca2e76064254d404a90cf1e741ee7817c66332d\",\"dweb:/ipfs/QmXDA8EXdLqeDbpmzrZ9WvFGGzWr1wM3ndBCsuC2niLbXY\"]},\"non-fungible-royalty-token/contracts/IERC1190.sol\":{\"keccak256\":\"0x6742a76d31a435d09c0a84dd128a85963fa271c62fefd3f89a4f0ee34d1b1c1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3051d923672803db129c3e5a81b117caef46e69343673cf625122cdb9dfbb56\",\"dweb:/ipfs/QmTj8Nbp9NpGkEK14XdXfCwjqpjN5tQyuoTPw6gdAgc4Tn\"]},\"non-fungible-royalty-token/contracts/IERC1190Approver.sol\":{\"keccak256\":\"0x5cfe8bd143e6c86c443a02ea6e94e2f7d6c53474d6256bf55ee79691b714e8d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://188ed6db1029ae83b6e06293dfdd2f220b77d59255a5a76af76feae1a1d799c1\",\"dweb:/ipfs/QmY7TpFWDHydRg2mi8eyKPW3saMXYE2MYjgYd1qvh4dXZc\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeLicenseReceiver.sol\":{\"keccak256\":\"0x9874faa59977fddaf0d252be515418e26866d4c8f5668176e55b479604ae4c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d164d320f1ffa7db1aa93c9685988784fe2e32a9ad93a98062468bf9e5e1bd4d\",\"dweb:/ipfs/QmXR8K1VtLd8CbfNTHPaFtrAhDF9rZSHi9JiFSW1ZqEM9d\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeOwner.sol\":{\"keccak256\":\"0xd4e44eeb23623ad7ea99d56d9b6318ecc678f25660e6a66128e3f8f26bd82df9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b350bdaf466d21b78a3e53b568fd396e8093717932554907ff15913f83c8f\",\"dweb:/ipfs/QmaywMBe5sjeJAiRNc68n4GCsEgj4pr542xcVqsBwpuyF4\"]},\"non-fungible-royalty-token/contracts/IERC1190Metadata.sol\":{\"keccak256\":\"0xfeae8da63057ace48142df9e78af59b1bcd1d785b0fa25410274ef369032106d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31f444ccc823bf569d2e9f074c16de6c59aa952def95acd1b63a8f84ba98ed2d\",\"dweb:/ipfs/Qmbatu1x8ZLkLoipY6LvkCJkpnfKqZEcxS4DJoV24NGBg5\"]},\"non-fungible-royalty-token/contracts/IERC1190Owner.sol\":{\"keccak256\":\"0x3b3eb1a173a0c912b83b97446793e9c456b3f04ef968b866cc5db1788fb78827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6092fb88805deb255a39ab7b15049de42c1242b822edb68707c74a062d7626d8\",\"dweb:/ipfs/QmWcgWeFCjed5CJKuT6UoTszRj1C25ESEgX9n8Ab5neDNW\"]},\"non-fungible-royalty-token/contracts/IERC1190OwnershipLicenseReceiver.sol\":{\"keccak256\":\"0xea676c2f50bff066256ff8cedf8a092971a2fb124f964c91e7d8739d9b35cbc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b09a8d9ad2954151b7c22bd6434c16898237494efaf54bf842b105fb24e6d58\",\"dweb:/ipfs/QmNj1accKopyGKxdcSfStz1gCcQBmr319quhxS7K1B2yiD\"]},\"non-fungible-royalty-token/contracts/IERC1190Renter.sol\":{\"keccak256\":\"0x437edfff992d3e85c39ed53b3b92e466f83d7e8013d02cee94894bb27f5f9830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1241705d5d61fd2b121c728dabbddd92171b1bd6e502b61deb765e29e66d64f3\",\"dweb:/ipfs/QmNmxf88PBVAG8oM4GVWgRbpNisK7dNQosce6wALX2LXce\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102345760003560e01c80638d6cf8bc11610138578063b042ce94116100b0578063e985e9c51161007f578063f2fde38b11610064578063f2fde38b14610671578063f3e4198e14610691578063f9de1d83146106b157600080fd5b8063e985e9c514610608578063ec2b20ac1461065157600080fd5b8063b042ce9414610595578063c66130d7146105a8578063c87b56dd146105c8578063de8e7bab146105e857600080fd5b80639f2cd0e411610107578063a333818c116100ec578063a333818c14610535578063aad1b61714610562578063afe9a4ff1461058257600080fd5b80639f2cd0e4146104f5578063a22cb4651461051557600080fd5b80638d6cf8bc146104825780638da5cb5b146104a257806395d89b41146104c05780639940a11a146104d557600080fd5b80634909d94e116101cb57806369bb4dc21161019a578063715018a61161017f578063715018a61461042d57806379b66eb7146104425780638c4b5a921461046257600080fd5b806369bb4dc2146103f85780636ebd773d1461040d57600080fd5b80634909d94e1461036a5780634cd5ca8e1461038a578063606428f7146103b85780636352211e146103d857600080fd5b80630b97be96116102075780630b97be96146102ea578063224157ea1461030a57806325dc12641461032a5780633c7342341461034a57600080fd5b806301ffc9a71461023957806306fdde031461026e578063081812fc14610290578063095ea7b3146102c8575b600080fd5b34801561024557600080fd5b5061025961025436600461397e565b6106c4565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b50610283610788565b60405161026591906139f3565b34801561029c57600080fd5b506102b06102ab366004613a06565b61081a565b6040516001600160a01b039091168152602001610265565b3480156102d457600080fd5b506102e86102e3366004613a3b565b61089d565b005b3480156102f657600080fd5b506102e8610305366004613a7b565b6109f6565b34801561031657600080fd5b506102b0610325366004613a06565b610aaa565b34801561033657600080fd5b506102e8610345366004613b57565b610b35565b34801561035657600080fd5b506102e8610365366004613a7b565b610b4c565b34801561037657600080fd5b506102e8610385366004613b57565b610bfa565b34801561039657600080fd5b506103aa6103a5366004613b93565b610ca7565b604051908152602001610265565b3480156103c457600080fd5b506103aa6103d3366004613bae565b610d41565b3480156103e457600080fd5b506102b06103f3366004613a06565b6110c1565b34801561040457600080fd5b506103aa61114c565b34801561041957600080fd5b506102e8610428366004613bae565b61115c565b34801561043957600080fd5b506102e8611294565b34801561044e57600080fd5b506102e861045d366004613bda565b6112fa565b34801561046e57600080fd5b506102e861047d366004613b57565b611410565b34801561048e57600080fd5b506102e861049d366004613bae565b61142b565b3480156104ae57600080fd5b50600e546001600160a01b03166102b0565b3480156104cc57600080fd5b50610283611546565b3480156104e157600080fd5b506103aa6104f0366004613c0d565b611555565b34801561050157600080fd5b506102e8610510366004613b57565b61164a565b34801561052157600080fd5b506102e8610530366004613cb2565b6116f7565b34801561054157600080fd5b50610555610550366004613a06565b611706565b6040516102659190613cee565b34801561056e57600080fd5b506103aa61057d366004613b93565b611772565b6102e8610590366004613a06565b6117fa565b6102e86105a3366004613bda565b611abf565b3480156105b457600080fd5b506103aa6105c3366004613b93565b611e4f565b3480156105d457600080fd5b506102836105e3366004613a06565b611ee9565b3480156105f457600080fd5b506102e8610603366004613bda565b61203f565b34801561061457600080fd5b50610259610623366004613d3b565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b34801561065d57600080fd5b506102e861066c366004613bda565b612155565b34801561067d57600080fd5b506102e861068c366004613b93565b61226b565b34801561069d57600080fd5b506102e86106ac366004613d65565b61234d565b6102e86106bf366004613a06565b612358565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061073657507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061078257507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461079790613d98565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390613d98565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b5050505050905090565b6000610825826126ed565b6108815760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b60006108a8826110c1565b9050806001600160a01b0316836001600160a01b031614156109325760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e000000000000000000000000000000000000000000006064820152608401610878565b336001600160a01b038216148061094e575061094e8133610623565b6109e65760405162461bcd60e51b815260206004820152605060248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206f662074686520746f6b656e206e6f7220617070726f7660648201527f656420746f206d616e6167652069742e00000000000000000000000000000000608482015260a401610878565b6109f181848461272c565b505050565b610a003383612795565b610a985760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a401610878565b610aa484848484612875565b50505050565b6000818152600360205260408120546001600160a01b0316806107825760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e0000000000000000000000006064820152608401610878565b6109f1838383604051806020016040528060008152505b610b563383612900565b610bee5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a401610878565b610aa48484848461296d565b610c043382612795565b610c9c5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a401610878565b6109f1838383612984565b60006001600160a01b038216610d255760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e00000000000000000000000000006064820152608401610878565b506001600160a01b031660009081526007602052604090205490565b6000610d4c836126ed565b610da35760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b6001600160a01b038216610e0d5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610878565b60008381526004602090815260408083206001600160a01b0386168452909152902054610ea25760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e000000000000000000000000000000000000006064820152608401610878565b60008381526004602090815260408083206001600160a01b0386168452909152902054610ed1426103e8613de9565b8110156110975760008481526004602090815260408083206001600160a01b03871684529091528120819055805b60008681526005602052604090205481108015610f1a575081155b1561106657600086815260056020526040902080546001600160a01b038716919083908110610f4b57610f4b613e08565b6000918252602090912001546001600160a01b031614156110545760008681526005602052604090208054610f8290600190613e1e565b81548110610f9257610f92613e08565b60009182526020808320909101548883526005909152604090912080546001600160a01b039092169183908110610fcb57610fcb613e08565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03949094169390931790925587815260059091526040902080548061102057611020613e35565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b8061105e81613e4b565b915050610eff565b506001600160a01b0384166000908152600860205260408120805460019290611090908490613e1e565b9091555050505b505060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b6000818152600260205260408120546001600160a01b0316806107825760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e0000000000000000000000000000000000000000006064820152608401610878565b6000611157600f5490565b905090565b6001600160a01b0381166111fe5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865204372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a401610878565b600061120983610aaa565b9050336001600160a01b038216146112895760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e00006064820152608401610878565b6109f181838561164a565b600e546001600160a01b031633146112ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610878565b6112f86000612b8c565b565b611303826126ed565b6113625760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b600081116113fe5760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a401610878565b60009182526011602052604090912055565b6109f1838383604051806020016040528060008152506109f6565b6001600160a01b0381166114bb5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865204f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a401610878565b60006114c6836110c1565b9050336001600160a01b038216146112895760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e006064820152608401610878565b60606001805461079790613d98565b600e546000906001600160a01b031633146115b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610878565b6115c0600f80546001019055565b60006115cb600f5490565b90506115d78782612beb565b6115e2818787612dd6565b6115ed818585612e4f565b604080516001600160a01b038916815260ff86811660208301528516818301526060810183905290517fd3df8e557dd2db4e6ed42c0bc93d8dceae1dae9bd0d8bfa2c69d68759fceab539181900360800190a19695505050505050565b6116543382612900565b6116ec5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a401610878565b6109f1838383612fe2565b6117023383836131ea565b5050565b60008181526005602090815260409182902080548351818402810184019094528084526060939283018282801561176657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611748575b50505050509050919050565b60006001600160a01b0382166117de5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610878565b506001600160a01b031660009081526008602052604090205490565b611803816126ed565b6118625760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b6000818152601260205260409020546119095760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a401610878565b6000818152601260205260409020543410156119d95760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c401610878565b33611a725760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a401610878565b6000611a7d82610aaa565b9050611a8a81338461164a565b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156109f1573d6000803e3d6000fd5b611ac8826126ed565b611b275760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b600082815260136020526040902054611bce5760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a401610878565b600042611bdd6103e884613e66565b611be79190613e1e565b905060008111611c5f5760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e00000000000000000000000000006064820152608401610878565b600083815260136020526040812054611c789083613de9565b905080341015611d165760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a401610878565b6000611d21856110c1565b90506000611d2e86610aaa565b9050611d3b33878761234d565b806001600160a01b0316826001600160a01b03161415611d90576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015611d8a573d6000803e3d6000fd5b50611e47565b6000611d9b876132d8565b90506001600160a01b0383166108fc6064611db68482613e88565b611dc39060ff1634613de9565b611dcd9190613e66565b6040518115909202916000818181858888f19350505050158015611df5573d6000803e3d6000fd5b506001600160a01b0382166108fc6064611e1260ff851634613de9565b611e1c9190613e66565b6040518115909202916000818181858888f19350505050158015611e44573d6000803e3d6000fd5b50505b505050505050565b60006001600160a01b038216611ecd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e000000000000000000000000000000000000000000006064820152608401610878565b506001600160a01b031660009081526006602052604090205490565b6060611ef4826126ed565b611f4b5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b6000828152600d602052604081208054611f6490613d98565b905011611fd95760405162461bcd60e51b815260206004820152602960248201527f455243313139303a204e6f2066696c65206173736f63696174656420746f207460448201527f686520746f6b656e2e00000000000000000000000000000000000000000000006064820152608401610878565b6000611fe3613351565b905060008151116120035760405180602001604052806000815250612038565b80600d6000858152602001908152602001600020604051602001612028929190613eab565b6040516020818303038152906040525b9392505050565b612048826126ed565b6120a75760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b600081116121435760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a401610878565b60009182526012602052604090912055565b61215e826126ed565b6121bd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b600081116122595760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a401610878565b60009182526013602052604090912055565b600e546001600160a01b031633146122c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610878565b6001600160a01b0381166123415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610878565b61234a81612b8c565b50565b6109f1838383613360565b612361816126ed565b6123c05760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b6064820152608401610878565b6000818152601160205260409020546124675760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a401610878565b6000818152601160205260409020543410156125375760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c401610878565b336125be5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a401610878565b60006125c9826110c1565b905060006125d683610aaa565b90506125e3823385610bfa565b806001600160a01b0316826001600160a01b03161415612632576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610aa4573d6000803e3d6000fd5b600061263d846134ed565b90506001600160a01b0383166108fc60646126588482613e88565b6126659060ff1634613de9565b61266f9190613e66565b6040518115909202916000818181858888f19350505050158015612697573d6000803e3d6000fd5b506001600160a01b0382166108fc60646126b460ff851634613de9565b6126be9190613e66565b6040518115909202916000818181858888f193505050501580156126e6573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906107825750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006127a0826126ed565b6127f75760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b6000612802836110c1565b9050806001600160a01b0316846001600160a01b0316148061283d5750836001600160a01b03166128328461081a565b6001600160a01b0316145b8061286d57506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff165b949350505050565b612880848484612984565b61288c84848484613566565b610aa4576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e6064820152608401610878565b600061290b826126ed565b6129625760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b600061280283610aaa565b612978848484612fe2565b61288c84848484613706565b600061298f826110c1565b9050836001600160a01b0316816001600160a01b031614612a3e5760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a401610878565b6001600160a01b038316612aba5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e000000000000000000000000000000000000006064820152608401610878565b612ac68160008461272c565b6001600160a01b0384166000908152600660205260408120805460019290612aef908490613e1e565b90915550506001600160a01b0383166000908152600660205260408120805460019290612b1d908490613f5c565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216612c675760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e000000000000000000000000000000000000000000000000006064820152608401610878565b612c70816126ed565b15612cc85760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610878565b6001600160a01b0382166000908152600660205260408120805460019290612cf1908490613f5c565b90915550506001600160a01b0382166000908152600760205260408120805460019290612d1f908490613f5c565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b612ddf836126ed565b612e365760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b6000838152600d60205260409020610aa49083836138b7565b612e58836126ed565b612ea45760405162461bcd60e51b815260206004820152601d60248201527f455243313139303a20746f6b656e20616c7265616479206d696e7465640000006044820152606401610878565b60648260ff1611158015612eb6575060015b612f285760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e0000000000000000000000000000006064820152608401610878565b60648160ff1611158015612f3a575060015b612fac5760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e0000006064820152608401610878565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b6000612fed82610aaa565b9050836001600160a01b0316816001600160a01b03161461309c5760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a401610878565b6001600160a01b0383166131185760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e000000000000000000000000000000000000006064820152608401610878565b6131248160008461272c565b6001600160a01b038416600090815260076020526040812080546001929061314d908490613e1e565b90915550506001600160a01b038316600090815260076020526040812080546001929061317b908490613f5c565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156132725760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e00000000000000000000000000000000000000006064820152608401610878565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b60006132e3826126ed565b1561333b5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610878565b506000908152600a602052604090205460ff1690565b60606010805461079790613d98565b6001600160a01b0383166133ca5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b6064820152608401610878565b6133d3826126ed565b61342a5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b6064820152608401610878565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff191683179055908452600890925282208054919290916134a3908490613f5c565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b60006134f8826126ed565b156135505760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c7265616479206578697374604482015261399760f11b6064820152608401610878565b506000908152600b602052604090205460ff1690565b60006001600160a01b0384163b156136fb576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea761906135c3903390899088908890600401613f74565b6020604051808303816000875af19250505080156135fe575060408051601f3d908101601f191682019092526135fb91810190613fb0565b60015b6136b0573d80801561362c576040519150601f19603f3d011682016040523d82523d6000602084013e613631565b606091505b5080516136a8576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e6064820152608401610878565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea7610000000000000000000000000000000000000000000000000000000014905061286d565b506001949350505050565b60006001600160a01b0384163b156136fb576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e090613763903390899088908890600401613f74565b6020604051808303816000875af192505050801561379e575060408051601f3d908101601f1916820190925261379b91810190613fb0565b60015b61386c573d8080156137cc576040519150601f19603f3d011682016040523d82523d6000602084013e6137d1565b606091505b5080516136a85760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a401610878565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e00000000000000000000000000000000000000000000000000000000014905061286d565b8280546138c390613d98565b90600052602060002090601f0160209004810192826138e5576000855561392b565b82601f106138fe5782800160ff1982351617855561392b565b8280016001018555821561392b579182015b8281111561392b578235825591602001919060010190613910565b5061393792915061393b565b5090565b5b80821115613937576000815560010161393c565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461234a57600080fd5b60006020828403121561399057600080fd5b813561203881613950565b60005b838110156139b657818101518382015260200161399e565b83811115610aa45750506000910152565b600081518084526139df81602086016020860161399b565b601f01601f19169290920160200192915050565b60208152600061203860208301846139c7565b600060208284031215613a1857600080fd5b5035919050565b80356001600160a01b0381168114613a3657600080fd5b919050565b60008060408385031215613a4e57600080fd5b613a5783613a1f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613a9157600080fd5b613a9a85613a1f565b9350613aa860208601613a1f565b925060408501359150606085013567ffffffffffffffff80821115613acc57600080fd5b818701915087601f830112613ae057600080fd5b813581811115613af257613af2613a65565b604051601f8201601f19908116603f01168101908382118183101715613b1a57613b1a613a65565b816040528281528a6020848701011115613b3357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215613b6c57600080fd5b613b7584613a1f565b9250613b8360208501613a1f565b9150604084013590509250925092565b600060208284031215613ba557600080fd5b61203882613a1f565b60008060408385031215613bc157600080fd5b82359150613bd160208401613a1f565b90509250929050565b60008060408385031215613bed57600080fd5b50508035926020909101359150565b803560ff81168114613a3657600080fd5b600080600080600060808688031215613c2557600080fd5b613c2e86613a1f565b9450602086013567ffffffffffffffff80821115613c4b57600080fd5b818801915088601f830112613c5f57600080fd5b813581811115613c6e57600080fd5b896020828501011115613c8057600080fd5b602083019650809550505050613c9860408701613bfc565b9150613ca660608701613bfc565b90509295509295909350565b60008060408385031215613cc557600080fd5b613cce83613a1f565b915060208301358015158114613ce357600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015613d2f5783516001600160a01b031683529284019291840191600101613d0a565b50909695505050505050565b60008060408385031215613d4e57600080fd5b613d5783613a1f565b9150613bd160208401613a1f565b600080600060608486031215613d7a57600080fd5b613d8384613a1f565b95602085013595506040909401359392505050565b600181811c90821680613dac57607f821691505b60208210811415613dcd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613e0357613e03613dd3565b500290565b634e487b7160e01b600052603260045260246000fd5b600082821015613e3057613e30613dd3565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415613e5f57613e5f613dd3565b5060010190565b600082613e8357634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff841680821015613ea257613ea2613dd3565b90039392505050565b600083516020613ebe828583890161399b565b845491840191600090600181811c9080831680613edc57607f831692505b858310811415613efa57634e487b7160e01b85526022600452602485fd5b808015613f0e5760018114613f1f57613f4c565b60ff19851688528388019550613f4c565b60008b81526020902060005b85811015613f445781548a820152908401908801613f2b565b505083880195505b50939a9950505050505050505050565b60008219821115613f6f57613f6f613dd3565b500190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152613fa660808301846139c7565b9695505050505050565b600060208284031215613fc257600080fd5b81516120388161395056fea264697066735822122086228650c39b1aca1860ace81a8dfefaebdd19eb423594d18a819f47d7168b2964736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2189:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "210:821:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "259:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "268:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "271:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "261:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "261:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "261:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "238:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "246:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "253:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "230:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "220:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "284:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "300:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "294:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:13:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "288:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "316:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "334:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "338:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "342:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:18:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "320:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "367:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "369:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "369:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "369:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "363:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "356:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "353:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "398:17:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:20",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:7:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "402:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "424:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "444:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "438:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "428:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "478:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "502:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "498:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "498:13:20"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "494:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "490:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:31:20"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "523:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "486:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "460:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "586:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "588:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "588:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "588:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "545:10:20"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "542:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "565:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "577:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "562:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "539:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "536:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "628:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "655:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "663:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "648:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "648:18:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "675:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "685:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "679:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "735:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "744:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "737:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "737:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "737:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "712:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "720:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "708:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "708:15:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "725:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "704:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "704:24:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "730:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "701:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "698:53:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "760:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "769:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "764:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "825:87:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "854:6:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "862:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "850:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "850:14:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "846:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:23:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "885:6:20"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:1:20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "881:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "881:14:20"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "877:23:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "871:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "871:30:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "839:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:63:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "839:63:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "790:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "793:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "787:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:9:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "797:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "799:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "808:1:20"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "811:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "804:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "799:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "783:3:20",
                    "statements": []
                  },
                  "src": "779:133:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "942:59:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "971:6:20"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "979:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "967:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "967:15:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "963:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:24:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:35:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:35:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "927:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "930:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "924:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "921:80:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:15:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1019:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1010:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "184:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "192:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "200:5:20",
                "type": ""
              }
            ],
            "src": "146:885:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:621:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1227:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1236:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1239:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1229:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1229:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1229:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1191:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1252:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1272:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:16:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1256:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1291:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1305:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1305:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1317:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1301:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:18:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1295:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1346:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1355:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1358:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1348:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1348:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1342:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1331:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1328:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1371:71:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1414:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1425:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1434:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1381:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:61:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1371:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1451:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1488:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1473:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1467:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1455:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1533:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1507:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1517:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:20"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1600:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1585:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1611:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1556:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1628:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1665:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1644:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "1632:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1707:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1710:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "1684:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1694:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1681:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1678:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:20"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "1777:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1788:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1733:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1723:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1131:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1142:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1154:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1162:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1170:6:20",
                "type": ""
              }
            ],
            "src": "1036:766:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:325:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1886:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1889:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1933:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1939:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1907:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1980:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1982:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1996:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1992:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1982:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1960:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1950:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2070:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2098:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2094:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2094:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2135:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2128:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2156:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2156:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2156:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2026:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2049:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2046:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2023:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2020:161:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1842:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1851:6:20",
                "type": ""
              }
            ],
            "src": "1807:380:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30823:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:133:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "81:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "92:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "99:66:20",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "88:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "88:78:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "78:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "78:89:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "71:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "71:97:20"
                  },
                  "nodeType": "YulIf",
                  "src": "68:117:20"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "47:5:20",
                "type": ""
              }
            ],
            "src": "14:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "311:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "313:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "313:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "313:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "286:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "295:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "282:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "282:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "307:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "278:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "278:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "275:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "336:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "349:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "340:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "405:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "381:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "381:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "430:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "420:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "231:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "242:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "254:6:20",
                "type": ""
              }
            ],
            "src": "196:245:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "551:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "574:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "551:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "611:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "611:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "604:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "586:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "521:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "532:4:20",
                "type": ""
              }
            ],
            "src": "446:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "710:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "705:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "791:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "791:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "814:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "810:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "804:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "804:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "784:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "784:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "731:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "734:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "728:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "742:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "744:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "753:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "749:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "749:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "744:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "724:3:20",
                    "statements": []
                  },
                  "src": "720:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "859:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "877:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "868:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "868:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "861:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "861:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "861:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "848:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "851:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "845:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "842:48:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "669:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "674:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "679:6:20",
                "type": ""
              }
            ],
            "src": "638:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:267:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "961:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "981:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "975:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:12:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "965:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1003:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "996:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1050:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:16:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1068:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1073:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:14:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1080:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1024:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1024:63:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:116:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1111:3:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1120:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1120:15:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1137:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1116:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1116:88:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:98:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1103:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:109:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1096:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "935:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "943:3:20",
                "type": ""
              }
            ],
            "src": "901:317:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1344:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1361:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1372:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1354:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1354:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1354:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1384:53:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1410:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1392:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:45:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1384:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1313:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1324:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1335:4:20",
                "type": ""
              }
            ],
            "src": "1223:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:110:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1539:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1548:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1560:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1528:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1589:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1612:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1599:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:20",
                "type": ""
              }
            ],
            "src": "1448:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:125:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1744:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1786:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1801:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:74:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1714:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1725:4:20",
                "type": ""
              }
            ],
            "src": "1633:226:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1913:147:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1945:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1932:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1923:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2038:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2047:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2040:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2040:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2040:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1974:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1985:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1992:42:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1981:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1981:54:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1971:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:65:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:73:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1961:93:20"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1892:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1903:5:20",
                "type": ""
              }
            ],
            "src": "1864:196:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2198:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2210:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2200:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2200:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2200:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2173:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2182:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2165:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2162:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2252:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2233:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2271:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2298:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2309:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2294:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2294:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2281:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2281:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2110:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2121:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2133:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2141:6:20",
                "type": ""
              }
            ],
            "src": "2065:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2373:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2376:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2463:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2494:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2324:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:1067:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2690:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2699:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2702:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2692:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2692:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2692:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2664:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2656:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2656:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2653:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2715:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2725:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2763:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2807:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2792:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2773:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2830:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2820:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2885:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2875:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2926:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2936:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2930:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2981:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2990:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2983:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2983:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2969:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2966:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2963:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3006:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3020:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3031:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3016:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3016:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3010:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3086:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3095:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3088:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3088:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3088:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3065:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3061:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3061:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3076:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3047:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3111:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3134:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3121:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:16:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3115:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3160:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3162:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3162:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3162:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3152:2:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3149:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3146:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3191:76:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3201:66:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3195:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3276:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3290:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3280:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3308:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3330:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3354:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3358:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3350:13:20"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3365:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3346:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3370:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3342:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3342:31:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "3375:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3312:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3438:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3440:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3440:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3440:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3397:10:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3409:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3394:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3417:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3429:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3414:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3391:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3388:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3476:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3480:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3507:6:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3515:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:18:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3541:2:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3545:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3537:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3537:11:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3550:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:20:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3555:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3530:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3527:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3606:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3602:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3623:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3627:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:11:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3632:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3589:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3589:46:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3589:46:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3659:6:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3667:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3655:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3655:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3651:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:24:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:35:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3688:16:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3698:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3688:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2585:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2596:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2608:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2616:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2624:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2632:6:20",
                "type": ""
              }
            ],
            "src": "2513:1197:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3819:224:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3865:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3874:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3877:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3867:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3867:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3867:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3840:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3849:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3836:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3836:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3832:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3829:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3890:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3919:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3900:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3938:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3982:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3948:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3948:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3995:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4022:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4033:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4018:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4005:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4005:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3995:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3769:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3780:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3792:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3800:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3808:6:20",
                "type": ""
              }
            ],
            "src": "3715:328:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4118:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4164:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4173:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4176:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4166:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4166:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4166:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4139:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4148:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4160:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4131:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4131:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4128:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4189:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4218:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4199:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4189:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4084:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4095:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4107:6:20",
                "type": ""
              }
            ],
            "src": "4048:186:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4340:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4350:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4362:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4373:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4358:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4358:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4350:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4392:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4403:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4385:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4385:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4385:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4309:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4320:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4331:4:20",
                "type": ""
              }
            ],
            "src": "4239:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4508:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4554:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4563:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4566:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4556:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4556:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4556:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4529:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4538:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4525:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4525:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4550:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4521:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4521:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4518:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4579:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4602:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4589:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4579:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4621:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4665:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4650:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4631:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4631:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4621:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4466:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4477:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4489:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4497:6:20",
                "type": ""
              }
            ],
            "src": "4421:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4767:161:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4813:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4822:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4825:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4815:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4815:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4815:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4788:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4797:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4784:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4784:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4809:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4780:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4780:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4777:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4838:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4861:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4848:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4848:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4838:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4880:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4907:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4918:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4903:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4903:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4890:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4890:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4880:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4725:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4736:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4748:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4756:6:20",
                "type": ""
              }
            ],
            "src": "4680:248:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4980:109:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4990:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5012:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4999:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4990:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5067:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5076:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5079:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5069:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5069:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5069:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5041:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5052:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5059:4:20",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5048:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5048:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5038:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5038:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5031:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5031:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5028:55:20"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4959:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4970:5:20",
                "type": ""
              }
            ],
            "src": "4933:156:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5231:670:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5278:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5287:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5290:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5280:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5280:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5280:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5252:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5261:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5248:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5248:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5273:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5244:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5244:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5241:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5303:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5332:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5313:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5303:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5351:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5382:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5393:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5378:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5378:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5365:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5365:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5355:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5406:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5416:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5410:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5461:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5470:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5473:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5463:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5463:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5463:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5449:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5457:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5446:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5446:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5443:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5486:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5500:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5511:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5496:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5490:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5566:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5575:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5578:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5568:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5568:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5568:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5545:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5549:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5541:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5541:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5556:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5537:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5537:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5530:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5530:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5527:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5591:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5618:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5605:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5605:16:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5595:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5648:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5657:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5660:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5650:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5650:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5650:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5636:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5644:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5633:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5630:34:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5714:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5723:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5726:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5716:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5716:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5716:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5687:2:20"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5691:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5683:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5683:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5700:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5679:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5679:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5705:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5676:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5676:37:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5673:57:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5739:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5753:2:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5757:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5749:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:11:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5739:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5769:16:20",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "5779:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5769:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5794:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5825:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5836:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5821:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "5804:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5794:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5849:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5880:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5891:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5876:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5876:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "5859:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5859:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5849:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5165:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5176:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5188:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5196:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5204:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5212:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5220:6:20",
                "type": ""
              }
            ],
            "src": "5094:807:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5990:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6036:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6045:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6048:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6038:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6038:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6038:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6011:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6020:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6007:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6007:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6032:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6003:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6003:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6000:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6061:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6090:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6071:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6071:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6061:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6109:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6139:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6150:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6135:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6135:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6122:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6122:32:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6113:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6207:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6216:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6219:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6209:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6209:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6209:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6176:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6197:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6190:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6190:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6183:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6183:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6173:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6173:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6166:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6163:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6232:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6242:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6232:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5948:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5959:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5971:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5979:6:20",
                "type": ""
              }
            ],
            "src": "5906:347:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6409:530:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6419:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6429:2:20",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6423:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6440:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6458:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6469:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6454:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6454:18:20"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6444:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6488:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6499:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6481:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6481:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6481:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6511:17:20",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6522:6:20"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6515:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6537:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6557:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6551:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6551:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6541:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6580:6:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6588:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6573:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6573:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6573:22:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6604:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6615:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6626:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6611:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6611:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6604:3:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6638:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6656:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6664:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6652:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6652:15:20"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6642:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6676:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6685:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6680:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6744:169:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6765:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6780:6:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6774:5:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6774:13:20"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6789:42:20",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6770:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6770:62:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6758:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6758:75:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6758:75:20"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6846:19:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6857:3:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6862:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6853:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6853:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6846:3:20"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6878:25:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6892:6:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6900:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6888:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6888:15:20"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6878:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6706:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6709:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6703:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6703:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6717:18:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6719:14:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6728:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6731:1:20",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6724:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6724:9:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6719:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6699:3:20",
                    "statements": []
                  },
                  "src": "6695:218:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6922:11:20",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6930:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6922:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6378:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6389:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6400:4:20",
                "type": ""
              }
            ],
            "src": "6258:681:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7031:173:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7077:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7086:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7089:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7079:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7079:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7079:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7052:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7061:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7048:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7048:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7073:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7044:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7044:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7041:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7102:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7131:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7112:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7112:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7102:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7150:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7183:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7194:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7179:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7179:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7160:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7160:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7150:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6989:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7000:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7012:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7020:6:20",
                "type": ""
              }
            ],
            "src": "6944:260:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7313:218:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7359:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7368:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7371:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7361:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7361:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7361:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7334:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7343:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7330:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7355:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7323:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7384:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7413:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7394:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7394:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7384:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7432:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7459:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7470:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7455:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7455:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7442:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7442:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7432:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7483:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7510:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7521:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7506:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7506:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7493:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7493:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7483:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7263:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7274:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7286:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7294:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7302:6:20",
                "type": ""
              }
            ],
            "src": "7209:322:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7591:382:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7601:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7615:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7618:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "7611:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7601:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7632:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7662:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7668:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7658:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7658:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7636:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7709:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7711:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7725:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7733:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7721:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7721:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7711:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7689:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7682:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7679:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7799:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7820:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7823:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7813:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7813:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7813:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7921:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7924:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7914:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7914:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7914:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7949:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7952:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7942:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7942:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7942:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7755:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7778:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7786:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7775:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7775:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7752:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7752:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7749:218:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7571:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7580:6:20",
                "type": ""
              }
            ],
            "src": "7536:437:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8152:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8169:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8180:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8162:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8162:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8162:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8203:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8214:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8199:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8199:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8219:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8192:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8192:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8192:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8242:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8253:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8238:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8238:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20646f6573206e6f742065786973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8258:34:20",
                        "type": "",
                        "value": "ERC1190: The token does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8231:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8231:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8231:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8313:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8324:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8309:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8309:18:20"
                      },
                      {
                        "hexValue": "742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8329:4:20",
                        "type": "",
                        "value": "t."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8302:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8302:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8302:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8343:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8355:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8366:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8351:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8343:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8129:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8143:4:20",
                "type": ""
              }
            ],
            "src": "7978:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8555:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8572:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8583:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8565:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8565:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8565:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8606:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8617:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8602:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8602:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8622:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8595:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8595:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8595:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8645:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8656:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8641:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8641:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8661:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8634:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8634:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8634:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8716:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8727:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8712:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8712:18:20"
                      },
                      {
                        "hexValue": "656e74206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8732:12:20",
                        "type": "",
                        "value": "ent owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8705:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8705:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8705:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8754:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8766:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8777:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8762:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8762:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8754:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8532:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8546:4:20",
                "type": ""
              }
            ],
            "src": "8381:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8966:310:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8983:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8994:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8976:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8976:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8976:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9017:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9028:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9013:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9013:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9033:2:20",
                        "type": "",
                        "value": "80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9006:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9006:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9006:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9056:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9067:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9052:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9052:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9072:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9045:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9045:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9045:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9127:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9138:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9123:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9123:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206f662074686520746f6b656e206e6f7220617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9143:34:20",
                        "type": "",
                        "value": "he owner of the token nor approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9116:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9116:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9116:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9198:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9209:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9194:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9194:19:20"
                      },
                      {
                        "hexValue": "656420746f206d616e6167652069742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9215:18:20",
                        "type": "",
                        "value": "ed to manage it."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9187:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9187:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9243:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9255:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9266:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9251:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9251:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9243:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b27074ee76ec418c9d7f4fc560335c1ae7aa4fad63b677a287a84432bda5ab7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8943:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8957:4:20",
                "type": ""
              }
            ],
            "src": "8792:484:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9455:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9472:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9483:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9465:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9465:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9465:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9506:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9517:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9502:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9502:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9522:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9495:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9495:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9495:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9545:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9556:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9541:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9541:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9561:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9534:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9534:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9616:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9627:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9612:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9612:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206e6f7220617070726f76656420746f206d616e61676520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9632:34:20",
                        "type": "",
                        "value": "he owner nor approved to manage "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9605:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9605:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9605:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9687:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9698:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9683:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9683:19:20"
                      },
                      {
                        "hexValue": "74686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9704:12:20",
                        "type": "",
                        "value": "the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9676:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9676:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9676:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9726:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9738:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9749:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9734:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9734:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9726:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9432:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9446:4:20",
                "type": ""
              }
            ],
            "src": "9281:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9938:242:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9955:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9966:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9948:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9948:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9948:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9989:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10000:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9985:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9985:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10005:2:20",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9978:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9978:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9978:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10028:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10039:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10024:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10024:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206372656174697665206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10044:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has creative own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10017:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10017:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10017:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10099:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10110:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10095:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10095:18:20"
                      },
                      {
                        "hexValue": "657273686970206f76657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10115:22:20",
                        "type": "",
                        "value": "ership over tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10088:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10088:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10088:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10147:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10159:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10170:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10155:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10155:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10147:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9915:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9929:4:20",
                "type": ""
              }
            ],
            "src": "9764:416:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10359:313:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10376:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10387:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10369:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10369:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10369:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10410:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10421:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10406:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10406:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10426:2:20",
                        "type": "",
                        "value": "83"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10399:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10399:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10399:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10449:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10460:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10445:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10445:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10465:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10438:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10438:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10438:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10520:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10531:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10516:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10516:18:20"
                      },
                      {
                        "hexValue": "6865206372656174697665206f776e6572206e6f7220617070726f7665642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10536:34:20",
                        "type": "",
                        "value": "he creative owner nor approved t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10509:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10509:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10509:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10591:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10602:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10587:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10587:19:20"
                      },
                      {
                        "hexValue": "6f206d616e6167652074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10608:21:20",
                        "type": "",
                        "value": "o manage the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10580:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10580:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10580:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10639:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10651:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10662:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10647:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10647:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10639:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10336:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10350:4:20",
                "type": ""
              }
            ],
            "src": "10185:487:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10851:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10868:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10879:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10861:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10861:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10861:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10913:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10898:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10918:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10891:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10891:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10891:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10941:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10952:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10937:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10937:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2063726561746976654f776e65722063616e6e6f74206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10957:34:20",
                        "type": "",
                        "value": "ERC1190: creativeOwner cannot be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10930:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10930:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10930:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11012:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11023:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11008:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11008:18:20"
                      },
                      {
                        "hexValue": "20746865207a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11028:20:20",
                        "type": "",
                        "value": " the zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11001:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11001:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11001:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11058:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11070:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11081:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11066:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11066:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11058:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10828:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10842:4:20",
                "type": ""
              }
            ],
            "src": "10677:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11270:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11287:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11298:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11280:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11280:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11280:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11321:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11332:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11317:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11317:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11337:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11310:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11310:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11310:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11360:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11371:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11356:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11356:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2072656e7465722063616e6e6f7420626520746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11376:34:20",
                        "type": "",
                        "value": "ERC1190: renter cannot be the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11349:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11349:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11349:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11431:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11442:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11427:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11427:18:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11447:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11420:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11420:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11420:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11470:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11482:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11493:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11478:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11478:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11470:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11247:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11261:4:20",
                "type": ""
              }
            ],
            "src": "11096:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11682:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11699:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11710:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11692:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11692:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11692:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11733:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11744:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11729:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11729:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11749:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11722:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11722:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11722:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11772:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11783:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11768:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11768:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652072656e74657220686173206e6f742072656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11788:34:20",
                        "type": "",
                        "value": "ERC1190: The renter has not rent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11761:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11761:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11761:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11843:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11854:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11839:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11839:18:20"
                      },
                      {
                        "hexValue": "65642074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11859:15:20",
                        "type": "",
                        "value": "ed the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11832:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11832:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11832:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11884:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11896:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11907:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11892:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11892:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11884:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11659:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11673:4:20",
                "type": ""
              }
            ],
            "src": "11508:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11954:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11971:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11974:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11964:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11964:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12068:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12071:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12061:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12061:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12061:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12092:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12095:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12085:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12085:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12085:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11922:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12163:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12282:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12284:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12284:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12284:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12194:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12187:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12187:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12180:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12180:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12202:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12209:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12277:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12205:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12205:74:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12199:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12199:81:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12176:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12176:105:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12173:131:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12313:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12328:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12331:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12324:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12324:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12313:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12142:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12145:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12151:7:20",
                "type": ""
              }
            ],
            "src": "12111:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12376:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12393:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12396:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12386:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12386:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12386:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12490:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:4:20",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12483:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12483:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12483:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12514:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12517:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12507:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12507:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12507:15:20"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "12344:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12582:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12604:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12606:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12606:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12606:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12598:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12601:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12595:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12595:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12592:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12635:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12647:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12650:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12643:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12643:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12635:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12564:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12567:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12573:4:20",
                "type": ""
              }
            ],
            "src": "12533:125:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12695:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12712:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12715:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12705:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12705:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12705:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12809:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12812:4:20",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12802:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12802:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12802:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12833:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12836:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12826:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12826:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12826:15:20"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "12663:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12899:148:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12990:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12992:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12992:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12992:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12915:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12922:66:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12912:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:77:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12909:103:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13021:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13032:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13039:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13028:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13028:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "13021:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12881:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12891:3:20",
                "type": ""
              }
            ],
            "src": "12852:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13226:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13243:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13254:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13277:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13288:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13273:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13273:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13293:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13266:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13266:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13266:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13316:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13327:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13312:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13312:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206f776e657273686970206f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13332:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has ownership ov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13305:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13305:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13305:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13387:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13398:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13383:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13383:18:20"
                      },
                      {
                        "hexValue": "657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13403:13:20",
                        "type": "",
                        "value": "er tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13376:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13376:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13376:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13426:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13438:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13449:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13434:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13434:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13426:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13203:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13217:4:20",
                "type": ""
              }
            ],
            "src": "13052:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13638:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13655:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13666:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13648:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13648:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13648:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13689:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13700:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13685:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13685:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13705:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13678:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13678:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13678:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13728:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13739:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13724:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13724:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13744:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13799:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13810:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13795:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13795:18:20"
                      },
                      {
                        "hexValue": "20746865204372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13815:34:20",
                        "type": "",
                        "value": " the Creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13788:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13788:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13788:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13870:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13881:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13866:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13866:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13887:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13859:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13859:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13859:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13909:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13921:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13932:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13917:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13917:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13909:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13615:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13629:4:20",
                "type": ""
              }
            ],
            "src": "13464:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14121:252:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14138:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14149:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14131:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14131:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14131:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14172:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14183:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14168:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14168:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14188:2:20",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14161:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14161:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14161:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14211:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14222:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14207:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14207:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14227:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14200:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14200:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14200:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14282:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14293:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14278:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14278:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14298:32:20",
                        "type": "",
                        "value": " not own the creative license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14271:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14271:60:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14271:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14340:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14352:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14363:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14348:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14348:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14340:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14098:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14112:4:20",
                "type": ""
              }
            ],
            "src": "13947:426:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14552:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14569:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14580:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14562:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14562:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14562:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14603:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14614:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14599:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14599:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14619:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14592:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14592:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14592:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14642:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14638:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14638:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14658:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14631:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14631:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14631:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14702:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14714:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14725:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14710:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14710:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14702:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14529:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14543:4:20",
                "type": ""
              }
            ],
            "src": "14378:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14913:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14930:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14941:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14923:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14923:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14923:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14964:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14975:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14960:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14960:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14980:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14953:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14953:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15003:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15014:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14999:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14999:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15019:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The token does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14992:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14992:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14992:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15074:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15085:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15070:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15070:18:20"
                      },
                      {
                        "hexValue": "6e6f742065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15090:12:20",
                        "type": "",
                        "value": "not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15063:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15063:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15063:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15112:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15124:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15135:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15120:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15120:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15112:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14890:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14904:4:20",
                "type": ""
              }
            ],
            "src": "14739:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15324:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15341:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15352:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15334:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15334:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15334:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15375:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15386:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15371:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15371:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15391:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15364:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15364:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15364:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15414:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15425:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15410:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15430:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15403:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15403:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15403:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15485:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15496:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15481:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15481:18:20"
                      },
                      {
                        "hexValue": "6963656e736520636f7374206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15501:34:20",
                        "type": "",
                        "value": "icense cost must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15474:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15474:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15474:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15556:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15567:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15552:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15552:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15573:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15545:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15545:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15545:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15588:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15600:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15611:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15596:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15596:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15588:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15301:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15315:4:20",
                "type": ""
              }
            ],
            "src": "15150:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15800:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15817:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15828:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15810:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15810:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15810:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15851:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15862:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15847:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15847:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15867:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15840:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15840:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15840:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15890:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15901:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15886:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15886:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15906:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15879:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15879:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15879:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15961:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15972:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15957:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15957:18:20"
                      },
                      {
                        "hexValue": "20746865204f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15977:34:20",
                        "type": "",
                        "value": " the Ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15950:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15950:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15950:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16032:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16043:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16028:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16028:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16049:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16021:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16021:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16021:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16072:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16084:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16095:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16080:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16080:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16072:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15777:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15791:4:20",
                "type": ""
              }
            ],
            "src": "15626:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16284:253:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16301:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16312:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16294:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16294:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16294:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16335:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16346:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16331:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16331:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16351:2:20",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16324:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16324:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16324:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16374:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16385:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16370:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16370:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16390:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16363:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16363:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16363:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16445:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16456:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16441:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16441:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16461:33:20",
                        "type": "",
                        "value": " not own the ownership license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16434:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16434:61:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16434:61:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16504:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16516:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16527:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16512:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16512:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16504:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16261:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16275:4:20",
                "type": ""
              }
            ],
            "src": "16110:427:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16719:277:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16729:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16741:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16752:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16737:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16737:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16729:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16772:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16787:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16795:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16783:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16783:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16765:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16765:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16765:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16859:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16870:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16855:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16855:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16879:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16887:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16875:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16875:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16848:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16848:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16848:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16913:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16924:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16909:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16909:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "16933:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16941:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16929:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16929:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16902:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16902:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16902:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16967:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16978:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16963:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16963:18:20"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16983:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16956:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16956:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16956:34:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16664:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16675:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16683:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16691:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16699:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16710:4:20",
                "type": ""
              }
            ],
            "src": "16542:454:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17175:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17192:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17203:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17185:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17185:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17185:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17226:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17237:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17222:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17222:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17242:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17215:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17215:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17215:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17265:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17276:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17261:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17261:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17281:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17254:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17254:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17254:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17336:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17347:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17332:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17332:18:20"
                      },
                      {
                        "hexValue": "63656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17352:34:20",
                        "type": "",
                        "value": "cense of this token cannot be tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17325:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17325:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17325:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17407:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17418:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17403:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17403:19:20"
                      },
                      {
                        "hexValue": "616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17424:12:20",
                        "type": "",
                        "value": "ansferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17396:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17396:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17396:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17446:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17458:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17469:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17454:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17454:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17446:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17152:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17166:4:20",
                "type": ""
              }
            ],
            "src": "17001:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17658:378:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17675:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17686:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17668:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17668:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17668:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17709:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17720:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17705:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17705:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17725:3:20",
                        "type": "",
                        "value": "107"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17698:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17698:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17698:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17749:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17760:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17745:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17745:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17765:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17738:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17738:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17738:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17820:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17831:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17816:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17816:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17836:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17809:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17809:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17809:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17891:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17902:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17887:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17887:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206372656174697665206c6963656e7365206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17908:34:20",
                        "type": "",
                        "value": "taining the creative license of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17880:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17880:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17880:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17963:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17974:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17959:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17959:19:20"
                      },
                      {
                        "hexValue": "7468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17980:13:20",
                        "type": "",
                        "value": "this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17952:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17952:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17952:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18003:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18015:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18026:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18011:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18011:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18003:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17635:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17649:4:20",
                "type": ""
              }
            ],
            "src": "17484:552:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18215:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18232:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18243:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18225:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18225:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18225:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18266:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18277:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18262:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18262:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18282:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18255:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18255:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18255:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18305:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18316:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18301:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18301:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18321:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18294:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18294:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18294:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18376:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18387:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18372:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18372:18:20"
                      },
                      {
                        "hexValue": "20746865206372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18392:34:20",
                        "type": "",
                        "value": " the creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18365:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18365:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18365:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18447:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18458:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18443:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18443:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18464:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18436:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18436:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18436:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18486:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18498:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18509:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18494:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18494:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18486:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18192:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18206:4:20",
                "type": ""
              }
            ],
            "src": "18041:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18698:295:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18715:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18726:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18708:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18708:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18708:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18749:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18760:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18745:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18745:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18765:2:20",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18738:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18738:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18738:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18788:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18799:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18784:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18784:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18804:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The asset relat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18777:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18777:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18777:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18859:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18870:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18855:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18855:18:20"
                      },
                      {
                        "hexValue": "656420746f207468697320746f6b656e206973206e6f742072656e7461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18875:34:20",
                        "type": "",
                        "value": "ed to this token is not rentable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18848:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18848:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18848:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18930:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18941:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18926:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18926:19:20"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18947:3:20",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18919:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18919:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18919:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18960:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18972:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18983:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18968:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18968:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18960:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18675:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18689:4:20",
                "type": ""
              }
            ],
            "src": "18524:469:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19044:228:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19075:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19096:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19099:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19089:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19089:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19089:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19197:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19200:4:20",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19190:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19190:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19190:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19225:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19228:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19218:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19218:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19218:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19064:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19057:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19057:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "19054:189:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19252:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19261:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19264:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19257:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19257:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19252:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19029:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19032:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19038:1:20",
                "type": ""
              }
            ],
            "src": "18998:274:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19451:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19468:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19479:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19461:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19461:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19461:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19502:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19513:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19498:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19498:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19518:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19491:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19491:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19491:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19541:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19552:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19537:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19537:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19557:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19530:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19530:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19530:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19612:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19623:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19608:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19608:18:20"
                      },
                      {
                        "hexValue": "206d75737420626520706f7369746976652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19628:20:20",
                        "type": "",
                        "value": " must be positive."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19601:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19601:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19601:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19658:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19670:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19681:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19666:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19666:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19658:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19428:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19442:4:20",
                "type": ""
              }
            ],
            "src": "19277:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19870:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19887:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19898:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19880:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19880:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19880:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19921:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19932:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19917:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19917:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19937:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19910:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19910:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19910:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19960:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19971:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19956:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19956:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19976:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19949:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19949:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19949:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20031:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20042:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20027:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20027:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420746f20636f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20047:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient to cov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20020:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20020:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20020:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20102:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20113:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20098:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20098:19:20"
                      },
                      {
                        "hexValue": "6572207468652072656e7420657870656e7365732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20119:23:20",
                        "type": "",
                        "value": "er the rent expenses."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20091:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20091:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20091:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20152:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20164:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20175:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20160:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20160:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20152:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19847:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19861:4:20",
                "type": ""
              }
            ],
            "src": "19696:489:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20237:148:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20247:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20262:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20265:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20258:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20258:12:20"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "20251:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20279:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20294:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20297:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20290:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20290:12:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "20283:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20327:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20329:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20329:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20329:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "20317:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "20322:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20314:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20314:12:20"
                  },
                  "nodeType": "YulIf",
                  "src": "20311:38:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20358:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "20370:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "20375:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20366:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20366:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20358:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20219:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20222:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20228:4:20",
                "type": ""
              }
            ],
            "src": "20190:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20564:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20581:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20592:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20574:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20574:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20574:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20615:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20626:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20611:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20611:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20631:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20604:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20604:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20604:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20665:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20650:18:20"
                      },
                      {
                        "hexValue": "455243313139303a206f776e65722063616e6e6f7420626520746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20670:34:20",
                        "type": "",
                        "value": "ERC1190: owner cannot be the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20643:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20643:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20643:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20725:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20736:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20721:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20721:18:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20741:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20714:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20714:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20714:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20763:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20775:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20786:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20771:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20771:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20763:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20541:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20555:4:20",
                "type": ""
              }
            ],
            "src": "20390:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20975:231:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20992:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21003:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20985:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20985:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20985:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21026:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21037:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21022:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21022:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21042:2:20",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21015:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21015:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21015:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21065:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21076:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21061:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21061:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f2066696c65206173736f63696174656420746f2074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21081:34:20",
                        "type": "",
                        "value": "ERC1190: No file associated to t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21054:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21054:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21054:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21136:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21147:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21132:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21132:18:20"
                      },
                      {
                        "hexValue": "686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21152:11:20",
                        "type": "",
                        "value": "he token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21125:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21125:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21125:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21173:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21185:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21196:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21181:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21181:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21173:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20952:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20966:4:20",
                "type": ""
              }
            ],
            "src": "20801:405:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21267:65:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21284:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "21287:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21277:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21277:14:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21277:14:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21300:26:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21318:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21321:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "21308:9:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21308:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "21300:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "21250:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "21258:4:20",
                "type": ""
              }
            ],
            "src": "21211:121:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21521:1266:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21531:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21551:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21545:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21545:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21535:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21567:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21577:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21571:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21616:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21624:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21612:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21612:15:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21629:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21634:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21590:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21590:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21590:51:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21650:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21667:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21672:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21663:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21663:16:20"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "21654:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21688:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21699:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "ret",
                      "nodeType": "YulTypedName",
                      "src": "21692:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21709:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21732:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "21726:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21726:13:20"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "21713:9:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21748:19:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "21764:3:20"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "21752:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21776:11:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21786:1:20",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21780:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21796:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21812:2:20"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "21816:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "21808:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21808:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "length_1",
                      "nodeType": "YulIdentifier",
                      "src": "21796:8:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21835:44:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "21865:9:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21876:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21861:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21861:18:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "21839:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21926:55:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21940:31:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "21956:8:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21966:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21952:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21952:19:20"
                        },
                        "variableNames": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "21940:8:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21898:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21891:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21891:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "21888:93:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22042:172:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22063:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22068:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22056:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22056:90:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22056:90:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22166:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22169:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22159:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22159:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22159:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22194:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22199:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22187:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22187:17:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22187:17:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "21996:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "22019:8:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22029:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "22016:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22016:16:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21993:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21993:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "21990:224:20"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22264:161:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22285:5:20"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "22296:9:20"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "22307:66:20",
                                      "type": "",
                                      "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "22292:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22292:82:20"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "22278:6:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22278:97:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22278:97:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "22388:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22399:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22406:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22395:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22395:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "22388:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "22257:168:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22262:1:20",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22441:321:20",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "22455:52:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22500:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "22470:29:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22470:37:20"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "22459:7:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "22520:10:20",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22529:1:20",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "22524:1:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "22599:113:20",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "end_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "22628:5:20"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "22635:1:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22624:3:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22624:13:20"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "22645:7:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "22639:5:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22639:14:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "22617:6:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22617:37:20"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "22617:37:20"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22671:27:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "22686:7:20"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "22695:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22682:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22682:16:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "22671:7:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "22554:1:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22557:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "22551:2:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22551:15:20"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "22567:19:20",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22569:15:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "22578:1:20"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "22581:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22574:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22574:10:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "22569:1:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "22547:3:20",
                              "statements": []
                            },
                            "src": "22543:169:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "22725:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22736:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22743:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22732:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22732:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "22725:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "22434:328:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22439:1:20",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "22230:18:20"
                  },
                  "nodeType": "YulSwitch",
                  "src": "22223:539:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22771:10:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "22778:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22771:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21489:3:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21494:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21502:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21513:3:20",
                "type": ""
              }
            ],
            "src": "21337:1450:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22966:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22983:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22994:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22976:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22976:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22976:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23017:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23028:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23013:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23013:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23033:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23006:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23006:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23006:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23056:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23067:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23052:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23052:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23072:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23045:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23045:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23045:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23127:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23138:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23123:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23123:18:20"
                      },
                      {
                        "hexValue": "63656e736520636f7374206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23143:34:20",
                        "type": "",
                        "value": "cense cost must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23116:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23116:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23116:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23198:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23209:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23194:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23194:19:20"
                      },
                      {
                        "hexValue": "302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23215:4:20",
                        "type": "",
                        "value": "0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23187:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23187:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23187:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23229:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23241:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23252:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23237:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23237:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23229:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22943:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22957:4:20",
                "type": ""
              }
            ],
            "src": "22792:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23441:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23458:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23469:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23451:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23451:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23451:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23492:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23503:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23488:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23488:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23508:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23481:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23481:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23481:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23531:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23542:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23527:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23527:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f7374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23547:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental cost"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23520:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23520:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23520:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23602:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23613:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23598:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23598:18:20"
                      },
                      {
                        "hexValue": "20706572207365636f6e64206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23618:34:20",
                        "type": "",
                        "value": " per second must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23591:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23591:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23591:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23673:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23684:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23669:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23669:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23690:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23662:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23662:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23662:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23705:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23717:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23728:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23713:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23713:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23705:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23418:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23432:4:20",
                "type": ""
              }
            ],
            "src": "23267:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23917:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23934:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23945:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23927:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23927:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23927:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23968:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23979:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23964:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23964:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23984:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23957:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23957:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23957:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24007:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24018:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24003:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24003:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24023:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23996:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23996:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24078:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24089:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24074:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24074:18:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24094:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24067:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24067:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24067:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24112:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24124:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24135:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24120:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24120:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24112:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23894:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23908:4:20",
                "type": ""
              }
            ],
            "src": "23743:402:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24324:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24341:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24352:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24334:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24334:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24334:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24375:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24386:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24371:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24371:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24391:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24364:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24364:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24364:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24414:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24425:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24410:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24430:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24403:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24403:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24403:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24485:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24496:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24481:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24481:18:20"
                      },
                      {
                        "hexValue": "6963656e7365206f66207468697320746f6b656e2063616e6e6f742062652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24501:34:20",
                        "type": "",
                        "value": "icense of this token cannot be t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24474:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24474:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24474:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24556:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24567:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24552:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24552:19:20"
                      },
                      {
                        "hexValue": "72616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24573:13:20",
                        "type": "",
                        "value": "ransferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24545:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24545:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24545:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24596:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24608:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24619:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24604:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24604:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24596:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24301:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24315:4:20",
                "type": ""
              }
            ],
            "src": "24150:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24808:379:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24825:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24836:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24818:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24818:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24818:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24859:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24870:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24855:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24855:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24875:3:20",
                        "type": "",
                        "value": "108"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24848:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24848:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24848:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24899:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24910:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24895:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24895:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24915:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24888:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24888:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24888:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24970:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24981:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24966:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24966:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24986:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24959:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24959:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24959:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25041:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25052:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25037:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25037:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206f776e657273686970206c6963656e7365206f66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25058:34:20",
                        "type": "",
                        "value": "taining the ownership license of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25030:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25030:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25030:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25113:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25124:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25109:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25109:19:20"
                      },
                      {
                        "hexValue": "207468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25130:14:20",
                        "type": "",
                        "value": " this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25102:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25102:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25102:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25154:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25166:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25177:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25162:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25162:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25154:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24785:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24799:4:20",
                "type": ""
              }
            ],
            "src": "24634:553:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25366:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25383:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25394:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25376:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25376:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25376:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25417:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25428:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25413:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25413:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25433:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25406:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25406:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25406:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25456:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25467:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25452:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25452:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25472:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25445:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25445:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25445:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25527:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25538:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25523:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25523:18:20"
                      },
                      {
                        "hexValue": "20746865206f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25543:34:20",
                        "type": "",
                        "value": " the ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25516:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25516:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25516:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25598:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25609:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25594:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25594:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25615:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25587:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25587:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25587:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25638:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25650:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25661:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25646:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25646:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25638:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25343:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25357:4:20",
                "type": ""
              }
            ],
            "src": "25192:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25850:254:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25867:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25878:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25860:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25860:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25860:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25901:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25912:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25897:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25897:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25917:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25890:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25890:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25890:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25940:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25951:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25936:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25936:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472616e7366657220746f20636f6e7472616374206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25956:34:20",
                        "type": "",
                        "value": "ERC1190: Transfer to contract no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25929:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25929:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25929:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26011:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26022:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26007:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26007:18:20"
                      },
                      {
                        "hexValue": "7420696d706c656d656e74696e6720494552433131393052656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26027:34:20",
                        "type": "",
                        "value": "t implementing IERC1190Receiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26000:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26000:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26000:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26071:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26083:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26094:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26079:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26079:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26071:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25827:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25841:4:20",
                "type": ""
              }
            ],
            "src": "25676:428:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26283:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26300:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26311:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26293:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26293:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26293:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26334:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26345:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26330:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26350:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26323:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26323:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26323:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26373:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26384:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26369:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26369:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746865206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26389:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer the own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26362:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26362:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26362:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26444:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26455:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26440:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26440:18:20"
                      },
                      {
                        "hexValue": "657273686970206c6963656e7365206966206974206973206e6f74206f776e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26460:34:20",
                        "type": "",
                        "value": "ership license if it is not owne"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26433:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26433:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26433:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26515:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26526:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26511:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26511:19:20"
                      },
                      {
                        "hexValue": "642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26532:4:20",
                        "type": "",
                        "value": "d."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26504:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26504:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26504:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26546:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26558:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26569:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26554:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26554:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26546:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26260:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26274:4:20",
                "type": ""
              }
            ],
            "src": "26109:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26758:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26775:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26786:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26768:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26768:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26768:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26809:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26820:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26805:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26805:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26825:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26798:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26798:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26798:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26848:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26859:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26844:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26844:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746f2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26864:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer to the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26837:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26837:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26837:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26919:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26930:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26915:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26915:18:20"
                      },
                      {
                        "hexValue": "7a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26935:15:20",
                        "type": "",
                        "value": "zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26908:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26908:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26908:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26960:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26972:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26983:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26968:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26968:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26960:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26735:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26749:4:20",
                "type": ""
              }
            ],
            "src": "26584:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27046:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "27073:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "27075:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "27075:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "27075:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "27062:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "27069:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "27065:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27065:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "27059:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27059:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "27056:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27104:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "27115:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "27118:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27111:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27111:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "27104:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "27029:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "27032:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "27038:3:20",
                "type": ""
              }
            ],
            "src": "26998:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27305:229:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27322:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27333:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27315:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27315:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27315:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27356:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27367:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27352:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27352:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27372:2:20",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27345:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27345:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27345:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27395:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27406:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27391:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27391:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f2063616e6e6f7420626520746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27411:34:20",
                        "type": "",
                        "value": "ERC1190: to cannot be the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27384:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27384:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27384:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27466:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27477:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27462:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27462:18:20"
                      },
                      {
                        "hexValue": "6464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27482:9:20",
                        "type": "",
                        "value": "ddress."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27455:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27455:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27455:37:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27501:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27513:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27524:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27509:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27509:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27501:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27282:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27296:4:20",
                "type": ""
              }
            ],
            "src": "27131:403:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27713:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27730:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27741:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27723:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27723:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27723:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27764:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27775:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27760:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27760:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27780:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27753:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27753:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27753:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27803:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27814:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27799:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27799:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20616c7265616479206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27819:34:20",
                        "type": "",
                        "value": "ERC1190: The token already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27792:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27792:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27792:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27874:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27885:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27870:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27870:18:20"
                      },
                      {
                        "hexValue": "732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27890:4:20",
                        "type": "",
                        "value": "s."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27863:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27863:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27863:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27904:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27916:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27927:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27912:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27912:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27904:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27690:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27704:4:20",
                "type": ""
              }
            ],
            "src": "27539:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28116:179:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28133:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28144:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28126:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28126:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28126:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28167:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28178:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28163:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28163:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28183:2:20",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28156:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28156:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28156:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28206:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28217:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28202:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28202:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f6b656e20616c7265616479206d696e746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28222:31:20",
                        "type": "",
                        "value": "ERC1190: token already minted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28195:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28195:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28195:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28263:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28275:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28286:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28271:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28271:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28263:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e051fa44a8b6b5d8a68986e5094a412682411371b2426de7a46426392ad90731__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28093:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28107:4:20",
                "type": ""
              }
            ],
            "src": "27942:353:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28474:239:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28491:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28502:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28484:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28484:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28484:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28525:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28536:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28521:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28521:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28541:2:20",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28514:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28514:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28514:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28564:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28575:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28560:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28560:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f722072656e74616c206f757420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28580:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for rental out "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28553:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28553:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28553:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28635:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28646:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28631:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28631:18:20"
                      },
                      {
                        "hexValue": "6f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28651:19:20",
                        "type": "",
                        "value": "of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28624:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28624:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28680:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28692:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28703:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28688:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28688:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28680:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28451:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28465:4:20",
                "type": ""
              }
            ],
            "src": "28300:413:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28892:251:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28909:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28920:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28902:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28902:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28902:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28943:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28954:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28939:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28939:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28959:2:20",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28932:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28932:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28932:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28982:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28993:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28978:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28978:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f72206f776e6572736869702074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28998:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for ownership t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28971:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28971:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28971:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29053:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29064:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29049:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29049:18:20"
                      },
                      {
                        "hexValue": "72616e73666572206f7574206f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29069:31:20",
                        "type": "",
                        "value": "ransfer out of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29042:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29042:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29042:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29110:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29122:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29133:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29118:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29118:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29110:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28869:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28883:4:20",
                "type": ""
              }
            ],
            "src": "28718:425:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29322:234:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29339:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29350:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29332:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29332:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29332:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29373:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29384:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29369:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29369:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29389:2:20",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29362:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29362:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29362:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29412:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29423:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29408:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29408:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20546865206f776e65722063616e6e6f7420617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29428:34:20",
                        "type": "",
                        "value": "ERC1190: The owner cannot approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29401:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29401:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29401:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29483:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29494:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29479:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29479:18:20"
                      },
                      {
                        "hexValue": "6520746865697273656c662e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29499:14:20",
                        "type": "",
                        "value": "e theirself."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29472:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29472:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29472:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29523:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29535:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29546:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29531:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29531:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29523:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29299:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29313:4:20",
                "type": ""
              }
            ],
            "src": "29148:408:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29764:309:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "29774:52:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "29784:42:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "29778:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29842:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "29857:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29865:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29853:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29853:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29835:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29835:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29835:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29889:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29900:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29885:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29885:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "29909:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29917:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29905:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29905:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29878:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29878:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29878:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29941:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29952:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29937:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29937:18:20"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "29957:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29930:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29930:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29930:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29984:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29995:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29980:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29980:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30000:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29973:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29973:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29973:31:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30013:54:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "30039:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30051:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30062:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30047:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30047:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "30021:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30021:46:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30013:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29709:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "29720:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "29728:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29736:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29744:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29755:4:20",
                "type": ""
              }
            ],
            "src": "29561:512:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30158:169:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30204:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30213:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30216:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "30206:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30206:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30206:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "30179:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30188:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30175:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30175:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30200:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "30171:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30171:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "30168:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "30229:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30248:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30242:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30242:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "30233:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30291:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "30267:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30267:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30267:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30306:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "30316:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "30306:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30124:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "30135:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30147:6:20",
                "type": ""
              }
            ],
            "src": "30078:249:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30506:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30523:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30534:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30516:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30516:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30516:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30557:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30568:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30553:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30553:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30573:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30546:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30546:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30546:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30596:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30607:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30592:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30592:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472696564207472616e7366657220746f20636f6e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30612:34:20",
                        "type": "",
                        "value": "ERC1190: Tried transfer to contr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30585:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30585:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30585:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30667:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30678:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30663:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30663:18:20"
                      },
                      {
                        "hexValue": "616374206e6f7420696d706c656d656e74696e67204945524331313930437265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30683:34:20",
                        "type": "",
                        "value": "act not implementing IERC1190Cre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30656:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30656:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30656:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30738:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30749:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30734:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30734:19:20"
                      },
                      {
                        "hexValue": "61746976654c6963656e736552656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30755:23:20",
                        "type": "",
                        "value": "ativeLicenseReceiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30727:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30727:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30727:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30788:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30800:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30811:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30796:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30796:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30788:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30483:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30497:4:20",
                "type": ""
              }
            ],
            "src": "30332:489:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := abi_decode_uint8(add(headStart, 64))\n        value4 := abi_decode_uint8(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token does not exis\")\n        mstore(add(headStart, 96), \"t.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b27074ee76ec418c9d7f4fc560335c1ae7aa4fad63b677a287a84432bda5ab7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner of the token nor approv\")\n        mstore(add(headStart, 128), \"ed to manage it.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner nor approved to manage \")\n        mstore(add(headStart, 128), \"the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has creative own\")\n        mstore(add(headStart, 96), \"ership over tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he creative owner nor approved t\")\n        mstore(add(headStart, 128), \"o manage the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190: creativeOwner cannot be\")\n        mstore(add(headStart, 96), \" the zero address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: renter cannot be the ze\")\n        mstore(add(headStart, 96), \"ro address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: The renter has not rent\")\n        mstore(add(headStart, 96), \"ed the token.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has ownership ov\")\n        mstore(add(headStart, 96), \"er tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the Creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the creative license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The token does \")\n        mstore(add(headStart, 96), \"not exist.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense cost must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the Ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the ownership license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense of this token cannot be tr\")\n        mstore(add(headStart, 128), \"ansferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 107)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the creative license of \")\n        mstore(add(headStart, 160), \"this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The asset relat\")\n        mstore(add(headStart, 96), \"ed to this token is not rentable\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental time\")\n        mstore(add(headStart, 96), \" must be positive.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient to cov\")\n        mstore(add(headStart, 128), \"er the rent expenses.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: owner cannot be the zer\")\n        mstore(add(headStart, 96), \"o address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1190: No file associated to t\")\n        mstore(add(headStart, 96), \"he token.\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let ret := 0\n        let slotValue := sload(value1)\n        let length_1 := ret\n        let _2 := 1\n        length_1 := shr(_2, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _2)\n        if iszero(outOfPlaceEncoding)\n        {\n            length_1 := and(length_1, 0x7f)\n        }\n        if eq(outOfPlaceEncoding, lt(length_1, _1))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(end_1, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(end_1, length_1)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value1)\n            let i := 0\n            for { } lt(i, length_1) { i := add(i, _1) }\n            {\n                mstore(add(end_1, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_1, length_1)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense cost must be greater than \")\n        mstore(add(headStart, 128), \"0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental cost\")\n        mstore(add(headStart, 96), \" per second must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense of this token cannot be t\")\n        mstore(add(headStart, 128), \"ransferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 108)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the ownership license of\")\n        mstore(add(headStart, 160), \" this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"ERC1190: Transfer to contract no\")\n        mstore(add(headStart, 96), \"t implementing IERC1190Receiver.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer the own\")\n        mstore(add(headStart, 96), \"ership license if it is not owne\")\n        mstore(add(headStart, 128), \"d.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer to the \")\n        mstore(add(headStart, 96), \"zero address.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC1190: to cannot be the zero a\")\n        mstore(add(headStart, 96), \"ddress.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token already exist\")\n        mstore(add(headStart, 96), \"s.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e051fa44a8b6b5d8a68986e5094a412682411371b2426de7a46426392ad90731__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC1190: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for rental out \")\n        mstore(add(headStart, 96), \"of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for ownership t\")\n        mstore(add(headStart, 96), \"ransfer out of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC1190: The owner cannot approv\")\n        mstore(add(headStart, 96), \"e theirself.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190: Tried transfer to contr\")\n        mstore(add(headStart, 96), \"act not implementing IERC1190Cre\")\n        mstore(add(headStart, 128), \"ativeLicenseReceiver.\")\n        tail := add(headStart, 160)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "271:10568:8:-:0;;;1034:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2320:17:7;;1168:9:8;;1179:11;;2320:17:7;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;2348:21:7;;;;:7;;:21;;;;;:::i;:::-;;2245:132;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1203:20:8;;::::1;::::0;:5:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1034:197:::0;;;271:10568;;640:96:2;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;271:10568:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;271:10568:8;;;-1:-1:-1;271:10568:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:766::-;1154:6;1162;1170;1223:2;1211:9;1202:7;1198:23;1194:32;1191:52;;;1239:1;1236;1229:12;1191:52;1266:16;;-1:-1:-1;;;;;1331:14:20;;;1328:34;;;1358:1;1355;1348:12;1328:34;1381:61;1434:7;1425:6;1414:9;1410:22;1381:61;:::i;:::-;1371:71;;1488:2;1477:9;1473:18;1467:25;1451:41;;1517:2;1507:8;1504:16;1501:36;;;1533:1;1530;1523:12;1501:36;1556:63;1611:7;1600:8;1589:9;1585:24;1556:63;:::i;:::-;1546:73;;1665:2;1654:9;1650:18;1644:25;1628:41;;1694:2;1684:8;1681:16;1678:36;;;1710:1;1707;1700:12;1678:36;;1733:63;1788:7;1777:8;1766:9;1762:24;1733:63;:::i;:::-;1723:73;;;1036:766;;;;;:::o;1807:380::-;1886:1;1882:12;;;;1929;;;1950:61;;2004:4;1996:6;1992:17;1982:27;;1950:61;2057:2;2049:6;2046:14;2026:18;2023:38;2020:161;;;2103:10;2098:3;2094:20;2091:1;2084:31;2138:4;2135:1;2128:15;2166:4;2163:1;2156:15;2020:161;;1807:380;;;:::o;:::-;271:10568:8;;;;;;",
  "deployedSourceMap": "271:10568:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:357:7;;;;;;;;;;-1:-1:-1;2449:357:7;;;;;:::i;:::-;;:::i;:::-;;;611:14:20;;604:22;586:41;;574:2;559:18;2449:357:7;;;;;;;;5165:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7719:261::-;;;;;;;;;;-1:-1:-1;7719:261:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1797:55:20;;;1779:74;;1767:2;1752:18;7719:261:7;1633:226:20;6874:452:7;;;;;;;;;;-1:-1:-1;6874:452:7;;;;;:::i;:::-;;:::i;:::-;;11854:418;;;;;;;;;;-1:-1:-1;11854:418:7;;;;;:::i;:::-;;:::i;4464:379::-;;;;;;;;;;-1:-1:-1;4464:379:7;;;;;:::i;:::-;;:::i;14155:207::-;;;;;;;;;;-1:-1:-1;14155:207:7;;;;;:::i;:::-;;:::i;14445:433::-;;;;;;;;;;-1:-1:-1;14445:433:7;;;;;:::i;:::-;;:::i;10314:376::-;;;;;;;;;;-1:-1:-1;10314:376:7;;;;;:::i;:::-;;:::i;3261:355::-;;;;;;;;;;-1:-1:-1;3261:355:7;;;;;:::i;:::-;;:::i;:::-;;;4385:25:20;;;4373:2;4358:18;3261:355:7;4239:177:20;20435:1375:7;;;;;;;;;;-1:-1:-1;20435:1375:7;;;;;:::i;:::-;;:::i;4063:330::-;;;;;;;;;;-1:-1:-1;4063:330:7;;;;;:::i;:::-;;:::i;1239:104:8:-;;;;;;;;;;;;;:::i;8956:527::-;;;;;;;;;;-1:-1:-1;8956:527:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;2609:421:8:-;;;;;;;;;;-1:-1:-1;2609:421:8;;;;;:::i;:::-;;:::i;11561:209:7:-;;;;;;;;;;-1:-1:-1;11561:209:7;;;;;:::i;:::-;;:::i;6494:498:8:-;;;;;;;;;;-1:-1:-1;6494:498:8;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;5337:106:7;;;;;;;;;;;;;:::i;1725:637:8:-;;;;;;;;;;-1:-1:-1;1725:637:8;;;;;:::i;:::-;;:::i;12841:391:7:-;;;;;;;;;;-1:-1:-1;12841:391:7;;;;;:::i;:::-;;:::i;8053:187::-;;;;;;;;;;-1:-1:-1;8053:187:7;;;;;:::i;:::-;;:::i;4908:189::-;;;;;;;;;;-1:-1:-1;4908:189:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3687:313::-;;;;;;;;;;-1:-1:-1;3687:313:7;;;;;:::i;:::-;;:::i;9833:1003:8:-;;;;;;:::i;:::-;;:::i;4699:1489::-;;;;;;:::i;:::-;;:::i;2876:307:7:-;;;;;;;;;;-1:-1:-1;2876:307:7;;;;;:::i;:::-;;:::i;5954:515::-;;;;;;;;;;-1:-1:-1;5954:515:7;;;;;:::i;:::-;;:::i;3276:418:8:-;;;;;;;;;;-1:-1:-1;3276:418:8;;;;;:::i;:::-;;:::i;8830:214:7:-;;;;;;;;;;-1:-1:-1;8830:214:7;;;;;:::i;:::-;-1:-1:-1;;;;;9001:25:7;;;8972:4;9001:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8830:214;3901:394:8;;;;;;;;;;-1:-1:-1;3901:394:8;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;19521:220:7:-;;;;;;;;;;-1:-1:-1;19521:220:7;;;;;:::i;:::-;;:::i;7345:1288:8:-;;;;;;:::i;:::-;;:::i;2449:357:7:-;2596:4;2638:41;;;;;:107;;-1:-1:-1;2696:49:7;;;2711:34;2696:49;2638:107;:160;;;-1:-1:-1;952:25:5;937:40;;;;2762:36:7;2618:180;2449:357;-1:-1:-1;;2449:357:7:o;5165:102::-;5221:13;5254:5;5247:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5165:102;:::o;7719:261::-;7840:7;7873:16;7881:7;7873;:16::i;:::-;7865:63;;;;-1:-1:-1;;;7865:63:7;;8180:2:20;7865:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;7865:63:7;;;;;;;;;-1:-1:-1;7948:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;7948:24:7;;7719:261::o;6874:452::-;6955:13;6971:24;6987:7;6971:15;:24::i;:::-;6955:40;;7020:5;-1:-1:-1;;;;;7014:11:7;:2;-1:-1:-1;;;;;7014:11:7;;;7006:66;;;;-1:-1:-1;;;7006:66:7;;8583:2:20;7006:66:7;;;8565:21:20;8622:2;8602:18;;;8595:30;8661:34;8641:18;;;8634:62;8732:12;8712:18;;;8705:40;8762:19;;7006:66:7;8381:406:20;7006:66:7;719:10:2;-1:-1:-1;;;;;7107:21:7;;;;:62;;-1:-1:-1;7132:37:7;7149:5;719:10:2;8830:214:7;:::i;7132:37::-;7085:192;;;;-1:-1:-1;;;7085:192:7;;8994:2:20;7085:192:7;;;8976:21:20;9033:2;9013:18;;;9006:30;9072:34;9052:18;;;9045:62;9143:34;9123:18;;;9116:62;9215:18;9194:19;;;9187:47;9251:19;;7085:192:7;8792:484:20;7085:192:7;7290:28;7299:5;7306:2;7310:7;7290:8;:28::i;:::-;6944:382;6874:452;;:::o;11854:418::-;12054:41;719:10:2;12087:7:7;12054:18;:41::i;:::-;12032:165;;;;-1:-1:-1;;;12032:165:7;;9483:2:20;12032:165:7;;;9465:21:20;9522:2;9502:18;;;9495:30;9561:34;9541:18;;;9534:62;9632:34;9612:18;;;9605:62;9704:12;9683:19;;;9676:41;9734:19;;12032:165:7;9281:478:20;12032:165:7;12210:54;12240:4;12246:2;12250:7;12259:4;12210:29;:54::i;:::-;11854:418;;;;:::o;4464:379::-;4589:7;4638:24;;;:15;:24;;;;;;-1:-1:-1;;;;;4638:24:7;4695:27;4673:129;;;;-1:-1:-1;;;4673:129:7;;9966:2:20;4673:129:7;;;9948:21:20;10005:2;9985:18;;;9978:30;10044:34;10024:18;;;10017:62;10115:22;10095:18;;;10088:50;10155:19;;4673:129:7;9764:416:20;14155:207:7;14304:50;14332:4;14338:2;14342:7;14304:50;;;;;;;;;;;;14445:433;14644:49;719:10:2;14685:7:7;14644:26;:49::i;:::-;14622:182;;;;-1:-1:-1;;;14622:182:7;;10387:2:20;14622:182:7;;;10369:21:20;10426:2;10406:18;;;10399:30;10465:34;10445:18;;;10438:62;10536:34;10516:18;;;10509:62;10608:21;10587:19;;;10580:50;10647:19;;14622:182:7;10185:487:20;14622:182:7;14817:53;14846:4;14852:2;14856:7;14865:4;14817:28;:53::i;10314:376::-;10482:41;719:10:2;10515:7:7;10482:18;:41::i;:::-;10460:165;;;;-1:-1:-1;;;10460:165:7;;9483:2:20;10460:165:7;;;9465:21:20;9522:2;9502:18;;;9495:30;9561:34;9541:18;;;9534:62;9632:34;9612:18;;;9605:62;9704:12;9683:19;;;9676:41;9734:19;;10460:165:7;9281:478:20;10460:165:7;10638:44;10664:4;10670:2;10674:7;10638:25;:44::i;3261:355::-;3399:7;-1:-1:-1;;;;;3446:27:7;;3424:127;;;;-1:-1:-1;;;3424:127:7;;10879:2:20;3424:127:7;;;10861:21:20;10918:2;10898:18;;;10891:30;10957:34;10937:18;;;10930:62;11028:20;11008:18;;;11001:48;11066:19;;3424:127:7;10677:414:20;3424:127:7;-1:-1:-1;;;;;;3571:37:7;;;;;:22;:37;;;;;;;3261:355::o;20435:1375::-;20556:7;20589:16;20597:7;20589;:16::i;:::-;20581:63;;;;-1:-1:-1;;;20581:63:7;;8180:2:20;20581:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;20581:63:7;7978:398:20;20581:63:7;-1:-1:-1;;;;;20679:20:7;;20657:113;;;;-1:-1:-1;;;20657:113:7;;11298:2:20;20657:113:7;;;11280:21:20;11337:2;11317:18;;;11310:30;11376:34;11356:18;;;11349:62;-1:-1:-1;;;11427:18:20;;;11420:41;11478:19;;20657:113:7;11096:407:20;20657:113:7;20805:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20805:25:7;;;;;;;;;;20783:125;;;;-1:-1:-1;;;20783:125:7;;11710:2:20;20783:125:7;;;11692:21:20;11749:2;11729:18;;;11722:30;11788:34;11768:18;;;11761:62;11859:15;11839:18;;;11832:43;11892:19;;20783:125:7;11508:409:20;20783:125:7;20921:18;20942:17;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20942:25:7;;;;;;;;;;20997:22;:15;21015:4;20997:22;:::i;:::-;20984:10;:35;20980:778;;;21105:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21105:25:7;;;;;;;;;21098:32;;;21105:17;21177:527;21236:21;;;;:12;:21;;;;;:28;21232:32;;:41;;;;;21269:4;21268:5;21232:41;21177:527;;;21334:21;;;;:12;:21;;;;;:24;;-1:-1:-1;;;;;21334:34:7;;;:21;21356:1;;21334:24;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;21334:24:7;:34;21330:359;;;21530:21;;;;:12;:21;;;;;21552:28;;:32;;21583:1;;21552:32;:::i;:::-;21530:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;21503:21;;;:12;:21;;;;;;;:24;;-1:-1:-1;;;;;21530:55:7;;;;21525:1;;21503:24;;;;;;:::i;:::-;;;;;;;;;;;;;:82;;-1:-1:-1;;21503:82:7;-1:-1:-1;;;;;21503:82:7;;;;;;;;;;;21608:21;;;:12;:21;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;21608:27:7;;;;;-1:-1:-1;;21608:27:7;;;;;;;;-1:-1:-1;21330:359:7;21292:3;;;;:::i;:::-;;;;21177:527;;;-1:-1:-1;;;;;;21718:23:7;;;;;;:15;:23;;;;;:28;;21745:1;;21718:23;:28;;21745:1;;21718:28;:::i;:::-;;;;-1:-1:-1;;;20980:778:7;-1:-1:-1;;21777:17:7;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21777:25:7;;;;;;;;;;;;;20435:1375::o;4063:330::-;4180:7;4221:16;;;:7;:16;;;;;;-1:-1:-1;;;;;4221:16:7;4270:19;4248:112;;;;-1:-1:-1;;;4248:112:7;;13254:2:20;4248:112:7;;;13236:21:20;13293:2;13273:18;;;13266:30;13332:34;13312:18;;;13305:62;13403:13;13383:18;;;13376:41;13434:19;;4248:112:7;13052:407:20;1239:104:8;1289:7;1316:19;:9;918:14:3;;827:112;1316:19:8;1309:26;;1239:104;:::o;8956:527::-;-1:-1:-1;;;;;9060:16:8;;9038:140;;;;-1:-1:-1;;;9038:140:8;;13666:2:20;9038:140:8;;;13648:21:20;13705:2;13685:18;;;13678:30;13744:34;13724:18;;;13717:62;13815:34;13795:18;;;13788:62;13887:12;13866:19;;;13859:41;13917:19;;9038:140:8;13464:478:20;9038:140:8;9191:21;9215:30;9237:7;9215:21;:30::i;:::-;9191:54;-1:-1:-1;719:10:2;-1:-1:-1;;;;;9280:35:8;;;9258:147;;;;-1:-1:-1;;;9258:147:8;;14149:2:20;9258:147:8;;;14131:21:20;14188:2;14168:18;;;14161:30;14227:34;14207:18;;;14200:62;14298:32;14278:18;;;14271:60;14348:19;;9258:147:8;13947:426:20;9258:147:8;9418:57;9448:13;9463:2;9467:7;9418:29;:57::i;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;14580:2:20;1240:68:0;;;14562:21:20;;;14599:18;;;14592:30;14658:34;14638:18;;;14631:62;14710:18;;1240:68:0;14378:356:20;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2609:421:8:-;2736:22;2750:7;2736:13;:22::i;:::-;2714:114;;;;-1:-1:-1;;;2714:114:8;;14941:2:20;2714:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;2714:114:8;14739:406:20;2714:114:8;2876:1;2863:10;:14;2841:131;;;;-1:-1:-1;;;2841:131:8;;15352:2:20;2841:131:8;;;15334:21:20;15391:2;15371:18;;;15364:30;15430:34;15410:18;;;15403:62;15501:34;15481:18;;;15474:62;15573:5;15552:19;;;15545:34;15596:19;;2841:131:8;15150:471:20;2841:131:8;2985:24;;;;:15;:24;;;;;;:37;2609:421::o;11561:209:7:-;11711:51;11740:4;11746:2;11750:7;11711:51;;;;;;;;;;;;:28;:51::i;6494:498:8:-;-1:-1:-1;;;;;6599:16:8;;6577:141;;;;-1:-1:-1;;;6577:141:8;;15828:2:20;6577:141:8;;;15810:21:20;15867:2;15847:18;;;15840:30;15906:34;15886:18;;;15879:62;15977:34;15957:18;;;15950:62;-1:-1:-1;;;16028:19:20;;;16021:42;16080:19;;6577:141:8;15626:479:20;6577:141:8;6731:13;6747:22;6761:7;6747:13;:22::i;:::-;6731:38;-1:-1:-1;719:10:2;-1:-1:-1;;;;;6804:27:8;;;6782:140;;;;-1:-1:-1;;;6782:140:8;;16312:2:20;6782:140:8;;;16294:21:20;16351:2;16331:18;;;16324:30;16390:34;16370:18;;;16363:62;16461:33;16441:18;;;16434:61;16512:19;;6782:140:8;16110:427:20;5337:106:7;5395:13;5428:7;5421:14;;;;;:::i;1725:637:8:-;1108:6:0;;1908:7:8;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;14580:2:20;1240:68:0;;;14562:21:20;;;14599:18;;;14592:30;14658:34;14638:18;;;14631:62;14710:18;;1240:68:0;14378:356:20;1240:68:0;1928:21:8::1;:9;1032:19:3::0;;1050:1;1032:19;;;945:123;1928:21:8::1;1962:17;1982:19;:9;918:14:3::0;;827:112;1982:19:8::1;1962:39;;2012:31;2024:7;2033:9;2012:11;:31::i;:::-;2054:37;2075:9;2086:4;;2054:20;:37::i;:::-;2102:127;2136:9;2160:16;2191:27;2102:19;:127::i;:::-;2247:78;::::0;;-1:-1:-1;;;;;16783:55:20;;16765:74;;16887:4;16875:17;;;16870:2;16855:18;;16848:45;16929:17;;16909:18;;;16902:45;16978:2;16963:18;;16956:34;;;2247:78:8;;::::1;::::0;;;;16752:3:20;2247:78:8;;::::1;2345:9:::0;1725:637;-1:-1:-1;;;;;;1725:637:8:o;12841:391:7:-;13008:49;719:10:2;13049:7:7;13008:26;:49::i;:::-;12986:182;;;;-1:-1:-1;;;12986:182:7;;10387:2:20;12986:182:7;;;10369:21:20;10426:2;10406:18;;;10399:30;10465:34;10445:18;;;10438:62;10536:34;10516:18;;;10509:62;10608:21;10587:19;;;10580:50;10647:19;;12986:182:7;10185:487:20;12986:182:7;13181:43;13206:4;13212:2;13216:7;13181:24;:43::i;8053:187::-;8180:52;719:10:2;8213:8:7;8223;8180:18;:52::i;:::-;8053:187;;:::o;4908:189::-;5068:21;;;;:12;:21;;;;;;;;;5061:28;;;;;;;;;;;;;;;;;5027:16;;5061:28;;;5068:21;5061:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5061:28:7;;;;;;;;;;;;;;;;;;;;;;;4908:189;;;:::o;3687:313::-;3811:7;-1:-1:-1;;;;;3858:20:7;;3836:113;;;;-1:-1:-1;;;3836:113:7;;11298:2:20;3836:113:7;;;11280:21:20;11337:2;11317:18;;;11310:30;11376:34;11356:18;;;11349:62;-1:-1:-1;;;11427:18:20;;;11420:41;11478:19;;3836:113:7;11096:407:20;3836:113:7;-1:-1:-1;;;;;;3969:23:7;;;;;:15;:23;;;;;;;3687:313::o;9833:1003:8:-;9931:22;9945:7;9931:13;:22::i;:::-;9909:114;;;;-1:-1:-1;;;9909:114:8;;14941:2:20;9909:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;9909:114:8;14739:406:20;9909:114:8;10084:1;10058:23;;;:14;:23;;;;;;10036:151;;;;-1:-1:-1;;;10036:151:8;;17203:2:20;10036:151:8;;;17185:21:20;17242:2;17222:18;;;17215:30;17281:34;17261:18;;;17254:62;17352:34;17332:18;;;17325:62;17424:12;17403:19;;;17396:41;17454:19;;10036:151:8;17001:478:20;10036:151:8;10235:23;;;;:14;:23;;;;;;10222:9;:36;;10200:193;;;;-1:-1:-1;;;10200:193:8;;17686:2:20;10200:193:8;;;17668:21:20;17725:3;17705:18;;;17698:31;17765:34;17745:18;;;17738:62;17836:34;17816:18;;;17809:62;17908:34;17887:19;;;17880:63;17980:13;17959:19;;;17952:42;18011:19;;10200:193:8;17484:552:20;10200:193:8;719:10:2;10406:156:8;;;;-1:-1:-1;;;10406:156:8;;18243:2:20;10406:156:8;;;18225:21:20;18282:2;18262:18;;;18255:30;18321:34;18301:18;;;18294:62;18392:34;18372:18;;;18365:62;18464:12;18443:19;;;18436:41;18494:19;;10406:156:8;18041:478:20;10406:156:8;10575:29;10615:30;10637:7;10615:21;:30::i;:::-;10575:71;-1:-1:-1;10659:123:8;10575:71;719:10:2;10764:7:8;10659:29;:123::i;:::-;10795:33;;-1:-1:-1;;;;;10795:22:8;;;10818:9;10795:33;;;;;;;;;10818:9;10795:22;:33;;;;;;;;;;;;;;;;;;;4699:1489;4844:22;4858:7;4844:13;:22::i;:::-;4822:114;;;;-1:-1:-1;;;4822:114:8;;14941:2:20;4822:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;4822:114:8;14739:406:20;4822:114:8;4995:1;4971:21;;;:12;:21;;;;;;4949:140;;;;-1:-1:-1;;;4949:140:8;;18726:2:20;4949:140:8;;;18708:21:20;18765:2;18745:18;;;18738:30;18804:34;18784:18;;;18777:62;18875:34;18855:18;;;18848:62;18947:3;18926:19;;;18919:32;18968:19;;4949:140:8;18524:469:20;4949:140:8;5102:25;5181:15;5131:33;5160:4;5131:26;:33;:::i;:::-;5130:66;;;;:::i;:::-;5102:94;;5251:1;5231:17;:21;5209:121;;;;-1:-1:-1;;;5209:121:8;;19479:2:20;5209:121:8;;;19461:21:20;19518:2;19498:18;;;19491:30;19557:34;19537:18;;;19530:62;19628:20;19608:18;;;19601:48;19666:19;;5209:121:8;19277:414:20;5209:121:8;5343:24;5390:21;;;:12;:21;;;;;;5370:41;;:17;:41;:::i;:::-;5343:68;;5459:16;5446:9;:29;;5424:164;;;;-1:-1:-1;;;5424:164:8;;19898:2:20;5424:164:8;;;19880:21:20;19937:2;19917:18;;;19910:30;19976:34;19956:18;;;19949:62;20047:34;20027:18;;;20020:62;20119:23;20098:19;;;20091:52;20160:19;;5424:164:8;19696:489:20;5424:164:8;5601:21;5633:22;5647:7;5633:13;:22::i;:::-;5601:55;;5667:29;5707:30;5729:7;5707:21;:30::i;:::-;5667:71;-1:-1:-1;5751:122:8;719:10:2;5814:7:8;5836:26;5751:15;:122::i;:::-;5899:13;-1:-1:-1;;;;;5890:22:8;:5;-1:-1:-1;;;;;5890:22:8;;5886:295;;;5929:25;;-1:-1:-1;;;;;5929:14:8;;;5944:9;5929:25;;;;;;;;;5944:9;5929:14;:25;;;;;;;;;;;;;;;;;;;;;5886:295;;;5987:13;6003:32;6027:7;6003:23;:32::i;:::-;5987:48;-1:-1:-1;;;;;;6052:14:8;;:51;6099:3;6081:13;5987:48;6099:3;6081:13;:::i;:::-;6068:27;;;;:9;:27;:::i;:::-;6067:35;;;;:::i;:::-;6052:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6118:22:8;;:51;6165:3;6142:19;;;;:9;:19;:::i;:::-;6141:27;;;;:::i;:::-;6118:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:209;5886:295;4811:1377;;;;4699:1489;;:::o;2876:307:7:-;2998:7;-1:-1:-1;;;;;3045:19:7;;3023:111;;;;-1:-1:-1;;;3023:111:7;;20592:2:20;3023:111:7;;;20574:21:20;20631:2;20611:18;;;20604:30;20670:34;20650:18;;;20643:62;20741:12;20721:18;;;20714:40;20771:19;;3023:111:7;20390:406:20;3023:111:7;-1:-1:-1;;;;;;3154:21:7;;;;;:14;:21;;;;;;;2876:307::o;5954:515::-;6074:13;6113:16;6121:7;6113;:16::i;:::-;6105:63;;;;-1:-1:-1;;;6105:63:7;;8180:2:20;6105:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;6105:63:7;7978:398:20;6105:63:7;6219:1;6193:15;;;:6;:15;;;;;6187:29;;;;;:::i;:::-;;;:33;6179:87;;;;-1:-1:-1;;;6179:87:7;;21003:2:20;6179:87:7;;;20985:21:20;21042:2;21022:18;;;21015:30;21081:34;21061:18;;;21054:62;21152:11;21132:18;;;21125:39;21181:19;;6179:87:7;20801:405:20;6179:87:7;6279:21;6303:10;:8;:10::i;:::-;6279:34;;6368:1;6350:7;6344:21;:25;:117;;;;;;;;;;;;;;;;;6413:7;6422:6;:15;6429:7;6422:15;;;;;;;;;;;6396:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6344:117;6324:137;5954:515;-1:-1:-1;;;5954:515:7:o;3276:418:8:-;3402:22;3416:7;3402:13;:22::i;:::-;3380:114;;;;-1:-1:-1;;;3380:114:8;;14941:2:20;3380:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;3380:114:8;14739:406:20;3380:114:8;3542:1;3529:10;:14;3507:130;;;;-1:-1:-1;;;3507:130:8;;22994:2:20;3507:130:8;;;22976:21:20;23033:2;23013:18;;;23006:30;23072:34;23052:18;;;23045:62;23143:34;23123:18;;;23116:62;23215:4;23194:19;;;23187:33;23237:19;;3507:130:8;22792:470:20;3507:130:8;3650:23;;;;:14;:23;;;;;;:36;3276:418::o;3901:394::-;4004:22;4018:7;4004:13;:22::i;:::-;3982:114;;;;-1:-1:-1;;;3982:114:8;;14941:2:20;3982:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;3982:114:8;14739:406:20;3982:114:8;4144:1;4131:10;:14;4109:131;;;;-1:-1:-1;;;4109:131:8;;23469:2:20;4109:131:8;;;23451:21:20;23508:2;23488:18;;;23481:30;23547:34;23527:18;;;23520:62;23618:34;23598:18;;;23591:62;23690:5;23669:19;;;23662:34;23713:19;;4109:131:8;23267:471:20;4109:131:8;4253:21;;;;:12;:21;;;;;;:34;3901:394::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;14580:2:20;1240:68:0;;;14562:21:20;;;14599:18;;;14592:30;14658:34;14638:18;;;14631:62;14710:18;;1240:68:0;14378:356:20;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;23945:2:20;1998:73:0::1;::::0;::::1;23927:21:20::0;23984:2;23964:18;;;23957:30;24023:34;24003:18;;;23996:62;24094:8;24074:18;;;24067:36;24120:19;;1998:73:0::1;23743:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;19521:220:7:-;19678:55;19689:6;19697:7;19706:26;19678:10;:55::i;7345:1288:8:-;7444:22;7458:7;7444:13;:22::i;:::-;7422:114;;;;-1:-1:-1;;;7422:114:8;;14941:2:20;7422:114:8;;;14923:21:20;14980:2;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;-1:-1:-1;;;15070:18:20;;;15063:40;15120:19;;7422:114:8;14739:406:20;7422:114:8;7598:1;7571:24;;;:15;:24;;;;;;7549:153;;;;-1:-1:-1;;;7549:153:8;;24352:2:20;7549:153:8;;;24334:21:20;24391:2;24371:18;;;24364:30;24430:34;24410:18;;;24403:62;24501:34;24481:18;;;24474:62;24573:13;24552:19;;;24545:42;24604:19;;7549:153:8;24150:479:20;7549:153:8;7750:24;;;;:15;:24;;;;;;7737:9;:37;;7715:195;;;;-1:-1:-1;;;7715:195:8;;24836:2:20;7715:195:8;;;24818:21:20;24875:3;24855:18;;;24848:31;24915:34;24895:18;;;24888:62;24986:34;24966:18;;;24959:62;25058:34;25037:19;;;25030:63;25130:14;25109:19;;;25102:43;25162:19;;7715:195:8;24634:553:20;7715:195:8;719:10:2;7923:157:8;;;;-1:-1:-1;;;7923:157:8;;25394:2:20;7923:157:8;;;25376:21:20;25433:2;25413:18;;;25406:30;25472:34;25452:18;;;25445:62;25543:34;25523:18;;;25516:62;-1:-1:-1;;;25594:19:20;;;25587:42;25646:19;;7923:157:8;25192:479:20;7923:157:8;8093:21;8125:22;8139:7;8125:13;:22::i;:::-;8093:55;;8159:29;8199:30;8221:7;8199:21;:30::i;:::-;8159:71;-1:-1:-1;8243:66:8;8274:5;719:10:2;8301:7:8;8243:30;:66::i;:::-;8335:13;-1:-1:-1;;;;;8326:22:8;:5;-1:-1:-1;;;;;8326:22:8;;8322:304;;;8365:25;;-1:-1:-1;;;;;8365:14:8;;;8380:9;8365:25;;;;;;;;;8380:9;8365:14;:25;;;;;;;;;;;;;;;;;;;8322:304;8423:13;8439:43;8474:7;8439:34;:43::i;:::-;8423:59;-1:-1:-1;;;;;;8497:14:8;;:51;8544:3;8526:13;8423:59;8544:3;8526:13;:::i;:::-;8513:27;;;;:9;:27;:::i;:::-;8512:35;;;;:::i;:::-;8497:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8563:22:8;;:51;8610:3;8587:19;;;;:9;:19;:::i;:::-;8586:27;;;;:::i;:::-;8563:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8408:218;7411:1222;;7345:1288;:::o;5698:184:7:-;5763:4;5788:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5788:16:7;:30;;;;:85;;-1:-1:-1;;5871:1:7;5835:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5835:24:7;:38;;;5698:184::o;7445:207::-;7569:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;7569:29:7;-1:-1:-1;;;;;7569:29:7;;;;;;;;;7616:28;;7569:24;;7616:28;;;;;;;7445:207;;;:::o;9211:408::-;9340:4;9370:16;9378:7;9370;:16::i;:::-;9362:63;;;;-1:-1:-1;;;9362:63:7;;8180:2:20;9362:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;9362:63:7;7978:398:20;9362:63:7;9436:13;9452:24;9468:7;9452:15;:24::i;:::-;9436:40;;9508:5;-1:-1:-1;;;;;9497:16:7;:7;-1:-1:-1;;;;;9497:16:7;;:64;;;;9554:7;-1:-1:-1;;;;;9530:31:7;:20;9542:7;9530:11;:20::i;:::-;-1:-1:-1;;;;;9530:31:7;;9497:64;:113;;;-1:-1:-1;;;;;;9001:25:7;;;8972:4;9001:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9578:32;9489:122;9211:408;-1:-1:-1;;;;9211:408:7:o;12347:415::-;12519:44;12545:4;12551:2;12555:7;12519:25;:44::i;:::-;12598:64;12638:4;12644:2;12648:7;12657:4;12598:39;:64::i;:::-;12576:178;;;;;-1:-1:-1;;;12576:178:7;;25878:2:20;12576:178:7;;;25860:21:20;25897:18;;;25890:30;;;;25956:34;25936:18;;;25929:62;26027:34;26007:18;;;26000:62;26079:19;;12576:178:7;25676:428:20;9786:448:7;9923:4;9953:16;9961:7;9953;:16::i;:::-;9945:63;;;;-1:-1:-1;;;9945:63:7;;8180:2:20;9945:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;9945:63:7;7978:398:20;9945:63:7;10019:21;10043:32;10067:7;10043:23;:32::i;14952:412::-;15123:43;15148:4;15154:2;15158:7;15123:24;:43::i;:::-;15201:63;15240:4;15246:2;15250:7;15259:4;15201:38;:63::i;10761:716::-;10901:13;10917:24;10933:7;10917:15;:24::i;:::-;10901:40;;10983:4;-1:-1:-1;;;;;10974:13:7;:5;-1:-1:-1;;;;;10974:13:7;;10952:129;;;;-1:-1:-1;;;10952:129:7;;26311:2:20;10952:129:7;;;26293:21:20;26350:2;26330:18;;;26323:30;26389:34;26369:18;;;26362:62;26460:34;26440:18;;;26433:62;26532:4;26511:19;;;26504:33;26554:19;;10952:129:7;26109:470:20;10952:129:7;-1:-1:-1;;;;;11114:16:7;;11092:111;;;;-1:-1:-1;;;11092:111:7;;26786:2:20;11092:111:7;;;26768:21:20;26825:2;26805:18;;;26798:30;26864:34;26844:18;;;26837:62;26935:15;26915:18;;;26908:43;26968:19;;11092:111:7;26584:409:20;11092:111:7;11268:36;11277:5;11292:1;11296:7;11268:8;:36::i;:::-;-1:-1:-1;;;;;11317:20:7;;;;;;:14;:20;;;;;:25;;11341:1;;11317:20;:25;;11341:1;;11317:25;:::i;:::-;;;;-1:-1:-1;;;;;;;11353:18:7;;;;;;:14;:18;;;;;:23;;11375:1;;11353:18;:23;;11375:1;;11353:23;:::i;:::-;;;;-1:-1:-1;;11387:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;11387:21:7;-1:-1:-1;;;;;11387:21:7;;;;;;;;;11426:43;;11387:16;;11426:43;;;;;;;10890:587;10761:716;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;17176:504:7:-;-1:-1:-1;;;;;17256:16:7;;17248:68;;;;-1:-1:-1;;;17248:68:7;;27333:2:20;17248:68:7;;;27315:21:20;27372:2;27352:18;;;27345:30;27411:34;27391:18;;;27384:62;27482:9;27462:18;;;27455:37;27509:19;;17248:68:7;27131:403:20;17248:68:7;17336:16;17344:7;17336;:16::i;:::-;17335:17;17327:64;;;;-1:-1:-1;;;17327:64:7;;27741:2:20;17327:64:7;;;27723:21:20;27780:2;27760:18;;;27753:30;27819:34;27799:18;;;27792:62;-1:-1:-1;;;27870:18:20;;;27863:32;27912:19;;17327:64:7;27539:398:20;17327:64:7;-1:-1:-1;;;;;17404:18:7;;;;;;:14;:18;;;;;:23;;17426:1;;17404:18;:23;;17426:1;;17404:23;:::i;:::-;;;;-1:-1:-1;;;;;;;17438:26:7;;;;;;:22;:26;;;;;:31;;17468:1;;17438:26;:31;;17468:1;;17438:31;:::i;:::-;;;;-1:-1:-1;;17480:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;17480:21:7;;-1:-1:-1;;17480:21:7;;;;;;;;17512:15;:24;;;;;;:29;;;;;;;;;;17559:49;17488:7;;17480:16;17559:49;;17480:16;;17559:49;17624:48;;17664:7;;-1:-1:-1;;;;;17624:48:7;;;17656:1;;17624:48;;17656:1;;17624:48;17176:504;;:::o;17688:197::-;17787:16;17795:7;17787;:16::i;:::-;17779:63;;;;-1:-1:-1;;;17779:63:7;;8180:2:20;17779:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;17779:63:7;7978:398:20;17779:63:7;17855:15;;;;:6;:15;;;;;:22;;17873:4;;17855:22;:::i;18166:738::-;18335:16;18343:7;18335;:16::i;:::-;18327:58;;;;-1:-1:-1;;;18327:58:7;;28144:2:20;18327:58:7;;;28126:21:20;28183:2;28163:18;;;28156:30;28222:31;28202:18;;;28195:59;28271:18;;18327:58:7;27942:353:20;18327:58:7;18440:3;18420:16;:23;;;;:48;;;;-1:-1:-1;18447:21:7;18420:48;18398:147;;;;-1:-1:-1;;;18398:147:7;;28502:2:20;18398:147:7;;;28484:21:20;28541:2;28521:18;;;28514:30;28580:34;28560:18;;;28553:62;28651:19;28631:18;;;28624:47;28688:19;;18398:147:7;28300:413:20;18398:147:7;18611:3;18580:27;:34;;;;:87;;;;-1:-1:-1;18635:32:7;18580:87;18558:198;;;;-1:-1:-1;;;18558:198:7;;28920:2:20;18558:198:7;;;28902:21:20;28959:2;28939:18;;;28932:30;28998:34;28978:18;;;28971:62;29069:31;29049:18;;;29042:59;29118:19;;18558:198:7;28718:425:20;18558:198:7;18769:28;;;;:19;:28;;;;;;;;:47;;-1:-1:-1;;18769:47:7;;;;;;;;;;;18827:30;:39;;;;;;:69;;;;;;;;;;18166:738::o;13302:770::-;13441:21;13465:32;13489:7;13465:23;:32::i;:::-;13441:56;;13547:4;-1:-1:-1;;;;;13530:21:7;:13;-1:-1:-1;;;;;13530:21:7;;13508:137;;;;-1:-1:-1;;;13508:137:7;;26311:2:20;13508:137:7;;;26293:21:20;26350:2;26330:18;;;26323:30;26389:34;26369:18;;;26362:62;26460:34;26440:18;;;26433:62;26532:4;26511:19;;;26504:33;26554:19;;13508:137:7;26109:470:20;13508:137:7;-1:-1:-1;;;;;13678:16:7;;13656:111;;;;-1:-1:-1;;;13656:111:7;;26786:2:20;13656:111:7;;;26768:21:20;26825:2;26805:18;;;26798:30;26864:34;26844:18;;;26837:62;26935:15;26915:18;;;26908:43;26968:19;;13656:111:7;26584:409:20;13656:111:7;13832:44;13841:13;13864:1;13868:7;13832:8;:44::i;:::-;-1:-1:-1;;;;;13889:28:7;;;;;;:22;:28;;;;;:33;;13921:1;;13889:28;:33;;13921:1;;13889:33;:::i;:::-;;;;-1:-1:-1;;;;;;;13933:26:7;;;;;;:22;:26;;;;;:31;;13963:1;;13933:26;:31;;13963:1;;13933:31;:::i;:::-;;;;-1:-1:-1;;13975:24:7;;;;:15;:24;;;;;;:29;;-1:-1:-1;;13975:29:7;-1:-1:-1;;;;;13975:29:7;;;;;;;;;14022:42;;13975:24;;14022:42;;;;;;;13430:642;13302:770;;;:::o;8383:375::-;8552:8;-1:-1:-1;;;;;8543:17:7;:5;-1:-1:-1;;;;;8543:17:7;;;8521:111;;;;-1:-1:-1;;;8521:111:7;;29350:2:20;8521:111:7;;;29332:21:20;29389:2;29369:18;;;29362:30;29428:34;29408:18;;;29401:62;29499:14;29479:18;;;29472:42;29531:19;;8521:111:7;29148:408:20;8521:111:7;-1:-1:-1;;;;;8645:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;8645:46:7;;;;;;;;;;8709:41;;8645:46;;:35;:25;8709:41;;;8383:375;;;:::o;18912:257::-;19024:5;19056:17;19064:8;19056:7;:17::i;:::-;19055:18;19047:65;;;;-1:-1:-1;;;19047:65:7;;27741:2:20;19047:65:7;;;27723:21:20;27780:2;27760:18;;;27753:30;27819:34;27799:18;;;27792:62;-1:-1:-1;;;27870:18:20;;;27863:32;27912:19;;19047:65:7;27539:398:20;19047:65:7;-1:-1:-1;19132:29:7;;;;:19;:29;;;;;;;;;18912:257::o;1401:106:8:-;1461:13;1494:5;1487:12;;;;;:::i;19797:573:7:-;-1:-1:-1;;;;;19970:20:7;;19948:113;;;;-1:-1:-1;;;19948:113:7;;11298:2:20;19948:113:7;;;11280:21:20;11337:2;11317:18;;;11310:30;11376:34;11356:18;;;11349:62;-1:-1:-1;;;11427:18:20;;;11420:41;11478:19;;19948:113:7;11096:407:20;19948:113:7;20082:16;20090:7;20082;:16::i;:::-;20074:63;;;;-1:-1:-1;;;20074:63:7;;8180:2:20;20074:63:7;;;8162:21:20;8219:2;8199:18;;;8192:30;8258:34;8238:18;;;8231:62;-1:-1:-1;;;8309:18:20;;;8302:32;8351:19;;20074:63:7;7978:398:20;20074:63:7;20150:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20150:25:7;;;;;;;;;;;:54;;;20215:21;;;:12;:21;;;;;:34;;;;;;;;;;;;;;;;;-1:-1:-1;;20215:34:7;;;;;20260:23;;;:15;:23;;;;;:28;;20215:34;;20260:23;;:28;;20215:34;;20260:28;:::i;:::-;;;;-1:-1:-1;;20306:56:7;;4385:25:20;;;20326:7:7;;-1:-1:-1;;;;;20306:56:7;;;;;4373:2:20;4358:18;20306:56:7;;;;;;;19797:573;;;:::o;19177:279::-;19300:5;19332:17;19340:8;19332:7;:17::i;:::-;19331:18;19323:65;;;;-1:-1:-1;;;19323:65:7;;27741:2:20;19323:65:7;;;27723:21:20;27780:2;27760:18;;;27753:30;27819:34;27799:18;;;27792:62;-1:-1:-1;;;27870:18:20;;;27863:32;27912:19;;19323:65:7;27539:398:20;19323:65:7;-1:-1:-1;19408:40:7;;;;:30;:40;;;;;;;;;19177:279::o;24202:1213::-;24373:4;-1:-1:-1;;;;;24394:13:7;;1087:20:1;1133:8;24390:1018:7;;24447:250;;;;;-1:-1:-1;;;;;24447:92:7;;;;;:250;;719:10:2;;24605:4:7;;24636:7;;24670:4;;24447:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24447:250:7;;;;;;;;-1:-1:-1;;24447:250:7;;;;;;;;;;;;:::i;:::-;;;24426:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25008:13:7;;25004:334;;25051:122;;;-1:-1:-1;;;25051:122:7;;25878:2:20;25051:122:7;;;25860:21:20;25897:18;;;25890:30;;;;25956:34;25936:18;;;25929:62;26027:34;26007:18;;;26000:62;26079:19;;25051:122:7;25676:428:20;25004:334:7;25288:6;25282:13;25273:6;25269:2;25265:15;25258:38;24426:927;24782:158;;24813:127;24782:158;;-1:-1:-1;24754:186:7;;24390:1018;-1:-1:-1;25392:4:7;24202:1213;;;;;;:::o;22391:1229::-;22561:4;-1:-1:-1;;;;;22582:13:7;;1087:20:1;1133:8;22578:1035:7;;22635:248;;;;;-1:-1:-1;;;;;22635:90:7;;;;;:248;;719:10:2;;22791:4:7;;22822:7;;22856:4;;22635:248;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22635:248:7;;;;;;;;-1:-1:-1;;22635:248:7;;;;;;;;;;;;:::i;:::-;;;22614:944;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23192:13:7;;23188:355;;23235:143;;-1:-1:-1;;;23235:143:7;;30534:2:20;23235:143:7;;;30516:21:20;30573:2;30553:18;;;30546:30;30612:34;30592:18;;;30585:62;30683:34;30663:18;;;30656:62;30755:23;30734:19;;;30727:52;30796:19;;23235:143:7;30332:489:20;22614:944:7;22968:156;;22999:125;22968:156;;-1:-1:-1;22940:184:7;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:20;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:20;868:16;;861:27;638:258::o;901:317::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1132:2;1120:15;-1:-1:-1;;1116:88:20;1107:98;;;;1207:4;1103:109;;901:317;-1:-1:-1;;901:317:20:o;1223:220::-;1372:2;1361:9;1354:21;1335:4;1392:45;1433:2;1422:9;1418:18;1410:6;1392:45;:::i;1448:180::-;1507:6;1560:2;1548:9;1539:7;1535:23;1531:32;1528:52;;;1576:1;1573;1566:12;1528:52;-1:-1:-1;1599:23:20;;1448:180;-1:-1:-1;1448:180:20:o;1864:196::-;1932:20;;-1:-1:-1;;;;;1981:54:20;;1971:65;;1961:93;;2050:1;2047;2040:12;1961:93;1864:196;;;:::o;2065:254::-;2133:6;2141;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2309:2;2294:18;;;;2281:32;;-1:-1:-1;;;2065:254:20:o;2324:184::-;-1:-1:-1;;;2373:1:20;2366:88;2473:4;2470:1;2463:15;2497:4;2494:1;2487:15;2513:1197;2608:6;2616;2624;2632;2685:3;2673:9;2664:7;2660:23;2656:33;2653:53;;;2702:1;2699;2692:12;2653:53;2725:29;2744:9;2725:29;:::i;:::-;2715:39;;2773:38;2807:2;2796:9;2792:18;2773:38;:::i;:::-;2763:48;;2858:2;2847:9;2843:18;2830:32;2820:42;;2913:2;2902:9;2898:18;2885:32;2936:18;2977:2;2969:6;2966:14;2963:34;;;2993:1;2990;2983:12;2963:34;3031:6;3020:9;3016:22;3006:32;;3076:7;3069:4;3065:2;3061:13;3057:27;3047:55;;3098:1;3095;3088:12;3047:55;3134:2;3121:16;3156:2;3152;3149:10;3146:36;;;3162:18;;:::i;:::-;3296:2;3290:9;3358:4;3350:13;;-1:-1:-1;;3346:22:20;;;3370:2;3342:31;3338:40;3326:53;;;3394:18;;;3414:22;;;3391:46;3388:72;;;3440:18;;:::i;:::-;3480:10;3476:2;3469:22;3515:2;3507:6;3500:18;3555:7;3550:2;3545;3541;3537:11;3533:20;3530:33;3527:53;;;3576:1;3573;3566:12;3527:53;3632:2;3627;3623;3619:11;3614:2;3606:6;3602:15;3589:46;3677:1;3672:2;3667;3659:6;3655:15;3651:24;3644:35;3698:6;3688:16;;;;;;;2513:1197;;;;;;;:::o;3715:328::-;3792:6;3800;3808;3861:2;3849:9;3840:7;3836:23;3832:32;3829:52;;;3877:1;3874;3867:12;3829:52;3900:29;3919:9;3900:29;:::i;:::-;3890:39;;3948:38;3982:2;3971:9;3967:18;3948:38;:::i;:::-;3938:48;;4033:2;4022:9;4018:18;4005:32;3995:42;;3715:328;;;;;:::o;4048:186::-;4107:6;4160:2;4148:9;4139:7;4135:23;4131:32;4128:52;;;4176:1;4173;4166:12;4128:52;4199:29;4218:9;4199:29;:::i;4421:254::-;4489:6;4497;4550:2;4538:9;4529:7;4525:23;4521:32;4518:52;;;4566:1;4563;4556:12;4518:52;4602:9;4589:23;4579:33;;4631:38;4665:2;4654:9;4650:18;4631:38;:::i;:::-;4621:48;;4421:254;;;;;:::o;4680:248::-;4748:6;4756;4809:2;4797:9;4788:7;4784:23;4780:32;4777:52;;;4825:1;4822;4815:12;4777:52;-1:-1:-1;;4848:23:20;;;4918:2;4903:18;;;4890:32;;-1:-1:-1;4680:248:20:o;4933:156::-;4999:20;;5059:4;5048:16;;5038:27;;5028:55;;5079:1;5076;5069:12;5094:807;5188:6;5196;5204;5212;5220;5273:3;5261:9;5252:7;5248:23;5244:33;5241:53;;;5290:1;5287;5280:12;5241:53;5313:29;5332:9;5313:29;:::i;:::-;5303:39;;5393:2;5382:9;5378:18;5365:32;5416:18;5457:2;5449:6;5446:14;5443:34;;;5473:1;5470;5463:12;5443:34;5511:6;5500:9;5496:22;5486:32;;5556:7;5549:4;5545:2;5541:13;5537:27;5527:55;;5578:1;5575;5568:12;5527:55;5618:2;5605:16;5644:2;5636:6;5633:14;5630:34;;;5660:1;5657;5650:12;5630:34;5705:7;5700:2;5691:6;5687:2;5683:15;5679:24;5676:37;5673:57;;;5726:1;5723;5716:12;5673:57;5757:2;5753;5749:11;5739:21;;5779:6;5769:16;;;;;5804:36;5836:2;5825:9;5821:18;5804:36;:::i;:::-;5794:46;;5859:36;5891:2;5880:9;5876:18;5859:36;:::i;:::-;5849:46;;5094:807;;;;;;;;:::o;5906:347::-;5971:6;5979;6032:2;6020:9;6011:7;6007:23;6003:32;6000:52;;;6048:1;6045;6038:12;6000:52;6071:29;6090:9;6071:29;:::i;:::-;6061:39;;6150:2;6139:9;6135:18;6122:32;6197:5;6190:13;6183:21;6176:5;6173:32;6163:60;;6219:1;6216;6209:12;6163:60;6242:5;6232:15;;;5906:347;;;;;:::o;6258:681::-;6429:2;6481:21;;;6551:13;;6454:18;;;6573:22;;;6400:4;;6429:2;6652:15;;;;6626:2;6611:18;;;6400:4;6695:218;6709:6;6706:1;6703:13;6695:218;;;6774:13;;-1:-1:-1;;;;;6770:62:20;6758:75;;6888:15;;;;6853:12;;;;6731:1;6724:9;6695:218;;;-1:-1:-1;6930:3:20;;6258:681;-1:-1:-1;;;;;;6258:681:20:o;6944:260::-;7012:6;7020;7073:2;7061:9;7052:7;7048:23;7044:32;7041:52;;;7089:1;7086;7079:12;7041:52;7112:29;7131:9;7112:29;:::i;:::-;7102:39;;7160:38;7194:2;7183:9;7179:18;7160:38;:::i;7209:322::-;7286:6;7294;7302;7355:2;7343:9;7334:7;7330:23;7326:32;7323:52;;;7371:1;7368;7361:12;7323:52;7394:29;7413:9;7394:29;:::i;:::-;7384:39;7470:2;7455:18;;7442:32;;-1:-1:-1;7521:2:20;7506:18;;;7493:32;;7209:322;-1:-1:-1;;;7209:322:20:o;7536:437::-;7615:1;7611:12;;;;7658;;;7679:61;;7733:4;7725:6;7721:17;7711:27;;7679:61;7786:2;7778:6;7775:14;7755:18;7752:38;7749:218;;;-1:-1:-1;;;7820:1:20;7813:88;7924:4;7921:1;7914:15;7952:4;7949:1;7942:15;7749:218;;7536:437;;;:::o;11922:184::-;-1:-1:-1;;;11971:1:20;11964:88;12071:4;12068:1;12061:15;12095:4;12092:1;12085:15;12111:228;12151:7;12277:1;-1:-1:-1;;12205:74:20;12202:1;12199:81;12194:1;12187:9;12180:17;12176:105;12173:131;;;12284:18;;:::i;:::-;-1:-1:-1;12324:9:20;;12111:228::o;12344:184::-;-1:-1:-1;;;12393:1:20;12386:88;12493:4;12490:1;12483:15;12517:4;12514:1;12507:15;12533:125;12573:4;12601:1;12598;12595:8;12592:34;;;12606:18;;:::i;:::-;-1:-1:-1;12643:9:20;;12533:125::o;12663:184::-;-1:-1:-1;;;12712:1:20;12705:88;12812:4;12809:1;12802:15;12836:4;12833:1;12826:15;12852:195;12891:3;-1:-1:-1;;12915:5:20;12912:77;12909:103;;;12992:18;;:::i;:::-;-1:-1:-1;13039:1:20;13028:13;;12852:195::o;18998:274::-;19038:1;19064;19054:189;;-1:-1:-1;;;19096:1:20;19089:88;19200:4;19197:1;19190:15;19228:4;19225:1;19218:15;19054:189;-1:-1:-1;19257:9:20;;18998:274::o;20190:195::-;20228:4;20265;20262:1;20258:12;20297:4;20294:1;20290:12;20322:3;20317;20314:12;20311:38;;;20329:18;;:::i;:::-;20366:13;;;20190:195;-1:-1:-1;;;20190:195:20:o;21337:1450::-;21513:3;21551:6;21545:13;21577:4;21590:51;21634:6;21629:3;21624:2;21616:6;21612:15;21590:51;:::i;:::-;21726:13;;21663:16;;;;21699:1;;21786;21808:18;;;;21861;;;;21888:93;;21966:4;21956:8;21952:19;21940:31;;21888:93;22029:2;22019:8;22016:16;21996:18;21993:40;21990:224;;;-1:-1:-1;;;22063:3:20;22056:90;22169:4;22166:1;22159:15;22199:4;22194:3;22187:17;21990:224;22230:18;22257:168;;;;22439:1;22434:328;;;;22223:539;;22257:168;-1:-1:-1;;22296:9:20;22292:82;22285:5;22278:97;22406:8;22399:5;22395:20;22388:27;;22257:168;;22434:328;21284:1;21277:14;;;21321:4;21308:18;;22529:1;22543:169;22557:8;22554:1;22551:15;22543:169;;;22639:14;;22624:13;;;22617:37;22682:16;;;;22574:10;;22543:169;;;22547:3;;22743:8;22736:5;22732:20;22725:27;;22223:539;-1:-1:-1;22778:3:20;;21337:1450;-1:-1:-1;;;;;;;;;;21337:1450:20:o;26998:128::-;27038:3;27069:1;27065:6;27062:1;27059:13;27056:39;;;27075:18;;:::i;:::-;-1:-1:-1;27111:9:20;;26998:128::o;29561:512::-;29755:4;-1:-1:-1;;;;;29865:2:20;29857:6;29853:15;29842:9;29835:34;29917:2;29909:6;29905:15;29900:2;29889:9;29885:18;29878:43;;29957:6;29952:2;29941:9;29937:18;29930:34;30000:3;29995:2;29984:9;29980:18;29973:31;30021:46;30062:3;30051:9;30047:19;30039:6;30021:46;:::i;:::-;30013:54;29561:512;-1:-1:-1;;;;;;29561:512:20:o;30078:249::-;30147:6;30200:2;30188:9;30179:7;30175:23;30171:32;30168:52;;;30216:1;30213;30206:12;30168:52;30248:9;30242:16;30267:30;30291:5;30267:30;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"./ERC1190.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @dev Implementation of ERC1190 with payable methods.\r\n */\r\ncontract ERC1190Tradable is ERC1190, Ownable {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIds;\r\n\r\n    event TokenMinted(\r\n        address creator,\r\n        uint8 royaltyForRental,\r\n        uint8 royaltyForOwnershipTransfer,\r\n        uint256 tokenId\r\n    );\r\n\r\n    // Base URI\r\n    string private _base;\r\n\r\n    // The price in wei of each token that can be owned.\r\n    mapping(uint256 => uint256) private _ownershipPrice;\r\n\r\n    // The price in wei of each token that can be creative owned.\r\n    mapping(uint256 => uint256) private _creativePrice;\r\n\r\n    // The price in wei of each token that can be rented.\r\n    mapping(uint256 => uint256) private _rentalPrice;\r\n\r\n    /**\r\n     * @dev See {ERC1190-constructor}.\r\n     */\r\n    constructor(\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        string memory tokenBaseUri\r\n    ) ERC1190(tokenName, tokenSymbol) {\r\n        _base = tokenBaseUri;\r\n    }\r\n\r\n    function availableTokens() external view returns (uint256) {\r\n        return _tokenIds.current();\r\n    }\r\n\r\n    /**\r\n     * See {ERC1190-_baseURI}.\r\n     */\r\n    function _baseURI() internal view virtual override returns (string memory) {\r\n        return _base;\r\n    }\r\n\r\n    /**\r\n     * @dev Generates a new token and assigns its ownership and creative\r\n     * license to `creator`.\r\n     * The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`.\r\n     */\r\n    function mint(\r\n        address creator,\r\n        string calldata file,\r\n        uint8 royaltyForRental,\r\n        uint8 royaltyForOwnershipTransfer\r\n    ) external onlyOwner returns (uint256) {\r\n        _tokenIds.increment();\r\n\r\n        uint256 newItemId = _tokenIds.current();\r\n        super._mint(creator, newItemId);\r\n        super._associateFile(newItemId, file);\r\n        super._setRoyalties(\r\n            newItemId,\r\n            royaltyForRental,\r\n            royaltyForOwnershipTransfer\r\n        );\r\n\r\n        emit TokenMinted(creator, royaltyForRental, royaltyForOwnershipTransfer, newItemId);\r\n\r\n        return newItemId;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the price for acquiring property of the ownership license of token\r\n     * `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - `priceInWei` must be greater than 0.\r\n     */\r\n    function setOwnershipLicensePrice(uint256 tokenId, uint256 priceInWei)\r\n        external\r\n    {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            priceInWei > 0,\r\n            \"ERC1190Tradable: The ownership license cost must be greater than 0.\"\r\n        );\r\n\r\n        _ownershipPrice[tokenId] = priceInWei;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the price for acquiring property of the creative license of token\r\n     * `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - `priceInWei` must be greater than 0.\r\n     */\r\n    function setCreativeLicensePrice(uint256 tokenId, uint256 priceInWei)\r\n        external\r\n    {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            priceInWei > 0,\r\n            \"ERC1190Tradable: The creative license cost must be greater than 0.\"\r\n        );\r\n\r\n        _creativePrice[tokenId] = priceInWei;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the price for renting `tokenId` for 1 second.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - `priceInWei` must be greater than 0.\r\n     */\r\n    function setRentalPrice(uint256 tokenId, uint256 priceInWei) external {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            priceInWei > 0,\r\n            \"ERC1190Tradable: The rental cost per second must be greater than 0.\"\r\n        );\r\n\r\n        _rentalPrice[tokenId] = priceInWei;\r\n    }\r\n\r\n    /**\r\n     * @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - A rental price must have been set via {setRentalPrice}.\r\n     * - `rentExpirationDateInMillis` should correspond to a future date.\r\n     * - the sent money should be enough to cover the renting expenses.\r\n     */\r\n    function rentAsset(uint256 tokenId, uint256 rentExpirationDateInMillis)\r\n        external\r\n        payable\r\n    {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            _rentalPrice[tokenId] > 0,\r\n            \"ERC1190Tradable: The asset related to this token is not rentable.\"\r\n        );\r\n\r\n        uint256 rentTimeInSeconds = (rentExpirationDateInMillis / 1000) -\r\n            block.timestamp;\r\n\r\n        require(\r\n            rentTimeInSeconds > 0,\r\n            \"ERC1190Tradable: The rental time must be positive.\"\r\n        );\r\n\r\n        uint256 rentalTotalPrice = rentTimeInSeconds * _rentalPrice[tokenId];\r\n\r\n        require(\r\n            msg.value >= rentalTotalPrice,\r\n            \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\"\r\n        );\r\n\r\n        address payable owner = payable(super.ownerOf(tokenId));\r\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\r\n\r\n        super.rentAsset(\r\n            super._msgSender(),\r\n            tokenId,\r\n            rentExpirationDateInMillis\r\n        );\r\n\r\n        if (owner == creativeOwner) {\r\n            owner.transfer(msg.value);\r\n        } else {\r\n            uint8 royalty = super._royaltyForRental(tokenId);\r\n\r\n            owner.transfer((msg.value * (100 - royalty)) / 100);\r\n            creativeOwner.transfer((msg.value * royalty) / 100);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers the ownership license from the current owner to the account `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - the sender of the request must be the owner.\r\n     * - the receiver account `to` must not be the zero address.\r\n     */\r\n    function transferOwnershipLicense(uint256 tokenId, address to) external {\r\n        require(\r\n            to != address(0),\r\n            \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\"\r\n        );\r\n\r\n        address owner = super.ownerOf(tokenId);\r\n\r\n        require(\r\n            super._msgSender() == owner,\r\n            \"ERC1190Tradable: The sender does not own the ownership license.\"\r\n        );\r\n\r\n        super.transferCreativeLicense(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers the ownership license from the current owner to the sender of the request.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - A ownership license price must have been set via {setOwnershipLicensePrice}.\r\n     * - the sent money should be enough to cover the license expense.\r\n     */\r\n    function obtainOwnershipLicense(uint256 tokenId) external payable {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            _ownershipPrice[tokenId] > 0,\r\n            \"ERC1190Tradable: The ownership license of this token cannot be transferred.\"\r\n        );\r\n\r\n        require(\r\n            msg.value >= _ownershipPrice[tokenId],\r\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\"\r\n        );\r\n\r\n        require(\r\n            super._msgSender() != address(0),\r\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\r\n        );\r\n\r\n        address payable owner = payable(super.ownerOf(tokenId));\r\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\r\n\r\n        super.transferOwnershipLicense(owner, super._msgSender(), tokenId);\r\n\r\n        if (owner == creativeOwner) {\r\n            owner.transfer(msg.value);\r\n        } else {\r\n            uint8 royalty = super._royaltyForOwnershipTransfer(tokenId);\r\n            owner.transfer((msg.value * (100 - royalty)) / 100);\r\n            creativeOwner.transfer((msg.value * royalty) / 100);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers the creative license from the current creative owner to the account `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - the sender of the request must be the creative owner.\r\n     * - the receiver account `to` must not be the zero address.\r\n     */\r\n    function transferCreativeLicense(uint256 tokenId, address to) external {\r\n        require(\r\n            to != address(0),\r\n            \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\"\r\n        );\r\n\r\n        address creativeOwner = super.creativeOwnerOf(tokenId);\r\n\r\n        require(\r\n            super._msgSender() == creativeOwner,\r\n            \"ERC1190Tradable: The sender does not own the creative license.\"\r\n        );\r\n\r\n        super.transferCreativeLicense(creativeOwner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers the creative license from the current owner to the sender of the request.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     * - A creative license price must have been set via {setCreativeLicensePrice}.\r\n     * - the sent money should be enough to cover the license expense.\r\n     */\r\n    function obtainCreativeLicense(uint256 tokenId) external payable {\r\n        require(\r\n            super._exists(tokenId),\r\n            \"ERC1190Tradable: The token does not exist.\"\r\n        );\r\n\r\n        require(\r\n            _creativePrice[tokenId] > 0,\r\n            \"ERC1190Tradable: The creative license of this token cannot be transferred.\"\r\n        );\r\n\r\n        require(\r\n            msg.value >= _creativePrice[tokenId],\r\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\"\r\n        );\r\n\r\n        require(\r\n            super._msgSender() != address(0),\r\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\r\n        );\r\n\r\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\r\n\r\n        super.transferCreativeLicense(\r\n            creativeOwner,\r\n            super._msgSender(),\r\n            tokenId\r\n        );\r\n\r\n        creativeOwner.transfer(msg.value);\r\n    }\r\n}\r\n",
  "sourcePath": "non-fungible-royalty-token\\contracts\\ERC1190Tradable.sol",
  "ast": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2274
      ],
      "ERC1190Tradable": [
        2922
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        2938
      ],
      "IERC1190Approver": [
        2994
      ],
      "IERC1190CreativeLicenseReceiver": [
        3012
      ],
      "IERC1190CreativeOwner": [
        3074
      ],
      "IERC1190Metadata": [
        3101
      ],
      "IERC1190Owner": [
        3163
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3181
      ],
      "IERC1190Renter": [
        3232
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 2923,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2276,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2277,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 2275,
        "src": "69:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2278,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 498,
        "src": "94:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2279,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 105,
        "src": "148:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2281,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2274,
              "src": "299:7:8"
            },
            "id": 2282,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:8"
          },
          {
            "baseName": {
              "id": 2283,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "308:7:8"
            },
            "id": 2284,
            "nodeType": "InheritanceSpecifier",
            "src": "308:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2280,
          "nodeType": "StructuredDocumentation",
          "src": "204:65:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 2922,
        "linearizedBaseContracts": [
          2922,
          104,
          2274,
          3101,
          2938,
          3232,
          3074,
          3163,
          2994,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "280:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2288,
            "libraryName": {
              "id": 2285,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "329:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "323:36:8",
            "typeName": {
              "id": 2287,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2286,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "342:16:8"
              },
              "referencedDeclaration": 429,
              "src": "342:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2291,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "390:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "365:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2290,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2289,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "365:16:8"
              },
              "referencedDeclaration": 429,
              "src": "365:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2301,
            "name": "TokenMinted",
            "nameLocation": "414:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "444:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "436:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "468:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "462:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "501:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "495:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2299,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "547:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "539:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "425:136:8"
            },
            "src": "408:154:8"
          },
          {
            "constant": false,
            "id": 2303,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "602:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "587:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2302,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "587:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2307,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "710:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "674:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2306,
              "keyType": {
                "id": 2304,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "682:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "674:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2305,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "693:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2311,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "837:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "801:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2310,
              "keyType": {
                "id": 2308,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "801:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2309,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "820:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2315,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "955:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "919:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2314,
              "keyType": {
                "id": 2312,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "927:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "919:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2313,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "938:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2333,
              "nodeType": "Block",
              "src": "1192:39:8",
              "statements": [
                {
                  "expression": {
                    "id": 2331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2329,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "1203:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2330,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "1211:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1203:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2332,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2316,
              "nodeType": "StructuredDocumentation",
              "src": "976:52:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2334,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2325,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2318,
                    "src": "1168:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2326,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2320,
                    "src": "1179:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2327,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2324,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2274,
                  "src": "1160:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1160:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1070:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1056:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1104:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1090:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2322,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1140:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1126:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:114:8"
            },
            "returnParameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:8"
            },
            "scope": 2922,
            "src": "1034:197:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2343,
              "nodeType": "Block",
              "src": "1298:45:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2339,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1316:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1316:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2338,
                  "id": 2342,
                  "nodeType": "Return",
                  "src": "1309:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1248:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:8"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "1289:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:9:8"
            },
            "scope": 2922,
            "src": "1239:104:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "1476:31:8",
              "statements": [
                {
                  "expression": {
                    "id": 2351,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2303,
                    "src": "1494:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2350,
                  "id": 2352,
                  "nodeType": "Return",
                  "src": "1487:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2345,
              "nodeType": "StructuredDocumentation",
              "src": "1351:44:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1410:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1443:8:8"
            },
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1418:2:8"
            },
            "returnParameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2354,
                  "src": "1461:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1460:15:8"
            },
            "scope": 2922,
            "src": "1401:106:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2412,
              "nodeType": "Block",
              "src": "1917:445:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2370,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1928:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1928:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:21:8"
                },
                {
                  "assignments": [
                    2376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2376,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1970:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "1962:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1962:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2380,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2377,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1982:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1982:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1962:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2384,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "2024:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2385,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2033:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2381,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2012:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1830,
                      "src": "2012:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2012:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2387,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2391,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2075:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2392,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2359,
                        "src": "2086:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2388,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2054:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1851,
                      "src": "2054:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2394,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2398,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2136:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2399,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2160:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2400,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "2191:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2395,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2102:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1903,
                      "src": "2102:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:127:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2404,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "2259:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2405,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2268:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2406,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "2286:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2315:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2403,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "2247:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:78:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "EmitStatement",
                  "src": "2242:83:8"
                },
                {
                  "expression": {
                    "id": 2410,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2376,
                    "src": "2345:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2369,
                  "id": 2411,
                  "nodeType": "Return",
                  "src": "2338:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2355,
              "nodeType": "StructuredDocumentation",
              "src": "1515:204:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
            },
            "functionSelector": "9940a11a",
            "id": 2413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2366,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2365,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1889:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1889:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "1734:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1757:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1749:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "1791:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1775:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "1812:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1806:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "1845:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1839:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1738:141:8"
            },
            "returnParameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1908:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:9:8"
            },
            "scope": 2922,
            "src": "1725:637:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2442,
              "nodeType": "Block",
              "src": "2703:327:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2424,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "2750:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2422,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2736:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "2736:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2736:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2773:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2714:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2428,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2430,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2418,
                          "src": "2863:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2876:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2863:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2892:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2841:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2435,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:131:8"
                },
                {
                  "expression": {
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2436,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "2985:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2438,
                      "indexExpression": {
                        "id": 2437,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "3001:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2985:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2439,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2418,
                      "src": "3012:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2985:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2441,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2414,
              "nodeType": "StructuredDocumentation",
              "src": "2370:233:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "2618:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2651:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "2643:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2643:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2668:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "2660:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2642:37:8"
            },
            "returnParameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2703:0:8"
            },
            "scope": 2922,
            "src": "2609:421:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2472,
              "nodeType": "Block",
              "src": "3369:325:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2454,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2446,
                            "src": "3416:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2452,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3402:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3402:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3380:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2458,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2460,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2448,
                          "src": "3529:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3542:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3529:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3558:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3507:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:130:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:130:8"
                },
                {
                  "expression": {
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2466,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "3650:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2468,
                      "indexExpression": {
                        "id": 2467,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "3665:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3650:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2469,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2448,
                      "src": "3676:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2444,
              "nodeType": "StructuredDocumentation",
              "src": "3038:232:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3285:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3317:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "3309:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2448,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3334:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "3326:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3308:37:8"
            },
            "returnParameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:8"
            },
            "scope": 2922,
            "src": "3276:418:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "3971:324:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2484,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2476,
                            "src": "4018:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2482,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4004:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4004:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4004:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4041:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3982:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2488,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2490,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2478,
                          "src": "4131:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4144:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4131:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4160:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4109:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4109:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2495,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:131:8"
                },
                {
                  "expression": {
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2496,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "4253:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2498,
                      "indexExpression": {
                        "id": 2497,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "4266:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4253:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2499,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "4277:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4253:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2474,
              "nodeType": "StructuredDocumentation",
              "src": "3702:193:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "3910:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3933:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3925:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3950:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3942:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3942:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3924:37:8"
            },
            "returnParameters": {
              "id": 2480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3971:0:8"
            },
            "scope": 2922,
            "src": "3901:394:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2638,
              "nodeType": "Block",
              "src": "4811:1377:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2514,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "4858:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2512,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4844:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4844:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4844:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4881:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2518,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2520,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "4971:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2522,
                          "indexExpression": {
                            "id": 2521,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "4984:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4971:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4995:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4971:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5011:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4949:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "4949:140:8"
                },
                {
                  "assignments": [
                    2529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2529,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5110:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5102:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5102:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2537,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2530,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2508,
                            "src": "5131:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5160:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5131:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2533,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5130:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2534,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5181:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5181:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5130:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5102:94:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2539,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "5231:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5251:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5231:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5267:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5209:121:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2544,
                  "nodeType": "ExpressionStatement",
                  "src": "5209:121:8"
                },
                {
                  "assignments": [
                    2546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2546,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5351:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5343:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5343:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2552,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2547,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2529,
                      "src": "5370:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2548,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "5390:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2550,
                      "indexExpression": {
                        "id": 2549,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "5403:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5390:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5370:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5343:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5446:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5446:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2556,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "5459:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5446:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5490:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5424:164:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:164:8"
                },
                {
                  "assignments": [
                    2562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2562,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5617:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5601:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2561,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5601:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2570,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2567,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "5647:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2565,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5633:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "5633:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5633:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5625:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5625:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5625:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5601:55:8"
                },
                {
                  "assignments": [
                    2572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2572,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "5683:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5667:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2571,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5667:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2577,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "5729:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2575,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5707:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "5707:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5707:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5699:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2573,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5699:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5667:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2584,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5781:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "5781:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5781:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "5814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2588,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "5836:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2581,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5751:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1961,
                      "src": "5751:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:122:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2590,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:122:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2591,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "5890:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2592,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2572,
                      "src": "5899:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5890:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2636,
                    "nodeType": "Block",
                    "src": "5972:209:8",
                    "statements": [
                      {
                        "assignments": [
                          2603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2603,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "5993:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2636,
                            "src": "5987:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2602,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5987:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2606,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2506,
                              "src": "6027:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2604,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6003:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1923,
                            "src": "6003:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6003:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5987:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2612,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6068:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6068:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2616,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2614,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6081:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2615,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2603,
                                            "src": "6087:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6081:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2617,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6080:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6068:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2619,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6067:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6099:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6067:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2609,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "6052:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6052:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6052:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2623,
                        "nodeType": "ExpressionStatement",
                        "src": "6052:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2627,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6142:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6142:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2629,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2603,
                                      "src": "6154:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6142:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2631,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6141:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6165:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6141:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2624,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2572,
                              "src": "6118:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6118:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6118:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2635,
                        "nodeType": "ExpressionStatement",
                        "src": "6118:51:8"
                      }
                    ]
                  },
                  "id": 2637,
                  "nodeType": "IfStatement",
                  "src": "5886:295:8",
                  "trueBody": {
                    "id": 2601,
                    "nodeType": "Block",
                    "src": "5914:52:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2597,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5944:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5944:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2594,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "5929:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5929:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5929:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2600,
                        "nodeType": "ExpressionStatement",
                        "src": "5929:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2504,
              "nodeType": "StructuredDocumentation",
              "src": "4303:390:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "4708:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4726:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2639,
                  "src": "4718:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2508,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "4743:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2639,
                  "src": "4735:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4717:53:8"
            },
            "returnParameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4811:0:8"
            },
            "scope": 2922,
            "src": "4699:1489:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "6566:426:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2648,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2644,
                          "src": "6599:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6613:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6605:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2649,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6605:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6605:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6599:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        }
                      ],
                      "id": 2647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6577:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6577:141:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "6577:141:8"
                },
                {
                  "assignments": [
                    2658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2658,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6739:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2681,
                      "src": "6731:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2663,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2661,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "6761:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2659,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6747:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "6747:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6731:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2665,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6804:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "6804:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2668,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2658,
                          "src": "6826:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6804:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6846:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6782:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6782:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2672,
                  "nodeType": "ExpressionStatement",
                  "src": "6782:140:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2676,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2658,
                        "src": "6965:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2677,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "6972:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2678,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "6976:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2673,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6935:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "6935:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6935:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2680,
                  "nodeType": "ExpressionStatement",
                  "src": "6935:49:8"
                }
              ]
            },
            "documentation": {
              "id": 2640,
              "nodeType": "StructuredDocumentation",
              "src": "6196:292:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "6503:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6536:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "6528:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6553:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "6545:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6545:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6527:29:8"
            },
            "returnParameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6566:0:8"
            },
            "scope": 2922,
            "src": "6494:498:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2804,
              "nodeType": "Block",
              "src": "7411:1222:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2691,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7458:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2689,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7444:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7444:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7444:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7481:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7422:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7422:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "7422:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2697,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "7571:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2699,
                          "indexExpression": {
                            "id": 2698,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7587:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7571:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7598:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7571:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7614:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7549:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7549:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2704,
                  "nodeType": "ExpressionStatement",
                  "src": "7549:153:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7737:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7737:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2708,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "7750:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2710,
                          "indexExpression": {
                            "id": 2709,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7766:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7750:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7737:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7789:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7715:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7715:195:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2714,
                  "nodeType": "ExpressionStatement",
                  "src": "7715:195:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2716,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7945:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7945:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7945:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7975:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7967:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2719,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7967:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7967:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7945:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7992:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7923:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7923:157:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "7923:157:8"
                },
                {
                  "assignments": [
                    2728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2728,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8109:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2804,
                      "src": "8093:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2727,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8093:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2736,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2733,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "8139:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2731,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8125:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8125:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8125:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8117:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2729,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8117:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8117:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8093:55:8"
                },
                {
                  "assignments": [
                    2738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8175:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2804,
                      "src": "8159:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8159:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2746,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2743,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "8221:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2741,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8199:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8199:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8199:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8191:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2739,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8191:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8191:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8159:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2750,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2728,
                        "src": "8274:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2751,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8281:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8281:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8281:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2754,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8301:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2747,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8243:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1385,
                      "src": "8243:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8243:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "8243:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2757,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2728,
                      "src": "8326:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2758,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "8335:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8326:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2802,
                    "nodeType": "Block",
                    "src": "8408:218:8",
                    "statements": [
                      {
                        "assignments": [
                          2769
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2769,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8429:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2802,
                            "src": "8423:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2768,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8423:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2774,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2772,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2685,
                              "src": "8474:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2770,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8439:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1943,
                            "src": "8439:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8439:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8423:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2778,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8513:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8513:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2782,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2780,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8526:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2781,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2769,
                                            "src": "8532:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "8526:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2783,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8525:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8513:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2785,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8512:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8544:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8512:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2775,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2728,
                              "src": "8497:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8497:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8497:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2789,
                        "nodeType": "ExpressionStatement",
                        "src": "8497:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2793,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8587:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8587:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2795,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2769,
                                      "src": "8599:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8587:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2797,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8586:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8610:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8586:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2790,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2738,
                              "src": "8563:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8563:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8563:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2801,
                        "nodeType": "ExpressionStatement",
                        "src": "8563:51:8"
                      }
                    ]
                  },
                  "id": 2803,
                  "nodeType": "IfStatement",
                  "src": "8322:304:8",
                  "trueBody": {
                    "id": 2767,
                    "nodeType": "Block",
                    "src": "8350:52:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2763,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8380:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8380:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2760,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2728,
                              "src": "8365:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8365:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8365:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "8365:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2683,
              "nodeType": "StructuredDocumentation",
              "src": "7000:339:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7354:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7385:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2805,
                  "src": "7377:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7377:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7376:17:8"
            },
            "returnParameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7411:0:8"
            },
            "scope": 2922,
            "src": "7345:1288:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2847,
              "nodeType": "Block",
              "src": "9027:456:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2814,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "9060:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9074:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9066:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9066:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9066:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9060:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9091:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        }
                      ],
                      "id": 2813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9038:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2822,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:140:8"
                },
                {
                  "assignments": [
                    2824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2824,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9199:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2847,
                      "src": "9191:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9191:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2829,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2827,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "9237:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2825,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9215:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9215:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9215:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9191:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2831,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9280:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9280:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9280:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2834,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2824,
                          "src": "9302:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9280:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9330:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9258:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9258:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "9258:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2842,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "9448:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2843,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "9463:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "9467:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9418:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "9418:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9418:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "9418:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2806,
              "nodeType": "StructuredDocumentation",
              "src": "8641:309:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "8965:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2808,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8997:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "8989:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9014:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "9006:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:29:8"
            },
            "returnParameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9027:0:8"
            },
            "scope": 2922,
            "src": "8956:527:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "9898:938:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2857,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "9945:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2855,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9931:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "9931:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9931:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9968:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9909:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9909:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2861,
                  "nodeType": "ExpressionStatement",
                  "src": "9909:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2863,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "10058:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2865,
                          "indexExpression": {
                            "id": 2864,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10073:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10058:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10084:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10058:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10100:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10036:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10036:151:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2870,
                  "nodeType": "ExpressionStatement",
                  "src": "10036:151:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2872,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10222:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10222:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2874,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "10235:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2876,
                          "indexExpression": {
                            "id": 2875,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10250:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10235:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10222:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10273:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10200:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10200:193:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2880,
                  "nodeType": "ExpressionStatement",
                  "src": "10200:193:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2882,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10428:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10428:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10428:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10458:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10450:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10450:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10450:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10428:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10475:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10406:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10406:156:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2892,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:156:8"
                },
                {
                  "assignments": [
                    2894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2894,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "10591:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2920,
                      "src": "10575:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10575:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2902,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2899,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10637:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2897,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10615:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "10615:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10615:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10607:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10607:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10607:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10575:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2906,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "10703:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2907,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10731:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "10731:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10731:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "10764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2903,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10659:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "10659:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:123:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:123:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2916,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10818:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10818:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2913,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "10795:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10795:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10795:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "10795:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "9491:336:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 2921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "9842:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9872:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "9864:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9864:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9863:17:8"
            },
            "returnParameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9898:0:8"
            },
            "scope": 2922,
            "src": "9833:1003:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2923,
        "src": "271:10568:8",
        "usedErrors": []
      }
    ],
    "src": "33:10808:8"
  },
  "legacyAST": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2274
      ],
      "ERC1190Tradable": [
        2922
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        2938
      ],
      "IERC1190Approver": [
        2994
      ],
      "IERC1190CreativeLicenseReceiver": [
        3012
      ],
      "IERC1190CreativeOwner": [
        3074
      ],
      "IERC1190Metadata": [
        3101
      ],
      "IERC1190Owner": [
        3163
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3181
      ],
      "IERC1190Renter": [
        3232
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 2923,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2276,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2277,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 2275,
        "src": "69:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2278,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 498,
        "src": "94:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2279,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2923,
        "sourceUnit": 105,
        "src": "148:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2281,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2274,
              "src": "299:7:8"
            },
            "id": 2282,
            "nodeType": "InheritanceSpecifier",
            "src": "299:7:8"
          },
          {
            "baseName": {
              "id": 2283,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "308:7:8"
            },
            "id": 2284,
            "nodeType": "InheritanceSpecifier",
            "src": "308:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2280,
          "nodeType": "StructuredDocumentation",
          "src": "204:65:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 2922,
        "linearizedBaseContracts": [
          2922,
          104,
          2274,
          3101,
          2938,
          3232,
          3074,
          3163,
          2994,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "280:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2288,
            "libraryName": {
              "id": 2285,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "329:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "323:36:8",
            "typeName": {
              "id": 2287,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2286,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "342:16:8"
              },
              "referencedDeclaration": 429,
              "src": "342:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2291,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "390:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "365:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2290,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2289,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "365:16:8"
              },
              "referencedDeclaration": 429,
              "src": "365:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2301,
            "name": "TokenMinted",
            "nameLocation": "414:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "444:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "436:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "468:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "462:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2297,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "501:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "495:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2299,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "547:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "539:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "425:136:8"
            },
            "src": "408:154:8"
          },
          {
            "constant": false,
            "id": 2303,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "602:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "587:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2302,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "587:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2307,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "710:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "674:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2306,
              "keyType": {
                "id": 2304,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "682:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "674:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2305,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "693:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2311,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "837:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "801:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2310,
              "keyType": {
                "id": 2308,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "809:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "801:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2309,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "820:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2315,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "955:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 2922,
            "src": "919:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2314,
              "keyType": {
                "id": 2312,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "927:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "919:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2313,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "938:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2333,
              "nodeType": "Block",
              "src": "1192:39:8",
              "statements": [
                {
                  "expression": {
                    "id": 2331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2329,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "1203:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2330,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2322,
                      "src": "1211:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1203:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2332,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2316,
              "nodeType": "StructuredDocumentation",
              "src": "976:52:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2334,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2325,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2318,
                    "src": "1168:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2326,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2320,
                    "src": "1179:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2327,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2324,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2274,
                  "src": "1160:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1160:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1070:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1056:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1104:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1090:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2322,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1140:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1126:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:114:8"
            },
            "returnParameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:8"
            },
            "scope": 2922,
            "src": "1034:197:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2343,
              "nodeType": "Block",
              "src": "1298:45:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2339,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1316:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1316:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2338,
                  "id": 2342,
                  "nodeType": "Return",
                  "src": "1309:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1248:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:8"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "1289:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:9:8"
            },
            "scope": 2922,
            "src": "1239:104:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "1476:31:8",
              "statements": [
                {
                  "expression": {
                    "id": 2351,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2303,
                    "src": "1494:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2350,
                  "id": 2352,
                  "nodeType": "Return",
                  "src": "1487:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2345,
              "nodeType": "StructuredDocumentation",
              "src": "1351:44:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1410:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1443:8:8"
            },
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1418:2:8"
            },
            "returnParameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2354,
                  "src": "1461:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1460:15:8"
            },
            "scope": 2922,
            "src": "1401:106:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2412,
              "nodeType": "Block",
              "src": "1917:445:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2370,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1928:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "1928:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:21:8"
                },
                {
                  "assignments": [
                    2376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2376,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "1970:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2412,
                      "src": "1962:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1962:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2380,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2377,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2291,
                        "src": "1982:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1982:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1962:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2384,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "2024:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2385,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2033:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2381,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2012:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1830,
                      "src": "2012:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2012:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2387,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2391,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2075:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2392,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2359,
                        "src": "2086:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2388,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2054:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1851,
                      "src": "2054:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2394,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2398,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2136:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2399,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2160:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2400,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "2191:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2395,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2102:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1903,
                      "src": "2102:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:127:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2404,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2357,
                        "src": "2259:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2405,
                        "name": "royaltyForRental",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2268:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2406,
                        "name": "royaltyForOwnershipTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "2286:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2315:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2403,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "2247:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:78:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "EmitStatement",
                  "src": "2242:83:8"
                },
                {
                  "expression": {
                    "id": 2410,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2376,
                    "src": "2345:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2369,
                  "id": 2411,
                  "nodeType": "Return",
                  "src": "2338:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2355,
              "nodeType": "StructuredDocumentation",
              "src": "1515:204:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
            },
            "functionSelector": "9940a11a",
            "id": 2413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2366,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2365,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1889:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1889:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "1734:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1757:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1749:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "1791:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1775:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "1812:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1806:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "1845:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1839:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1738:141:8"
            },
            "returnParameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2413,
                  "src": "1908:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:9:8"
            },
            "scope": 2922,
            "src": "1725:637:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2442,
              "nodeType": "Block",
              "src": "2703:327:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2424,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "2750:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2422,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "2736:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "2736:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2736:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2773:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2714:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2428,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2430,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2418,
                          "src": "2863:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2876:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2863:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2892:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2841:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2435,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:131:8"
                },
                {
                  "expression": {
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2436,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "2985:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2438,
                      "indexExpression": {
                        "id": 2437,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "3001:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2985:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2439,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2418,
                      "src": "3012:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2985:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2441,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2414,
              "nodeType": "StructuredDocumentation",
              "src": "2370:233:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "2618:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2651:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "2643:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2643:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "2668:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "2660:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2642:37:8"
            },
            "returnParameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2703:0:8"
            },
            "scope": 2922,
            "src": "2609:421:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2472,
              "nodeType": "Block",
              "src": "3369:325:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2454,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2446,
                            "src": "3416:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2452,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3402:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3402:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3380:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2458,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2460,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2448,
                          "src": "3529:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3542:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3529:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3558:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3507:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:130:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:130:8"
                },
                {
                  "expression": {
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2466,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "3650:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2468,
                      "indexExpression": {
                        "id": 2467,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "3665:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3650:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2469,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2448,
                      "src": "3676:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3650:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2444,
              "nodeType": "StructuredDocumentation",
              "src": "3038:232:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3285:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3317:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "3309:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2448,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3334:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "3326:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3308:37:8"
            },
            "returnParameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3369:0:8"
            },
            "scope": 2922,
            "src": "3276:418:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "3971:324:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2484,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2476,
                            "src": "4018:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2482,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4004:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4004:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4004:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4041:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3982:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2488,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2490,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2478,
                          "src": "4131:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4144:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4131:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4160:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4109:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4109:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2495,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:131:8"
                },
                {
                  "expression": {
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2496,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "4253:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2498,
                      "indexExpression": {
                        "id": 2497,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "4266:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4253:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2499,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "4277:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4253:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2501,
                  "nodeType": "ExpressionStatement",
                  "src": "4253:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2474,
              "nodeType": "StructuredDocumentation",
              "src": "3702:193:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "3910:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3933:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3925:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3950:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3942:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3942:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3924:37:8"
            },
            "returnParameters": {
              "id": 2480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3971:0:8"
            },
            "scope": 2922,
            "src": "3901:394:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2638,
              "nodeType": "Block",
              "src": "4811:1377:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2514,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "4858:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2512,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4844:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4844:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4844:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4881:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4822:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2518,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2520,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "4971:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2522,
                          "indexExpression": {
                            "id": 2521,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "4984:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4971:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4995:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4971:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5011:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4949:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "4949:140:8"
                },
                {
                  "assignments": [
                    2529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2529,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5110:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5102:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5102:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2537,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2530,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2508,
                            "src": "5131:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5160:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5131:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2533,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5130:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2534,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5181:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5181:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5130:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5102:94:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2539,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "5231:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5251:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5231:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5267:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5209:121:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2544,
                  "nodeType": "ExpressionStatement",
                  "src": "5209:121:8"
                },
                {
                  "assignments": [
                    2546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2546,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5351:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5343:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2545,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5343:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2552,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2547,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2529,
                      "src": "5370:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2548,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "5390:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2550,
                      "indexExpression": {
                        "id": 2549,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "5403:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5390:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5370:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5343:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5446:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5446:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2556,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "5459:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5446:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5490:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5424:164:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "5424:164:8"
                },
                {
                  "assignments": [
                    2562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2562,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5617:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5601:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2561,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5601:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2570,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2567,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "5647:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2565,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5633:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "5633:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5633:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5625:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5625:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5625:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5601:55:8"
                },
                {
                  "assignments": [
                    2572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2572,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "5683:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2638,
                      "src": "5667:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2571,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5667:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2577,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2506,
                            "src": "5729:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2575,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5707:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "5707:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5707:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5699:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2573,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5699:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5699:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5667:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2584,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5781:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "5781:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5781:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "5814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2588,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "5836:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2581,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5751:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1961,
                      "src": "5751:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:122:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2590,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:122:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2591,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "5890:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2592,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2572,
                      "src": "5899:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5890:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2636,
                    "nodeType": "Block",
                    "src": "5972:209:8",
                    "statements": [
                      {
                        "assignments": [
                          2603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2603,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "5993:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2636,
                            "src": "5987:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2602,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5987:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2606,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2506,
                              "src": "6027:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2604,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6003:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1923,
                            "src": "6003:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6003:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5987:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2612,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6068:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6068:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2616,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2614,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6081:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2615,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2603,
                                            "src": "6087:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6081:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2617,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6080:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6068:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2619,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6067:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6099:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6067:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2609,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "6052:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6052:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6052:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2623,
                        "nodeType": "ExpressionStatement",
                        "src": "6052:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2627,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6142:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6142:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2629,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2603,
                                      "src": "6154:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6142:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2631,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6141:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6165:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6141:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2624,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2572,
                              "src": "6118:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6118:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6118:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2635,
                        "nodeType": "ExpressionStatement",
                        "src": "6118:51:8"
                      }
                    ]
                  },
                  "id": 2637,
                  "nodeType": "IfStatement",
                  "src": "5886:295:8",
                  "trueBody": {
                    "id": 2601,
                    "nodeType": "Block",
                    "src": "5914:52:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2597,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5944:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5944:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2594,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "5929:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5929:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5929:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2600,
                        "nodeType": "ExpressionStatement",
                        "src": "5929:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2504,
              "nodeType": "StructuredDocumentation",
              "src": "4303:390:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "4708:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4726:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2639,
                  "src": "4718:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2508,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "4743:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2639,
                  "src": "4735:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4717:53:8"
            },
            "returnParameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4811:0:8"
            },
            "scope": 2922,
            "src": "4699:1489:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "6566:426:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2648,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2644,
                          "src": "6599:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6613:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6605:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2649,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6605:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6605:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6599:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3350d9f7e64704b5434b9e88b827274d2fcf840ef5b985a26110f04ed7d5cd",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Ownership license to the zero address.\""
                        }
                      ],
                      "id": 2647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6577:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6577:141:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "6577:141:8"
                },
                {
                  "assignments": [
                    2658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2658,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6739:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2681,
                      "src": "6731:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2663,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2661,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "6761:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2659,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6747:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "6747:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6731:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2665,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6804:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "6804:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6804:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2668,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2658,
                          "src": "6826:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6804:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6846:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6782:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6782:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2672,
                  "nodeType": "ExpressionStatement",
                  "src": "6782:140:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2676,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2658,
                        "src": "6965:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2677,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "6972:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2678,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "6976:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2673,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6935:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "6935:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6935:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2680,
                  "nodeType": "ExpressionStatement",
                  "src": "6935:49:8"
                }
              ]
            },
            "documentation": {
              "id": 2640,
              "nodeType": "StructuredDocumentation",
              "src": "6196:292:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "6503:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6536:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "6528:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6553:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "6545:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6545:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6527:29:8"
            },
            "returnParameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6566:0:8"
            },
            "scope": 2922,
            "src": "6494:498:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2804,
              "nodeType": "Block",
              "src": "7411:1222:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2691,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7458:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2689,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7444:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7444:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7444:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7481:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7422:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7422:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "7422:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2697,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "7571:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2699,
                          "indexExpression": {
                            "id": 2698,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7587:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7571:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7598:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7571:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7614:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7549:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7549:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2704,
                  "nodeType": "ExpressionStatement",
                  "src": "7549:153:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7737:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7737:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2708,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "7750:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2710,
                          "indexExpression": {
                            "id": 2709,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "7766:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7750:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7737:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7789:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7715:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7715:195:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2714,
                  "nodeType": "ExpressionStatement",
                  "src": "7715:195:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2716,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7945:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7945:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7945:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7975:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7967:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2719,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7967:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7967:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7945:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7992:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7923:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7923:157:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "7923:157:8"
                },
                {
                  "assignments": [
                    2728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2728,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8109:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2804,
                      "src": "8093:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2727,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8093:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2736,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2733,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "8139:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2731,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8125:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8125:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8125:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8117:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2729,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8117:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8117:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8093:55:8"
                },
                {
                  "assignments": [
                    2738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8175:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2804,
                      "src": "8159:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8159:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2746,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2743,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2685,
                            "src": "8221:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2741,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8199:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8199:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8199:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8191:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2739,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8191:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8191:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8159:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2750,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2728,
                        "src": "8274:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2751,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8281:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8281:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8281:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2754,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8301:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2747,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8243:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1385,
                      "src": "8243:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8243:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "8243:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2757,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2728,
                      "src": "8326:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2758,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "8335:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8326:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2802,
                    "nodeType": "Block",
                    "src": "8408:218:8",
                    "statements": [
                      {
                        "assignments": [
                          2769
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2769,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8429:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2802,
                            "src": "8423:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2768,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8423:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2774,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2772,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2685,
                              "src": "8474:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2770,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8439:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1943,
                            "src": "8439:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8439:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8423:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2778,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8513:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8513:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2782,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2780,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8526:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2781,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2769,
                                            "src": "8532:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "8526:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2783,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8525:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8513:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2785,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8512:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8544:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8512:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2775,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2728,
                              "src": "8497:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8497:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8497:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2789,
                        "nodeType": "ExpressionStatement",
                        "src": "8497:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2793,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8587:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8587:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2795,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2769,
                                      "src": "8599:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8587:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2797,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8586:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8610:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8586:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2790,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2738,
                              "src": "8563:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8563:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8563:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2801,
                        "nodeType": "ExpressionStatement",
                        "src": "8563:51:8"
                      }
                    ]
                  },
                  "id": 2803,
                  "nodeType": "IfStatement",
                  "src": "8322:304:8",
                  "trueBody": {
                    "id": 2767,
                    "nodeType": "Block",
                    "src": "8350:52:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2763,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8380:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8380:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2760,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2728,
                              "src": "8365:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8365:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8365:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "8365:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2683,
              "nodeType": "StructuredDocumentation",
              "src": "7000:339:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7354:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7385:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2805,
                  "src": "7377:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7377:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7376:17:8"
            },
            "returnParameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7411:0:8"
            },
            "scope": 2922,
            "src": "7345:1288:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2847,
              "nodeType": "Block",
              "src": "9027:456:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2814,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2810,
                          "src": "9060:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9074:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9066:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9066:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9066:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9060:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865204372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9091:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the Creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f540d7b00a3b56244a262710955d3666f9c165b89272681d26fd799bc81de9",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the Creative license to the zero address.\""
                        }
                      ],
                      "id": 2813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9038:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:140:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2822,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:140:8"
                },
                {
                  "assignments": [
                    2824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2824,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9199:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2847,
                      "src": "9191:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9191:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2829,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2827,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "9237:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2825,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9215:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9215:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9215:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9191:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2831,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9280:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9280:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9280:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2834,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2824,
                          "src": "9302:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9280:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9330:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9258:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9258:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "9258:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2842,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "9448:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2843,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "9463:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "9467:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9418:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "9418:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9418:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "9418:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2806,
              "nodeType": "StructuredDocumentation",
              "src": "8641:309:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "8965:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2808,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8997:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "8989:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2810,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9014:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "9006:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:29:8"
            },
            "returnParameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9027:0:8"
            },
            "scope": 2922,
            "src": "8956:527:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "9898:938:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2857,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "9945:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2855,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "9931:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "9931:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9931:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9968:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9909:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9909:114:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2861,
                  "nodeType": "ExpressionStatement",
                  "src": "9909:114:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2863,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "10058:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2865,
                          "indexExpression": {
                            "id": 2864,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10073:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10058:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10084:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10058:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10100:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10036:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10036:151:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2870,
                  "nodeType": "ExpressionStatement",
                  "src": "10036:151:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2872,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10222:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10222:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2874,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "10235:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2876,
                          "indexExpression": {
                            "id": 2875,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10250:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10235:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10222:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10273:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10200:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10200:193:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2880,
                  "nodeType": "ExpressionStatement",
                  "src": "10200:193:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2882,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10428:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10428:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10428:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10458:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10450:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10450:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10450:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10428:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10475:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10406:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10406:156:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2892,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:156:8"
                },
                {
                  "assignments": [
                    2894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2894,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "10591:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2920,
                      "src": "10575:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10575:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2902,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2899,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2851,
                            "src": "10637:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2897,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10615:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "10615:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10615:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10607:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10607:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10607:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10575:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2906,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "10703:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2907,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10731:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "10731:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10731:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "10764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2903,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10659:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$2922_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "10659:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:123:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:123:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2916,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10818:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10818:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2913,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "10795:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10795:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10795:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "10795:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "9491:336:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 2921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "9842:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9872:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "9864:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9864:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9863:17:8"
            },
            "returnParameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9898:0:8"
            },
            "scope": 2922,
            "src": "9833:1003:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2923,
        "src": "271:10568:8",
        "usedErrors": []
      }
    ],
    "src": "33:10808:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-28T19:52:04.078Z",
  "devdoc": {
    "details": "Implementation of ERC1190 with payable methods.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC1190-approve}."
      },
      "balanceOfCreativeOwner(address)": {
        "details": "See {IERC1190-balanceOfCreativeOwner}."
      },
      "balanceOfOwner(address)": {
        "details": "See {IERC1190-balanceOfOwner}."
      },
      "balanceOfRenter(address)": {
        "details": "See {IERC1190-balanceOfRenter}."
      },
      "constructor": {
        "details": "See {ERC1190-constructor}."
      },
      "creativeOwnerOf(uint256)": {
        "details": "See {IERC1190-creativeOwnerOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC1190-getApproved}."
      },
      "getRented(uint256,address)": {
        "details": "See {IERC1190-getRented}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1190-isApprovedForAll}."
      },
      "mint(address,string,uint8,uint8)": {
        "details": "Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `royaltyForRental` and `royaltyForOwnershipTransfer`."
      },
      "name()": {
        "details": "See {IERC1190Metadata-name}."
      },
      "obtainCreativeLicense(uint256)": {
        "details": "Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "obtainOwnershipLicense(uint256)": {
        "details": "Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC1190-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rentAsset(address,uint256,uint256)": {
        "details": "See {IERC1190-rentAsset}."
      },
      "rentAsset(uint256,uint256)": {
        "details": "Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses."
      },
      "rentersOf(uint256)": {
        "details": "See {IERC1190-rentersOf}."
      },
      "safeTransferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferCreativeLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1190-setApprovalForAll}."
      },
      "setCreativeLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setOwnershipLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setRentalPrice(uint256,uint256)": {
        "details": "Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC1190Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC1190Metadata-tokenURI}."
      },
      "transferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferCreativeLicense}."
      },
      "transferCreativeLicense(uint256,address)": {
        "details": "Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferOwnershipLicense}."
      },
      "transferOwnershipLicense(uint256,address)": {
        "details": "Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}