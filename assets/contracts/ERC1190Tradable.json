{
  "contractName": "ERC1190Tradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenBaseUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "AssetRented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForRental",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForOwnershipTransfer",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferCreativeLicense",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferOwnershipLicense",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creativeOwner",
          "type": "address"
        }
      ],
      "name": "balanceOfCreativeOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "balanceOfRenter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "getRented",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "royaltyForOwnershipTransfer",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "royaltyForRental",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownershipPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnershipPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentalPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "rentalRoyalty",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "ownershipTransferRoyalty",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setOwnershipLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setCreativeLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setRentalPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainOwnershipLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainCreativeLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"AssetRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForRental\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForOwnershipTransfer\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferCreativeLicense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferOwnershipLicense\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creativeOwner\",\"type\":\"address\"}],\"name\":\"balanceOfCreativeOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"balanceOfRenter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnershipPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"getRented\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"rentalRoyalty\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"ownershipTransferRoyalty\",\"type\":\"uint8\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainCreativeLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownershipPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentalPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyForOwnershipTransfer\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyForRental\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setCreativeLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setOwnershipLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setRentalPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of ERC1190 with payable methods.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC1190-approve}.\"},\"balanceOfCreativeOwner(address)\":{\"details\":\"See {IERC1190-balanceOfCreativeOwner}.\"},\"balanceOfOwner(address)\":{\"details\":\"See {IERC1190-balanceOfOwner}.\"},\"balanceOfRenter(address)\":{\"details\":\"See {IERC1190-balanceOfRenter}.\"},\"constructor\":{\"details\":\"See {ERC1190-constructor}.\"},\"creativeOwnerOf(uint256)\":{\"details\":\"See {IERC1190-creativeOwnerOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC1190-getApproved}.\"},\"getRented(uint256,address)\":{\"details\":\"See {IERC1190-getRented}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1190-isApprovedForAll}.\"},\"mint(address,string,uint8,uint8)\":{\"details\":\"Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`.\"},\"name()\":{\"details\":\"See {IERC1190Metadata-name}.\"},\"obtainCreativeLicense(uint256)\":{\"details\":\"Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"obtainOwnershipLicense(uint256)\":{\"details\":\"Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC1190-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rentAsset(address,uint256,uint256)\":{\"details\":\"See {IERC1190-rentAsset}.\"},\"rentAsset(uint256,uint256)\":{\"details\":\"Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses.\"},\"rentersOf(uint256)\":{\"details\":\"See {IERC1190-rentersOf}.\"},\"safeTransferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferCreativeLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1190-setApprovalForAll}.\"},\"setCreativeLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setOwnershipLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setRentalPrice(uint256,uint256)\":{\"details\":\"Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC1190Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC1190Metadata-tokenURI}.\"},\"transferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferCreativeLicense}.\"},\"transferCreativeLicense(uint256,address)\":{\"details\":\"Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferOwnershipLicense}.\"},\"transferOwnershipLicense(uint256,address)\":{\"details\":\"Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":\"ERC1190Tradable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"non-fungible-royalty-token/contracts/ERC1190.sol\":{\"keccak256\":\"0x5c94880dbe7cfc0b5687f32e74f424917fd7cab750fc1f70f6818c04a5c085f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73c725f6616c3133cb9b1f57893ecfdcb20b022b44f2884186650e35dc77c3e6\",\"dweb:/ipfs/QmSkbpZo6q4ft1NMyLff44Dw2MArzpANoETaze7WYWX6vr\"]},\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":{\"keccak256\":\"0xdcaf86fd1de0199455fd2afbc2eb4a3896d432dd32fcf01d82e3fbe77256a276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6617a82526244fd89aa94924022e74ffceba3895a283efa2e4d3417ddfec7ab\",\"dweb:/ipfs/QmPh3A3ECdyVTSh5DVHKw6hpfQ8Px2nJjDeRoQU5fdrMvg\"]},\"non-fungible-royalty-token/contracts/IERC1190.sol\":{\"keccak256\":\"0x5e3900926a431223b3e1440ece11eb5f4d6d4a4984883ce02429a98a2347101c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab59370ae94fa0be22ff10401ea241aa281416b4b750fb375f6251be25bc18de\",\"dweb:/ipfs/QmXoh5TUjkUuZEA2mL9KQMif8MxH1wjHe44c45FX4K5H18\"]},\"non-fungible-royalty-token/contracts/IERC1190Approver.sol\":{\"keccak256\":\"0x5cfe8bd143e6c86c443a02ea6e94e2f7d6c53474d6256bf55ee79691b714e8d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://188ed6db1029ae83b6e06293dfdd2f220b77d59255a5a76af76feae1a1d799c1\",\"dweb:/ipfs/QmY7TpFWDHydRg2mi8eyKPW3saMXYE2MYjgYd1qvh4dXZc\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeLicenseReceiver.sol\":{\"keccak256\":\"0x9874faa59977fddaf0d252be515418e26866d4c8f5668176e55b479604ae4c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d164d320f1ffa7db1aa93c9685988784fe2e32a9ad93a98062468bf9e5e1bd4d\",\"dweb:/ipfs/QmXR8K1VtLd8CbfNTHPaFtrAhDF9rZSHi9JiFSW1ZqEM9d\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeOwner.sol\":{\"keccak256\":\"0xd4e44eeb23623ad7ea99d56d9b6318ecc678f25660e6a66128e3f8f26bd82df9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b350bdaf466d21b78a3e53b568fd396e8093717932554907ff15913f83c8f\",\"dweb:/ipfs/QmaywMBe5sjeJAiRNc68n4GCsEgj4pr542xcVqsBwpuyF4\"]},\"non-fungible-royalty-token/contracts/IERC1190Metadata.sol\":{\"keccak256\":\"0xa35fa1bcd09130941ca255b6972841b83400b1981b87f1913088dba4b13d09c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da7c2757cd7163b2c8e21355df095e1d977ff4f8a95dd62c4ee89f86f93fd20e\",\"dweb:/ipfs/QmVnp9quJ3gSHNXiVMRrHx2nL982rdiosiz6v5rEqyTyvJ\"]},\"non-fungible-royalty-token/contracts/IERC1190Owner.sol\":{\"keccak256\":\"0x3b3eb1a173a0c912b83b97446793e9c456b3f04ef968b866cc5db1788fb78827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6092fb88805deb255a39ab7b15049de42c1242b822edb68707c74a062d7626d8\",\"dweb:/ipfs/QmWcgWeFCjed5CJKuT6UoTszRj1C25ESEgX9n8Ab5neDNW\"]},\"non-fungible-royalty-token/contracts/IERC1190OwnershipLicenseReceiver.sol\":{\"keccak256\":\"0xea676c2f50bff066256ff8cedf8a092971a2fb124f964c91e7d8739d9b35cbc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b09a8d9ad2954151b7c22bd6434c16898237494efaf54bf842b105fb24e6d58\",\"dweb:/ipfs/QmNj1accKopyGKxdcSfStz1gCcQBmr319quhxS7K1B2yiD\"]},\"non-fungible-royalty-token/contracts/IERC1190Renter.sol\":{\"keccak256\":\"0x437edfff992d3e85c39ed53b3b92e466f83d7e8013d02cee94894bb27f5f9830\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1241705d5d61fd2b121c728dabbddd92171b1bd6e502b61deb765e29e66d64f3\",\"dweb:/ipfs/QmNmxf88PBVAG8oM4GVWgRbpNisK7dNQosce6wALX2LXce\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620046e6380380620046e6833981016040819052620000349162000268565b8251839083906200004d906000906020850190620000f5565b50805162000063906001906020840190620000f5565b505050620000806200007a6200009f60201b60201c565b620000a3565b805162000095906010906020840190620000f5565b5050505062000336565b3390565b600e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010390620002f9565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c357600080fd5b81516001600160401b0380821115620001e057620001e06200019b565b604051601f8301601f19908116603f011681019082821181831017156200020b576200020b6200019b565b816040528381526020925086838588010111156200022857600080fd5b600091505b838210156200024c57858201830151818301840152908201906200022d565b838211156200025e5760008385830101525b9695505050505050565b6000806000606084860312156200027e57600080fd5b83516001600160401b03808211156200029657600080fd5b620002a487838801620001b1565b94506020860151915080821115620002bb57600080fd5b620002c987838801620001b1565b93506040860151915080821115620002e057600080fd5b50620002ef86828701620001b1565b9150509250925092565b600181811c908216806200030e57607f821691505b602082108114156200033057634e487b7160e01b600052602260045260246000fd5b50919050565b6143a080620003466000396000f3fe6080604052600436106102bb5760003560e01c80638da5cb5b1161016e578063c588ea5c116100cb578063ec2b20ac1161007f578063f2fde38b11610064578063f2fde38b146107aa578063f3e4198e146107ca578063f9de1d83146107ea57600080fd5b8063ec2b20ac1461076a578063ef1e00e01461078a57600080fd5b8063c87b56dd116100b0578063c87b56dd146106e1578063de8e7bab14610701578063e985e9c51461072157600080fd5b8063c588ea5c146106a1578063c66130d7146106c157600080fd5b8063a333818c11610122578063afe9a4ff11610107578063afe9a4ff1461065b578063b042ce941461066e578063bf0a660b1461068157600080fd5b8063a333818c1461060e578063aad1b6171461063b57600080fd5b80639940a11a116101535780639940a11a146105ae5780639f2cd0e4146105ce578063a22cb465146105ee57600080fd5b80638da5cb5b1461057b57806395d89b411461059957600080fd5b80634cd5ca8e1161021c5780636f902516116101d057806379b66eb7116101b557806379b66eb71461051b5780638c4b5a921461053b5780638d6cf8bc1461055b57600080fd5b80636f902516146104e6578063715018a61461050657600080fd5b80636352211e116102015780636352211e1461049157806369bb4dc2146104b15780636ebd773d146104c657600080fd5b80634cd5ca8e14610443578063606428f71461047157600080fd5b8063224157ea1161027357806325dc12641161025857806325dc1264146103e35780633c734234146104035780634909d94e1461042357600080fd5b8063224157ea1461039157806325d8a358146103b157600080fd5b8063081812fc116102a4578063081812fc14610317578063095ea7b31461034f5780630b97be961461037157600080fd5b806301ffc9a7146102c057806306fdde03146102f5575b600080fd5b3480156102cc57600080fd5b506102e06102db366004613d1b565b6107fd565b60405190151581526020015b60405180910390f35b34801561030157600080fd5b5061030a6108c1565b6040516102ec9190613d90565b34801561032357600080fd5b50610337610332366004613da3565b610953565b6040516001600160a01b0390911681526020016102ec565b34801561035b57600080fd5b5061036f61036a366004613dd8565b6109d6565b005b34801561037d57600080fd5b5061036f61038c366004613e18565b610be8565b34801561039d57600080fd5b506103376103ac366004613da3565b610c96565b3480156103bd57600080fd5b506103d16103cc366004613da3565b610d21565b60405160ff90911681526020016102ec565b3480156103ef57600080fd5b5061036f6103fe366004613ef4565b610d2c565b34801561040f57600080fd5b5061036f61041e366004613e18565b610d4c565b34801561042f57600080fd5b5061036f61043e366004613ef4565b610dfa565b34801561044f57600080fd5b5061046361045e366004613f30565b610ea7565b6040519081526020016102ec565b34801561047d57600080fd5b5061046361048c366004613f4b565b610f41565b34801561049d57600080fd5b506103376104ac366004613da3565b6112c1565b3480156104bd57600080fd5b5061046361134c565b3480156104d257600080fd5b5061036f6104e1366004613f4b565b61135c565b3480156104f257600080fd5b50610463610501366004613da3565b611494565b34801561051257600080fd5b5061036f611511565b34801561052757600080fd5b5061036f610536366004613f77565b611577565b34801561054757600080fd5b5061036f610556366004613ef4565b61168d565b34801561056757600080fd5b5061036f610576366004613f4b565b6116a8565b34801561058757600080fd5b50600e546001600160a01b0316610337565b3480156105a557600080fd5b5061030a6117ce565b3480156105ba57600080fd5b506104636105c9366004613faa565b6117dd565b3480156105da57600080fd5b5061036f6105e9366004613ef4565b6118d2565b3480156105fa57600080fd5b5061036f61060936600461404f565b61197f565b34801561061a57600080fd5b5061062e610629366004613da3565b61198e565b6040516102ec919061408b565b34801561064757600080fd5b50610463610656366004613f30565b6119fa565b61036f610669366004613da3565b611a82565b61036f61067c366004613f77565b611d47565b34801561068d57600080fd5b5061046361069c366004613da3565b6120d7565b3480156106ad57600080fd5b506103d16106bc366004613da3565b612154565b3480156106cd57600080fd5b506104636106dc366004613f30565b61215f565b3480156106ed57600080fd5b5061030a6106fc366004613da3565b6121f9565b34801561070d57600080fd5b5061036f61071c366004613f77565b61234f565b34801561072d57600080fd5b506102e061073c3660046140d8565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b34801561077657600080fd5b5061036f610785366004613f77565b612465565b34801561079657600080fd5b506104636107a5366004613da3565b61257b565b3480156107b657600080fd5b5061036f6107c5366004613f30565b6125f8565b3480156107d657600080fd5b5061036f6107e5366004614102565b6126da565b61036f6107f8366004613da3565b6126e5565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061086f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108bb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546108d090614135565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc90614135565b80156109495780601f1061091e57610100808354040283529160200191610949565b820191906000526020600020905b81548152906001019060200180831161092c57829003601f168201915b5050505050905090565b600061095e82612a7a565b6109ba5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b60006109e1826112c1565b905060006109ee83610c96565b9050816001600160a01b0316846001600160a01b03161415610a785760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e0000000000000000000000000000000000000000000060648201526084016109b1565b806001600160a01b0316846001600160a01b03161415610b005760405162461bcd60e51b815260206004820152603360248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206372656174697665206f776e65722e0000000000000000000000000060648201526084016109b1565b336001600160a01b0383161480610b1f5750336001600160a01b038216145b80610b2f5750610b2f823361073c565b80610b3f5750610b3f813361073c565b610bd75760405162461bcd60e51b815260206004820152605b60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f68652028637265617469766529206f776e6572206f662074686520746f6b656e60648201527f206e6f7220617070726f76656420746f206d616e6167652069742e0000000000608482015260a4016109b1565b610be2828585612ab9565b50505050565b610bf23383612b22565b610c8a5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109b1565b610be284848484612c02565b6000818152600360205260408120546001600160a01b0316806108bb5760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e00000000000000000000000060648201526084016109b1565b60006108bb82612c8d565b610d4783838360405180602001604052806000815250610d4c565b505050565b610d563383612d05565b610dee5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109b1565b610be284848484612d72565b610e043382612b22565b610e9c5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109b1565b610d47838383612d89565b60006001600160a01b038216610f255760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e000000000000000000000000000060648201526084016109b1565b506001600160a01b031660009081526007602052604090205490565b6000610f4c83612a7a565b610fa35760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6001600160a01b03821661100d5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b60008381526004602090815260408083206001600160a01b03861684529091529020546110a25760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e0000000000000000000000000000000000000060648201526084016109b1565b60008381526004602090815260408083206001600160a01b03861684529091529020546110d1426103e8614186565b8110156112975760008481526004602090815260408083206001600160a01b03871684529091528120819055805b6000868152600560205260409020548110801561111a575081155b1561126657600086815260056020526040902080546001600160a01b03871691908390811061114b5761114b6141a5565b6000918252602090912001546001600160a01b031614156112545760008681526005602052604090208054611182906001906141bb565b81548110611192576111926141a5565b60009182526020808320909101548883526005909152604090912080546001600160a01b0390921691839081106111cb576111cb6141a5565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039490941693909317909255878152600590915260409020805480611220576112206141d2565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b8061125e816141e8565b9150506110ff565b506001600160a01b03841660009081526008602052604081208054600192906112909084906141bb565b9091555050505b505060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b6000818152600260205260408120546001600160a01b0316806108bb5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e00000000000000000000000000000000000000000060648201526084016109b1565b6000611357600f5490565b905090565b6001600160a01b0381166113fe5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109b1565b600061140983610c96565b9050336001600160a01b038216146114895760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e000060648201526084016109b1565b610d478183856118d2565b600061149f82612a7a565b6114fe5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526012602052604090205490565b600e546001600160a01b0316331461156b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b6115756000612f91565b565b61158082612a7a565b6115df5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b6000811161167b5760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526011602052604090912055565b610d4783838360405180602001604052806000815250610be8565b6001600160a01b0381166117385760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109b1565b6000611743836112c1565b9050336001600160a01b038216146117c35760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e0060648201526084016109b1565b610d47818385610dfa565b6060600180546108d090614135565b600e546000906001600160a01b0316331461183a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b611848600f80546001019055565b6000611853600f5490565b905061185f8782612ff0565b61186a8187876131f6565b61187581858561326f565b604080516001600160a01b038916815260ff86811660208301528516818301526060810183905290517fd3df8e557dd2db4e6ed42c0bc93d8dceae1dae9bd0d8bfa2c69d68759fceab539181900360800190a19695505050505050565b6118dc3382612d05565b6119745760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109b1565b610d478383836133f9565b61198a338383613601565b5050565b6000818152600560209081526040918290208054835181840281018401909452808452606093928301828280156119ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119d0575b50505050509050919050565b60006001600160a01b038216611a665760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b506001600160a01b031660009081526008602052604090205490565b611a8b81612a7a565b611aea5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081815260126020526040902054611b915760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a4016109b1565b600081815260126020526040902054341015611c615760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c4016109b1565b33611cfa5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109b1565b6000611d0582610c96565b9050611d128133846118d2565b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610d47573d6000803e3d6000fd5b611d5082612a7a565b611daf5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600082815260136020526040902054611e565760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b600042611e656103e884614203565b611e6f91906141bb565b905060008111611ee75760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e000000000000000000000000000060648201526084016109b1565b600083815260136020526040812054611f009083614186565b905080341015611f9e5760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a4016109b1565b6000611fa9856112c1565b90506000611fb686610c96565b9050611fc33387876126da565b806001600160a01b0316826001600160a01b03161415612018576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015612012573d6000803e3d6000fd5b506120cf565b6000612023876136ef565b90506001600160a01b0383166108fc606461203e8482614225565b61204b9060ff1634614186565b6120559190614203565b6040518115909202916000818181858888f1935050505015801561207d573d6000803e3d6000fd5b506001600160a01b0382166108fc606461209a60ff851634614186565b6120a49190614203565b6040518115909202916000818181858888f193505050501580156120cc573d6000803e3d6000fd5b50505b505050505050565b60006120e282612a7a565b6121415760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526013602052604090205490565b60006108bb826136ef565b60006001600160a01b0382166121dd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e0000000000000000000000000000000000000000000060648201526084016109b1565b506001600160a01b031660009081526006602052604090205490565b606061220482612a7a565b61225b5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000828152600d60205260408120805461227490614135565b9050116122e95760405162461bcd60e51b815260206004820152602960248201527f455243313139303a204e6f2066696c65206173736f63696174656420746f207460448201527f686520746f6b656e2e000000000000000000000000000000000000000000000060648201526084016109b1565b60006122f3613767565b905060008151116123135760405180602001604052806000815250612348565b80600d6000858152602001908152602001600020604051602001612338929190614248565b6040516020818303038152906040525b9392505050565b61235882612a7a565b6123b75760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081116124535760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526012602052604090912055565b61246e82612a7a565b6124cd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081116125695760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526013602052604090912055565b600061258682612a7a565b6125e55760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526011602052604090205490565b600e546001600160a01b031633146126525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b6001600160a01b0381166126ce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109b1565b6126d781612f91565b50565b610d47838383613776565b6126ee81612a7a565b61274d5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b6000818152601160205260409020546127f45760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a4016109b1565b6000818152601160205260409020543410156128c45760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c4016109b1565b3361294b5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109b1565b6000612956826112c1565b9050600061296383610c96565b9050612970823385610dfa565b806001600160a01b0316826001600160a01b031614156129bf576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610be2573d6000803e3d6000fd5b60006129ca84612c8d565b90506001600160a01b0383166108fc60646129e58482614225565b6129f29060ff1634614186565b6129fc9190614203565b6040518115909202916000818181858888f19350505050158015612a24573d6000803e3d6000fd5b506001600160a01b0382166108fc6064612a4160ff851634614186565b612a4b9190614203565b6040518115909202916000818181858888f19350505050158015612a73573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906108bb5750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000612b2d82612a7a565b612b845760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000612b8f836112c1565b9050806001600160a01b0316846001600160a01b03161480612bca5750836001600160a01b0316612bbf84610953565b6001600160a01b0316145b80612bfa57506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff165b949350505050565b612c0d848484612d89565b612c1984848484613903565b610be2576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109b1565b6000612c9882612a7a565b612cef5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b506000908152600b602052604090205460ff1690565b6000612d1082612a7a565b612d675760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000612b8f83610c96565b612d7d8484846133f9565b612c1984848484613aa3565b6000612d94826112c1565b9050836001600160a01b0316816001600160a01b031614612e435760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b6001600160a01b038316612ebf5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109b1565b612ecb81600084612ab9565b6001600160a01b0384166000908152600660205260408120805460019290612ef49084906141bb565b90915550506001600160a01b0383166000908152600660205260408120805460019290612f229084906142f9565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661306c5760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e0000000000000000000000000000000000000000000000000060648201526084016109b1565b61307581612a7a565b156130e85760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c726561647920657869737460448201527f732e00000000000000000000000000000000000000000000000000000000000060648201526084016109b1565b6001600160a01b03821660009081526006602052604081208054600192906131119084906142f9565b90915550506001600160a01b038216600090815260076020526040812080546001929061313f9084906142f9565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b6131ff83612a7a565b6132565760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000838152600d60205260409020610be2908383613c54565b61327883612a7a565b6132cf5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b60648260ff1611156133495760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e00000000000000000000000000000060648201526084016109b1565b60648160ff1611156133c35760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e00000060648201526084016109b1565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b600061340482610c96565b9050836001600160a01b0316816001600160a01b0316146134b35760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b6001600160a01b03831661352f5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109b1565b61353b81600084612ab9565b6001600160a01b03841660009081526007602052604081208054600192906135649084906141bb565b90915550506001600160a01b03831660009081526007602052604081208054600192906135929084906142f9565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156136895760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e000000000000000000000000000000000000000060648201526084016109b1565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b60006136fa82612a7a565b6137515760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b506000908152600a602052604090205460ff1690565b6060601080546108d090614135565b6001600160a01b0383166137e05760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b6137e982612a7a565b6138405760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff191683179055908452600890925282208054919290916138b99084906142f9565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b60006001600160a01b0384163b15613a98576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea76190613960903390899088908890600401614311565b6020604051808303816000875af192505050801561399b575060408051601f3d908101601f191682019092526139989181019061434d565b60015b613a4d573d8080156139c9576040519150601f19603f3d011682016040523d82523d6000602084013e6139ce565b606091505b508051613a45576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109b1565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea76100000000000000000000000000000000000000000000000000000000149050612bfa565b506001949350505050565b60006001600160a01b0384163b15613a98576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e090613b00903390899088908890600401614311565b6020604051808303816000875af1925050508015613b3b575060408051601f3d908101601f19168201909252613b389181019061434d565b60015b613c09573d808015613b69576040519150601f19603f3d011682016040523d82523d6000602084013e613b6e565b606091505b508051613a455760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a4016109b1565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e000000000000000000000000000000000000000000000000000000000149050612bfa565b828054613c6090614135565b90600052602060002090601f016020900481019282613c825760008555613cc8565b82601f10613c9b5782800160ff19823516178555613cc8565b82800160010185558215613cc8579182015b82811115613cc8578235825591602001919060010190613cad565b50613cd4929150613cd8565b5090565b5b80821115613cd45760008155600101613cd9565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146126d757600080fd5b600060208284031215613d2d57600080fd5b813561234881613ced565b60005b83811015613d53578181015183820152602001613d3b565b83811115610be25750506000910152565b60008151808452613d7c816020860160208601613d38565b601f01601f19169290920160200192915050565b6020815260006123486020830184613d64565b600060208284031215613db557600080fd5b5035919050565b80356001600160a01b0381168114613dd357600080fd5b919050565b60008060408385031215613deb57600080fd5b613df483613dbc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613e2e57600080fd5b613e3785613dbc565b9350613e4560208601613dbc565b925060408501359150606085013567ffffffffffffffff80821115613e6957600080fd5b818701915087601f830112613e7d57600080fd5b813581811115613e8f57613e8f613e02565b604051601f8201601f19908116603f01168101908382118183101715613eb757613eb7613e02565b816040528281528a6020848701011115613ed057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215613f0957600080fd5b613f1284613dbc565b9250613f2060208501613dbc565b9150604084013590509250925092565b600060208284031215613f4257600080fd5b61234882613dbc565b60008060408385031215613f5e57600080fd5b82359150613f6e60208401613dbc565b90509250929050565b60008060408385031215613f8a57600080fd5b50508035926020909101359150565b803560ff81168114613dd357600080fd5b600080600080600060808688031215613fc257600080fd5b613fcb86613dbc565b9450602086013567ffffffffffffffff80821115613fe857600080fd5b818801915088601f830112613ffc57600080fd5b81358181111561400b57600080fd5b89602082850101111561401d57600080fd5b60208301965080955050505061403560408701613f99565b915061404360608701613f99565b90509295509295909350565b6000806040838503121561406257600080fd5b61406b83613dbc565b91506020830135801515811461408057600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156140cc5783516001600160a01b0316835292840192918401916001016140a7565b50909695505050505050565b600080604083850312156140eb57600080fd5b6140f483613dbc565b9150613f6e60208401613dbc565b60008060006060848603121561411757600080fd5b61412084613dbc565b95602085013595506040909401359392505050565b600181811c9082168061414957607f821691505b6020821081141561416a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156141a0576141a0614170565b500290565b634e487b7160e01b600052603260045260246000fd5b6000828210156141cd576141cd614170565b500390565b634e487b7160e01b600052603160045260246000fd5b60006000198214156141fc576141fc614170565b5060010190565b60008261422057634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff84168082101561423f5761423f614170565b90039392505050565b60008351602061425b8285838901613d38565b845491840191600090600181811c908083168061427957607f831692505b85831081141561429757634e487b7160e01b85526022600452602485fd5b8080156142ab57600181146142bc576142e9565b60ff198516885283880195506142e9565b60008b81526020902060005b858110156142e15781548a8201529084019088016142c8565b505083880195505b50939a9950505050505050505050565b6000821982111561430c5761430c614170565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526143436080830184613d64565b9695505050505050565b60006020828403121561435f57600080fd5b815161234881613ced56fea2646970667358221220eda7415f7f67227c41b331050aec424e7d3d1e6ccd60a73c5585762579344af564736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106102bb5760003560e01c80638da5cb5b1161016e578063c588ea5c116100cb578063ec2b20ac1161007f578063f2fde38b11610064578063f2fde38b146107aa578063f3e4198e146107ca578063f9de1d83146107ea57600080fd5b8063ec2b20ac1461076a578063ef1e00e01461078a57600080fd5b8063c87b56dd116100b0578063c87b56dd146106e1578063de8e7bab14610701578063e985e9c51461072157600080fd5b8063c588ea5c146106a1578063c66130d7146106c157600080fd5b8063a333818c11610122578063afe9a4ff11610107578063afe9a4ff1461065b578063b042ce941461066e578063bf0a660b1461068157600080fd5b8063a333818c1461060e578063aad1b6171461063b57600080fd5b80639940a11a116101535780639940a11a146105ae5780639f2cd0e4146105ce578063a22cb465146105ee57600080fd5b80638da5cb5b1461057b57806395d89b411461059957600080fd5b80634cd5ca8e1161021c5780636f902516116101d057806379b66eb7116101b557806379b66eb71461051b5780638c4b5a921461053b5780638d6cf8bc1461055b57600080fd5b80636f902516146104e6578063715018a61461050657600080fd5b80636352211e116102015780636352211e1461049157806369bb4dc2146104b15780636ebd773d146104c657600080fd5b80634cd5ca8e14610443578063606428f71461047157600080fd5b8063224157ea1161027357806325dc12641161025857806325dc1264146103e35780633c734234146104035780634909d94e1461042357600080fd5b8063224157ea1461039157806325d8a358146103b157600080fd5b8063081812fc116102a4578063081812fc14610317578063095ea7b31461034f5780630b97be961461037157600080fd5b806301ffc9a7146102c057806306fdde03146102f5575b600080fd5b3480156102cc57600080fd5b506102e06102db366004613d1b565b6107fd565b60405190151581526020015b60405180910390f35b34801561030157600080fd5b5061030a6108c1565b6040516102ec9190613d90565b34801561032357600080fd5b50610337610332366004613da3565b610953565b6040516001600160a01b0390911681526020016102ec565b34801561035b57600080fd5b5061036f61036a366004613dd8565b6109d6565b005b34801561037d57600080fd5b5061036f61038c366004613e18565b610be8565b34801561039d57600080fd5b506103376103ac366004613da3565b610c96565b3480156103bd57600080fd5b506103d16103cc366004613da3565b610d21565b60405160ff90911681526020016102ec565b3480156103ef57600080fd5b5061036f6103fe366004613ef4565b610d2c565b34801561040f57600080fd5b5061036f61041e366004613e18565b610d4c565b34801561042f57600080fd5b5061036f61043e366004613ef4565b610dfa565b34801561044f57600080fd5b5061046361045e366004613f30565b610ea7565b6040519081526020016102ec565b34801561047d57600080fd5b5061046361048c366004613f4b565b610f41565b34801561049d57600080fd5b506103376104ac366004613da3565b6112c1565b3480156104bd57600080fd5b5061046361134c565b3480156104d257600080fd5b5061036f6104e1366004613f4b565b61135c565b3480156104f257600080fd5b50610463610501366004613da3565b611494565b34801561051257600080fd5b5061036f611511565b34801561052757600080fd5b5061036f610536366004613f77565b611577565b34801561054757600080fd5b5061036f610556366004613ef4565b61168d565b34801561056757600080fd5b5061036f610576366004613f4b565b6116a8565b34801561058757600080fd5b50600e546001600160a01b0316610337565b3480156105a557600080fd5b5061030a6117ce565b3480156105ba57600080fd5b506104636105c9366004613faa565b6117dd565b3480156105da57600080fd5b5061036f6105e9366004613ef4565b6118d2565b3480156105fa57600080fd5b5061036f61060936600461404f565b61197f565b34801561061a57600080fd5b5061062e610629366004613da3565b61198e565b6040516102ec919061408b565b34801561064757600080fd5b50610463610656366004613f30565b6119fa565b61036f610669366004613da3565b611a82565b61036f61067c366004613f77565b611d47565b34801561068d57600080fd5b5061046361069c366004613da3565b6120d7565b3480156106ad57600080fd5b506103d16106bc366004613da3565b612154565b3480156106cd57600080fd5b506104636106dc366004613f30565b61215f565b3480156106ed57600080fd5b5061030a6106fc366004613da3565b6121f9565b34801561070d57600080fd5b5061036f61071c366004613f77565b61234f565b34801561072d57600080fd5b506102e061073c3660046140d8565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b34801561077657600080fd5b5061036f610785366004613f77565b612465565b34801561079657600080fd5b506104636107a5366004613da3565b61257b565b3480156107b657600080fd5b5061036f6107c5366004613f30565b6125f8565b3480156107d657600080fd5b5061036f6107e5366004614102565b6126da565b61036f6107f8366004613da3565b6126e5565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061086f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108bb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546108d090614135565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc90614135565b80156109495780601f1061091e57610100808354040283529160200191610949565b820191906000526020600020905b81548152906001019060200180831161092c57829003601f168201915b5050505050905090565b600061095e82612a7a565b6109ba5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b60006109e1826112c1565b905060006109ee83610c96565b9050816001600160a01b0316846001600160a01b03161415610a785760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e0000000000000000000000000000000000000000000060648201526084016109b1565b806001600160a01b0316846001600160a01b03161415610b005760405162461bcd60e51b815260206004820152603360248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206372656174697665206f776e65722e0000000000000000000000000060648201526084016109b1565b336001600160a01b0383161480610b1f5750336001600160a01b038216145b80610b2f5750610b2f823361073c565b80610b3f5750610b3f813361073c565b610bd75760405162461bcd60e51b815260206004820152605b60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f68652028637265617469766529206f776e6572206f662074686520746f6b656e60648201527f206e6f7220617070726f76656420746f206d616e6167652069742e0000000000608482015260a4016109b1565b610be2828585612ab9565b50505050565b610bf23383612b22565b610c8a5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109b1565b610be284848484612c02565b6000818152600360205260408120546001600160a01b0316806108bb5760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e00000000000000000000000060648201526084016109b1565b60006108bb82612c8d565b610d4783838360405180602001604052806000815250610d4c565b505050565b610d563383612d05565b610dee5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109b1565b610be284848484612d72565b610e043382612b22565b610e9c5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109b1565b610d47838383612d89565b60006001600160a01b038216610f255760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e000000000000000000000000000060648201526084016109b1565b506001600160a01b031660009081526007602052604090205490565b6000610f4c83612a7a565b610fa35760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6001600160a01b03821661100d5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b60008381526004602090815260408083206001600160a01b03861684529091529020546110a25760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e0000000000000000000000000000000000000060648201526084016109b1565b60008381526004602090815260408083206001600160a01b03861684529091529020546110d1426103e8614186565b8110156112975760008481526004602090815260408083206001600160a01b03871684529091528120819055805b6000868152600560205260409020548110801561111a575081155b1561126657600086815260056020526040902080546001600160a01b03871691908390811061114b5761114b6141a5565b6000918252602090912001546001600160a01b031614156112545760008681526005602052604090208054611182906001906141bb565b81548110611192576111926141a5565b60009182526020808320909101548883526005909152604090912080546001600160a01b0390921691839081106111cb576111cb6141a5565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039490941693909317909255878152600590915260409020805480611220576112206141d2565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b8061125e816141e8565b9150506110ff565b506001600160a01b03841660009081526008602052604081208054600192906112909084906141bb565b9091555050505b505060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b6000818152600260205260408120546001600160a01b0316806108bb5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e00000000000000000000000000000000000000000060648201526084016109b1565b6000611357600f5490565b905090565b6001600160a01b0381166113fe5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109b1565b600061140983610c96565b9050336001600160a01b038216146114895760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e000060648201526084016109b1565b610d478183856118d2565b600061149f82612a7a565b6114fe5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526012602052604090205490565b600e546001600160a01b0316331461156b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b6115756000612f91565b565b61158082612a7a565b6115df5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b6000811161167b5760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526011602052604090912055565b610d4783838360405180602001604052806000815250610be8565b6001600160a01b0381166117385760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109b1565b6000611743836112c1565b9050336001600160a01b038216146117c35760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e0060648201526084016109b1565b610d47818385610dfa565b6060600180546108d090614135565b600e546000906001600160a01b0316331461183a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b611848600f80546001019055565b6000611853600f5490565b905061185f8782612ff0565b61186a8187876131f6565b61187581858561326f565b604080516001600160a01b038916815260ff86811660208301528516818301526060810183905290517fd3df8e557dd2db4e6ed42c0bc93d8dceae1dae9bd0d8bfa2c69d68759fceab539181900360800190a19695505050505050565b6118dc3382612d05565b6119745760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109b1565b610d478383836133f9565b61198a338383613601565b5050565b6000818152600560209081526040918290208054835181840281018401909452808452606093928301828280156119ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119d0575b50505050509050919050565b60006001600160a01b038216611a665760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b506001600160a01b031660009081526008602052604090205490565b611a8b81612a7a565b611aea5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081815260126020526040902054611b915760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a4016109b1565b600081815260126020526040902054341015611c615760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c4016109b1565b33611cfa5760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109b1565b6000611d0582610c96565b9050611d128133846118d2565b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610d47573d6000803e3d6000fd5b611d5082612a7a565b611daf5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600082815260136020526040902054611e565760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b600042611e656103e884614203565b611e6f91906141bb565b905060008111611ee75760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e000000000000000000000000000060648201526084016109b1565b600083815260136020526040812054611f009083614186565b905080341015611f9e5760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a4016109b1565b6000611fa9856112c1565b90506000611fb686610c96565b9050611fc33387876126da565b806001600160a01b0316826001600160a01b03161415612018576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015612012573d6000803e3d6000fd5b506120cf565b6000612023876136ef565b90506001600160a01b0383166108fc606461203e8482614225565b61204b9060ff1634614186565b6120559190614203565b6040518115909202916000818181858888f1935050505015801561207d573d6000803e3d6000fd5b506001600160a01b0382166108fc606461209a60ff851634614186565b6120a49190614203565b6040518115909202916000818181858888f193505050501580156120cc573d6000803e3d6000fd5b50505b505050505050565b60006120e282612a7a565b6121415760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526013602052604090205490565b60006108bb826136ef565b60006001600160a01b0382166121dd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e0000000000000000000000000000000000000000000060648201526084016109b1565b506001600160a01b031660009081526006602052604090205490565b606061220482612a7a565b61225b5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000828152600d60205260408120805461227490614135565b9050116122e95760405162461bcd60e51b815260206004820152602960248201527f455243313139303a204e6f2066696c65206173736f63696174656420746f207460448201527f686520746f6b656e2e000000000000000000000000000000000000000000000060648201526084016109b1565b60006122f3613767565b905060008151116123135760405180602001604052806000815250612348565b80600d6000858152602001908152602001600020604051602001612338929190614248565b6040516020818303038152906040525b9392505050565b61235882612a7a565b6123b75760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081116124535760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526012602052604090912055565b61246e82612a7a565b6124cd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b600081116125695760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b60009182526013602052604090912055565b600061258682612a7a565b6125e55760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b5060009081526011602052604090205490565b600e546001600160a01b031633146126525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b1565b6001600160a01b0381166126ce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109b1565b6126d781612f91565b50565b610d47838383613776565b6126ee81612a7a565b61274d5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109b1565b6000818152601160205260409020546127f45760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a4016109b1565b6000818152601160205260409020543410156128c45760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c4016109b1565b3361294b5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109b1565b6000612956826112c1565b9050600061296383610c96565b9050612970823385610dfa565b806001600160a01b0316826001600160a01b031614156129bf576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610be2573d6000803e3d6000fd5b60006129ca84612c8d565b90506001600160a01b0383166108fc60646129e58482614225565b6129f29060ff1634614186565b6129fc9190614203565b6040518115909202916000818181858888f19350505050158015612a24573d6000803e3d6000fd5b506001600160a01b0382166108fc6064612a4160ff851634614186565b612a4b9190614203565b6040518115909202916000818181858888f19350505050158015612a73573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906108bb5750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000612b2d82612a7a565b612b845760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000612b8f836112c1565b9050806001600160a01b0316846001600160a01b03161480612bca5750836001600160a01b0316612bbf84610953565b6001600160a01b0316145b80612bfa57506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff165b949350505050565b612c0d848484612d89565b612c1984848484613903565b610be2576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109b1565b6000612c9882612a7a565b612cef5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b506000908152600b602052604090205460ff1690565b6000612d1082612a7a565b612d675760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000612b8f83610c96565b612d7d8484846133f9565b612c1984848484613aa3565b6000612d94826112c1565b9050836001600160a01b0316816001600160a01b031614612e435760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b6001600160a01b038316612ebf5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109b1565b612ecb81600084612ab9565b6001600160a01b0384166000908152600660205260408120805460019290612ef49084906141bb565b90915550506001600160a01b0383166000908152600660205260408120805460019290612f229084906142f9565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661306c5760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e0000000000000000000000000000000000000000000000000060648201526084016109b1565b61307581612a7a565b156130e85760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c726561647920657869737460448201527f732e00000000000000000000000000000000000000000000000000000000000060648201526084016109b1565b6001600160a01b03821660009081526006602052604081208054600192906131119084906142f9565b90915550506001600160a01b038216600090815260076020526040812080546001929061313f9084906142f9565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b6131ff83612a7a565b6132565760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b6000838152600d60205260409020610be2908383613c54565b61327883612a7a565b6132cf5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b60648260ff1611156133495760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e00000000000000000000000000000060648201526084016109b1565b60648160ff1611156133c35760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e00000060648201526084016109b1565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b600061340482610c96565b9050836001600160a01b0316816001600160a01b0316146134b35760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109b1565b6001600160a01b03831661352f5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109b1565b61353b81600084612ab9565b6001600160a01b03841660009081526007602052604081208054600192906135649084906141bb565b90915550506001600160a01b03831660009081526007602052604081208054600192906135929084906142f9565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156136895760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e000000000000000000000000000000000000000060648201526084016109b1565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b60006136fa82612a7a565b6137515760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b506000908152600a602052604090205460ff1690565b6060601080546108d090614135565b6001600160a01b0383166137e05760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109b1565b6137e982612a7a565b6138405760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109b1565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff191683179055908452600890925282208054919290916138b99084906142f9565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b60006001600160a01b0384163b15613a98576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea76190613960903390899088908890600401614311565b6020604051808303816000875af192505050801561399b575060408051601f3d908101601f191682019092526139989181019061434d565b60015b613a4d573d8080156139c9576040519150601f19603f3d011682016040523d82523d6000602084013e6139ce565b606091505b508051613a45576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109b1565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea76100000000000000000000000000000000000000000000000000000000149050612bfa565b506001949350505050565b60006001600160a01b0384163b15613a98576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e090613b00903390899088908890600401614311565b6020604051808303816000875af1925050508015613b3b575060408051601f3d908101601f19168201909252613b389181019061434d565b60015b613c09573d808015613b69576040519150601f19603f3d011682016040523d82523d6000602084013e613b6e565b606091505b508051613a455760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a4016109b1565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e000000000000000000000000000000000000000000000000000000000149050612bfa565b828054613c6090614135565b90600052602060002090601f016020900481019282613c825760008555613cc8565b82601f10613c9b5782800160ff19823516178555613cc8565b82800160010185558215613cc8579182015b82811115613cc8578235825591602001919060010190613cad565b50613cd4929150613cd8565b5090565b5b80821115613cd45760008155600101613cd9565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146126d757600080fd5b600060208284031215613d2d57600080fd5b813561234881613ced565b60005b83811015613d53578181015183820152602001613d3b565b83811115610be25750506000910152565b60008151808452613d7c816020860160208601613d38565b601f01601f19169290920160200192915050565b6020815260006123486020830184613d64565b600060208284031215613db557600080fd5b5035919050565b80356001600160a01b0381168114613dd357600080fd5b919050565b60008060408385031215613deb57600080fd5b613df483613dbc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613e2e57600080fd5b613e3785613dbc565b9350613e4560208601613dbc565b925060408501359150606085013567ffffffffffffffff80821115613e6957600080fd5b818701915087601f830112613e7d57600080fd5b813581811115613e8f57613e8f613e02565b604051601f8201601f19908116603f01168101908382118183101715613eb757613eb7613e02565b816040528281528a6020848701011115613ed057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215613f0957600080fd5b613f1284613dbc565b9250613f2060208501613dbc565b9150604084013590509250925092565b600060208284031215613f4257600080fd5b61234882613dbc565b60008060408385031215613f5e57600080fd5b82359150613f6e60208401613dbc565b90509250929050565b60008060408385031215613f8a57600080fd5b50508035926020909101359150565b803560ff81168114613dd357600080fd5b600080600080600060808688031215613fc257600080fd5b613fcb86613dbc565b9450602086013567ffffffffffffffff80821115613fe857600080fd5b818801915088601f830112613ffc57600080fd5b81358181111561400b57600080fd5b89602082850101111561401d57600080fd5b60208301965080955050505061403560408701613f99565b915061404360608701613f99565b90509295509295909350565b6000806040838503121561406257600080fd5b61406b83613dbc565b91506020830135801515811461408057600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156140cc5783516001600160a01b0316835292840192918401916001016140a7565b50909695505050505050565b600080604083850312156140eb57600080fd5b6140f483613dbc565b9150613f6e60208401613dbc565b60008060006060848603121561411757600080fd5b61412084613dbc565b95602085013595506040909401359392505050565b600181811c9082168061414957607f821691505b6020821081141561416a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156141a0576141a0614170565b500290565b634e487b7160e01b600052603260045260246000fd5b6000828210156141cd576141cd614170565b500390565b634e487b7160e01b600052603160045260246000fd5b60006000198214156141fc576141fc614170565b5060010190565b60008261422057634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff84168082101561423f5761423f614170565b90039392505050565b60008351602061425b8285838901613d38565b845491840191600090600181811c908083168061427957607f831692505b85831081141561429757634e487b7160e01b85526022600452602485fd5b8080156142ab57600181146142bc576142e9565b60ff198516885283880195506142e9565b60008b81526020902060005b858110156142e15781548a8201529084019088016142c8565b505083880195505b50939a9950505050505050505050565b6000821982111561430c5761430c614170565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526143436080830184613d64565b9695505050505050565b60006020828403121561435f57600080fd5b815161234881613ced56fea2646970667358221220eda7415f7f67227c41b331050aec424e7d3d1e6ccd60a73c5585762579344af564736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2189:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "210:821:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "259:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "268:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "271:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "261:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "261:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "261:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "238:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "246:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "253:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "230:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "220:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "284:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "300:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "294:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:13:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "288:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "316:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "334:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "338:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "342:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:18:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "320:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "367:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "369:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "369:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "369:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "363:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "356:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "353:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "398:17:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:20",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:7:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "402:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "424:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "444:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "438:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "428:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "478:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "502:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "498:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "498:13:20"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "494:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "490:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:31:20"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "523:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "486:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "460:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "586:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "588:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "588:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "588:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "545:10:20"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "542:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "565:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "577:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "562:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "539:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "536:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "628:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "655:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "663:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "648:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "648:18:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "675:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "685:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "679:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "735:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "744:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "737:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "737:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "737:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "712:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "720:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "708:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "708:15:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "725:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "704:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "704:24:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "730:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "701:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "698:53:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "760:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "769:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "764:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "825:87:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "854:6:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "862:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "850:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "850:14:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "846:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:23:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "885:6:20"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:1:20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "881:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "881:14:20"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "877:23:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "871:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "871:30:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "839:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:63:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "839:63:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "790:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "793:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "787:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:9:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "797:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "799:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "808:1:20"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "811:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "804:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "799:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "783:3:20",
                    "statements": []
                  },
                  "src": "779:133:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "942:59:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "971:6:20"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "979:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "967:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "967:15:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "963:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:24:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:35:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:35:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "927:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "930:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "924:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "921:80:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:15:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1019:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1010:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "184:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "192:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "200:5:20",
                "type": ""
              }
            ],
            "src": "146:885:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:621:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1227:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1236:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1239:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1229:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1229:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1229:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1191:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1252:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1272:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:16:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1256:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1291:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1305:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1305:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1317:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1301:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:18:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1295:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1346:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1355:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1358:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1348:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1348:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1342:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1331:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1328:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1371:71:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1414:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1425:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1434:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1381:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:61:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1371:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1451:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1488:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1473:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1467:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1455:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1533:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1507:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1517:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:20"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1600:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1585:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1611:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1556:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1628:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1665:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1644:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "1632:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1707:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1710:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "1684:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1694:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1681:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1678:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:20"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "1777:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1788:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1733:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1723:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1131:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1142:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1154:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1162:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1170:6:20",
                "type": ""
              }
            ],
            "src": "1036:766:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:325:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1886:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1889:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1933:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1939:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1907:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1980:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1982:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1996:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1992:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1982:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1960:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1950:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2070:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2098:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2094:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2094:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2135:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2128:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2156:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2156:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2156:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2026:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2049:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2046:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2023:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2020:161:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1842:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1851:6:20",
                "type": ""
              }
            ],
            "src": "1807:380:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30118:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:133:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "81:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "92:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "99:66:20",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "88:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "88:78:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "78:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "78:89:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "71:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "71:97:20"
                  },
                  "nodeType": "YulIf",
                  "src": "68:117:20"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "47:5:20",
                "type": ""
              }
            ],
            "src": "14:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "311:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "313:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "313:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "313:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "286:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "295:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "282:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "282:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "307:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "278:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "278:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "275:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "336:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "349:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "340:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "405:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "381:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "381:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "430:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "420:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "231:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "242:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "254:6:20",
                "type": ""
              }
            ],
            "src": "196:245:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "551:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "574:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "551:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "611:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "611:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "604:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "586:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "521:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "532:4:20",
                "type": ""
              }
            ],
            "src": "446:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "710:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "705:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "791:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "791:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "814:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "810:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "804:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "804:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "784:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "784:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "731:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "734:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "728:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "742:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "744:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "753:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "749:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "749:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "744:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "724:3:20",
                    "statements": []
                  },
                  "src": "720:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "859:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "877:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "868:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "868:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "861:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "861:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "861:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "848:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "851:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "845:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "842:48:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "669:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "674:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "679:6:20",
                "type": ""
              }
            ],
            "src": "638:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:267:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "961:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "981:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "975:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:12:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "965:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1003:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "996:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1050:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:16:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1068:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1073:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:14:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1080:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1024:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1024:63:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:116:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1111:3:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1120:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1120:15:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1137:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1116:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1116:88:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:98:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1103:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:109:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1096:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "935:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "943:3:20",
                "type": ""
              }
            ],
            "src": "901:317:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1344:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1361:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1372:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1354:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1354:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1354:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1384:53:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1410:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1392:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:45:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1384:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1313:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1324:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1335:4:20",
                "type": ""
              }
            ],
            "src": "1223:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:110:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1539:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1548:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1560:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1528:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1589:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1612:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1599:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:20",
                "type": ""
              }
            ],
            "src": "1448:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:125:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1744:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1786:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1801:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:74:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1714:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1725:4:20",
                "type": ""
              }
            ],
            "src": "1633:226:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1913:147:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1945:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1932:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1923:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2038:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2047:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2040:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2040:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2040:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1974:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1985:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1992:42:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1981:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1981:54:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1971:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:65:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:73:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1961:93:20"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1892:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1903:5:20",
                "type": ""
              }
            ],
            "src": "1864:196:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2198:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2210:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2200:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2200:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2200:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2173:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2182:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2165:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2162:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2252:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2233:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2271:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2298:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2309:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2294:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2294:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2281:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2281:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2110:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2121:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2133:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2141:6:20",
                "type": ""
              }
            ],
            "src": "2065:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2373:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2376:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2463:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2494:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2324:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:1067:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2690:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2699:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2702:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2692:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2692:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2692:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2664:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2656:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2656:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2653:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2715:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2725:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2763:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2807:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2792:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2773:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2830:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2820:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2885:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2875:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2926:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2936:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2930:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2981:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2990:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2983:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2983:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2969:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2966:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2963:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3006:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3020:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3031:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3016:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3016:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3010:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3086:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3095:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3088:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3088:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3088:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3065:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3061:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3061:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3076:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3047:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3111:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3134:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3121:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:16:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3115:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3160:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3162:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3162:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3162:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3152:2:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3149:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3146:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3191:76:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3201:66:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3195:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3276:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3290:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3280:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3308:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3330:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3354:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3358:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3350:13:20"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3365:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3346:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3370:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3342:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3342:31:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "3375:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3312:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3438:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3440:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3440:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3440:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3397:10:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3409:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3394:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3417:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3429:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3414:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3391:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3388:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3476:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3480:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3507:6:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3515:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:18:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3541:2:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3545:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3537:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3537:11:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3550:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:20:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3555:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3530:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3527:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3606:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3602:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3623:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3627:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:11:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3632:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3589:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3589:46:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3589:46:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3659:6:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3667:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3655:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3655:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3651:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:24:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:35:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3688:16:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3698:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3688:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2585:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2596:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2608:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2616:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2624:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2632:6:20",
                "type": ""
              }
            ],
            "src": "2513:1197:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3812:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3822:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3834:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3845:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3830:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3822:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3864:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3879:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3887:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3875:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3875:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3857:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3857:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3857:36:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3781:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3792:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3803:4:20",
                "type": ""
              }
            ],
            "src": "3715:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4008:224:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4054:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4063:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4066:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4056:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4056:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4056:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4029:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4038:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4025:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4025:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4050:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4021:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4018:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4079:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4108:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4089:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4089:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4079:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4127:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4160:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4171:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4156:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4156:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4137:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4137:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4127:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4184:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4211:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4222:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4207:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4207:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4194:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4184:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3958:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3969:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3981:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3989:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3997:6:20",
                "type": ""
              }
            ],
            "src": "3904:328:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4307:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4353:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4362:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4365:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4355:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4355:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4355:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4328:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4337:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4324:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4324:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4349:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4320:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4320:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4317:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4378:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4407:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4388:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4378:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4273:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4284:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4296:6:20",
                "type": ""
              }
            ],
            "src": "4237:186:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4529:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4539:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4551:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4562:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4547:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4547:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4539:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4581:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4592:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4574:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4574:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4574:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4498:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4509:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4520:4:20",
                "type": ""
              }
            ],
            "src": "4428:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4697:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4743:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4752:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4755:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4745:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4745:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4745:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4718:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4727:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4714:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4714:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4739:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4710:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4710:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4707:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4768:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4791:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4778:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4768:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4810:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4843:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4854:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4820:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4820:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4810:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4655:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4666:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4678:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4686:6:20",
                "type": ""
              }
            ],
            "src": "4610:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4956:161:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5002:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5011:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5014:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5004:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5004:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5004:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4977:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4973:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4973:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4998:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4969:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4966:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5027:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5050:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5037:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5037:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5027:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5069:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5096:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5107:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5092:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5092:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5079:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5069:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4914:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4925:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4937:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4945:6:20",
                "type": ""
              }
            ],
            "src": "4869:248:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5169:109:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5179:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5201:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5188:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5188:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5179:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5256:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5265:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5268:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5258:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5258:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5258:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5230:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5241:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5248:4:20",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5237:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5237:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5227:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5227:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5220:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5217:55:20"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5148:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5159:5:20",
                "type": ""
              }
            ],
            "src": "5122:156:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5420:670:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5467:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5476:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5479:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5469:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5469:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5469:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5441:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5450:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5437:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5437:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5462:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5433:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5433:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5430:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5492:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5521:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5502:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5502:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5492:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5540:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5571:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5582:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5567:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5567:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5554:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5554:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5544:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5595:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5605:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5599:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5650:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5659:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5662:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5652:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5652:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5652:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5638:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5646:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5635:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5635:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5632:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5675:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5689:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5700:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5685:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5679:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5755:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5764:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5767:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5757:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5757:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5757:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5734:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5738:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5730:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5730:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5745:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5726:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5726:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5716:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5780:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5807:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5794:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:16:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5784:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5837:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5846:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5849:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5839:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5839:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5839:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5825:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5833:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5822:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5819:34:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5903:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5912:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5915:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5905:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5905:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5905:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5876:2:20"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5880:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5872:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5872:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5889:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5868:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5868:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5894:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5865:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5865:37:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5862:57:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5928:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5942:2:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5946:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5938:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5938:11:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5928:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5958:16:20",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "5968:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5958:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5983:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6014:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6025:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6010:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6010:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "5993:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5983:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6038:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6069:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6080:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "6048:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6038:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5354:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5365:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5377:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5385:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5393:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5401:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5409:6:20",
                "type": ""
              }
            ],
            "src": "5283:807:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6179:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6225:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6234:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6237:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6227:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6227:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6227:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6200:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6209:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6196:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6196:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6221:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6189:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6250:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6279:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6260:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6250:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6298:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6328:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6339:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6324:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6324:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6311:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6311:32:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6302:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6396:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6405:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6408:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6398:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6398:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6398:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6365:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6386:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6379:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6379:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6372:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6372:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6362:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6362:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6355:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6355:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6352:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6421:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6431:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6421:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6137:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6148:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6160:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6168:6:20",
                "type": ""
              }
            ],
            "src": "6095:347:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6598:530:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6608:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6618:2:20",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6612:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6629:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6647:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6658:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6643:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6643:18:20"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6633:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6677:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6688:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6670:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6670:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6700:17:20",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6711:6:20"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6704:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6726:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6746:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6740:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6740:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6730:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6769:6:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6777:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6762:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6762:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6762:22:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6793:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6804:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6815:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6800:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6800:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6793:3:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6827:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6845:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6853:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6841:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:15:20"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6831:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6865:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6874:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6869:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6933:169:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6954:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6969:6:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6963:5:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6963:13:20"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6978:42:20",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6959:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6959:62:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6947:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6947:75:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6947:75:20"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7035:19:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7046:3:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7051:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7042:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7042:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7035:3:20"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7067:25:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7081:6:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7089:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7077:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7077:15:20"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7067:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6895:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6898:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6892:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6892:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6906:18:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6908:14:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6917:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6920:1:20",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6913:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6913:9:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6908:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6888:3:20",
                    "statements": []
                  },
                  "src": "6884:218:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7111:11:20",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7119:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7111:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6567:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6578:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6589:4:20",
                "type": ""
              }
            ],
            "src": "6447:681:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7220:173:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7266:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7275:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7278:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7268:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7268:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7268:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7241:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7250:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7237:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7237:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7262:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7233:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7233:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7230:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7291:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7320:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7301:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7301:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7291:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7339:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7372:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7383:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7368:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7368:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7349:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7349:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7339:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7178:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7189:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7201:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7209:6:20",
                "type": ""
              }
            ],
            "src": "7133:260:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7502:218:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7548:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7557:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7560:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7550:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7550:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7550:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7523:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7532:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7519:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7519:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7544:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7515:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7515:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7512:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7573:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7602:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7583:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7583:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7621:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7648:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7659:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7644:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7644:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7631:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7631:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7621:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7672:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7699:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7710:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7695:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7695:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7682:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7672:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7452:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7463:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7475:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7483:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7491:6:20",
                "type": ""
              }
            ],
            "src": "7398:322:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7780:382:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7790:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7804:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7807:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "7800:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7800:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7790:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7821:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7851:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7857:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7847:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7847:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7825:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7898:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7900:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7914:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7922:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7910:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7910:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7900:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7878:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7871:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7871:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7868:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7988:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8009:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8012:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8002:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8002:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8002:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8110:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8113:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8103:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8103:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8103:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8138:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8141:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8131:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8131:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8131:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7944:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7967:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7975:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7964:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7964:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7941:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7941:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7938:218:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7760:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7769:6:20",
                "type": ""
              }
            ],
            "src": "7725:437:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8341:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8358:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8369:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8351:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8351:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8392:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8403:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8388:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8388:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8408:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8381:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8381:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8431:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8442:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8427:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8427:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20646f6573206e6f742065786973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8447:34:20",
                        "type": "",
                        "value": "ERC1190: The token does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8420:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8420:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8420:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8502:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8513:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8498:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8498:18:20"
                      },
                      {
                        "hexValue": "742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8518:4:20",
                        "type": "",
                        "value": "t."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8491:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8491:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8532:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8544:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8555:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8540:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8540:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8532:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8318:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8332:4:20",
                "type": ""
              }
            ],
            "src": "8167:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8744:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8761:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8772:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8754:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8754:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8754:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8795:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8806:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8791:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8791:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8811:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8784:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8784:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8784:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8834:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8845:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8830:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8830:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8850:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8823:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8823:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8823:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8905:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8916:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8901:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8901:18:20"
                      },
                      {
                        "hexValue": "656e74206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8921:12:20",
                        "type": "",
                        "value": "ent owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8894:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8894:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8894:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8943:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8955:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8966:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8951:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8951:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8943:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8721:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8735:4:20",
                "type": ""
              }
            ],
            "src": "8570:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9155:241:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9172:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9183:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9165:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9165:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9165:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9206:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9217:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9202:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9202:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9222:2:20",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9195:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9195:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9195:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9245:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9256:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9241:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9241:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9261:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9234:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9234:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9234:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9316:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9327:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9312:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9312:18:20"
                      },
                      {
                        "hexValue": "656e74206372656174697665206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9332:21:20",
                        "type": "",
                        "value": "ent creative owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9305:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9305:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9305:49:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9363:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9375:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9386:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9371:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9371:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9363:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe8c7dd15717b57b6e8bc8026ad82732e0aecd45fba1c522abf8cccd0cfa50f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9132:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9146:4:20",
                "type": ""
              }
            ],
            "src": "8981:415:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9575:321:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9592:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9603:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9585:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9585:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9585:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9626:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9637:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9622:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9622:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9642:2:20",
                        "type": "",
                        "value": "91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9615:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9615:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9615:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9665:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9676:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9661:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9661:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9681:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9654:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9654:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9654:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9736:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9747:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9732:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9732:18:20"
                      },
                      {
                        "hexValue": "68652028637265617469766529206f776e6572206f662074686520746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9752:34:20",
                        "type": "",
                        "value": "he (creative) owner of the token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9725:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9725:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9725:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9807:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9818:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9803:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9803:19:20"
                      },
                      {
                        "hexValue": "206e6f7220617070726f76656420746f206d616e6167652069742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9824:29:20",
                        "type": "",
                        "value": " nor approved to manage it."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9796:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9796:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9796:58:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9863:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9875:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9886:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9871:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9871:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9863:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9b32d7df821f88f28ae53321015ec4ac9e68ab5a73ee407e87b8c3426f268d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9552:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9566:4:20",
                "type": ""
              }
            ],
            "src": "9401:495:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10075:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10092:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10103:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10085:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10085:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10085:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10126:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10137:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10122:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10122:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10142:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10115:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10115:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10115:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10165:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10176:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10161:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10161:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10181:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10154:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10154:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10154:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10236:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10247:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10232:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10232:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206e6f7220617070726f76656420746f206d616e61676520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10252:34:20",
                        "type": "",
                        "value": "he owner nor approved to manage "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10225:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10225:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10225:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10307:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10318:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10303:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10303:19:20"
                      },
                      {
                        "hexValue": "74686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10324:12:20",
                        "type": "",
                        "value": "the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10296:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10296:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10296:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10346:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10358:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10369:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10354:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10354:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10346:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10052:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10066:4:20",
                "type": ""
              }
            ],
            "src": "9901:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10558:242:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10575:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10586:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10568:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10568:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10609:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10620:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10605:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10605:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10625:2:20",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10598:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10598:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10598:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10648:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10659:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10644:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10644:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206372656174697665206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10664:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has creative own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10637:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10637:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10637:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10719:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10730:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10715:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10715:18:20"
                      },
                      {
                        "hexValue": "657273686970206f76657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10735:22:20",
                        "type": "",
                        "value": "ership over tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10767:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10779:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10790:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10775:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10775:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10767:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10535:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10549:4:20",
                "type": ""
              }
            ],
            "src": "10384:416:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10979:313:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10996:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11007:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10989:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10989:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10989:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11030:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11041:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11026:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11026:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11046:2:20",
                        "type": "",
                        "value": "83"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11019:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11019:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11019:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11069:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11080:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11065:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11065:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11085:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11058:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11058:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11058:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11140:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11151:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11136:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11136:18:20"
                      },
                      {
                        "hexValue": "6865206372656174697665206f776e6572206e6f7220617070726f7665642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11156:34:20",
                        "type": "",
                        "value": "he creative owner nor approved t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11129:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11129:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11129:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11211:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11222:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11207:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11207:19:20"
                      },
                      {
                        "hexValue": "6f206d616e6167652074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11228:21:20",
                        "type": "",
                        "value": "o manage the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11200:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11200:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11200:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11259:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11271:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11282:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11267:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11267:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11259:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10956:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10970:4:20",
                "type": ""
              }
            ],
            "src": "10805:487:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11471:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11488:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11499:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11481:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11481:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11481:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11522:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11533:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11518:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11518:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11538:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11511:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11511:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11511:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11561:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11572:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11557:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11557:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2063726561746976654f776e65722063616e6e6f74206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11577:34:20",
                        "type": "",
                        "value": "ERC1190: creativeOwner cannot be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11550:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11550:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11550:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11632:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11643:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11628:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11628:18:20"
                      },
                      {
                        "hexValue": "20746865207a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11648:20:20",
                        "type": "",
                        "value": " the zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11621:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11621:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11621:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11678:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11690:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11701:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11686:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11686:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11678:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11448:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11462:4:20",
                "type": ""
              }
            ],
            "src": "11297:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11890:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11907:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11918:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11900:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11900:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11900:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11941:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11952:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11937:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11937:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11957:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11930:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11930:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11930:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11980:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11991:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11976:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11976:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2072656e7465722063616e6e6f7420626520746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11996:34:20",
                        "type": "",
                        "value": "ERC1190: renter cannot be the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11969:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11969:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11969:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12051:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12062:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12047:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12047:18:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12067:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12040:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12040:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12090:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12102:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12113:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12098:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12098:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12090:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11867:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11881:4:20",
                "type": ""
              }
            ],
            "src": "11716:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12302:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12319:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12330:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12312:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12312:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12312:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12353:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12364:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12349:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12349:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12369:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12342:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12342:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12342:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12392:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12403:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12388:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12388:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652072656e74657220686173206e6f742072656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12408:34:20",
                        "type": "",
                        "value": "ERC1190: The renter has not rent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12381:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12381:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12381:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12463:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12474:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12459:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12459:18:20"
                      },
                      {
                        "hexValue": "65642074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12479:15:20",
                        "type": "",
                        "value": "ed the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12452:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12452:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12452:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12504:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12516:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12527:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12512:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12512:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12504:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12279:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12293:4:20",
                "type": ""
              }
            ],
            "src": "12128:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12574:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12591:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12594:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12584:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12584:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12584:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12688:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12691:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12681:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12681:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12681:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12712:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12715:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12705:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12705:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12705:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12542:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12783:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12902:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12904:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12904:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12904:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12814:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12807:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12807:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12800:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12800:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12822:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12829:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12897:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12825:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12825:74:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12819:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12819:81:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12796:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12796:105:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12793:131:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12933:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12948:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12951:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12944:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12944:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12933:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12762:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12765:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12771:7:20",
                "type": ""
              }
            ],
            "src": "12731:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12996:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13013:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13016:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13006:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13006:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13006:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13110:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13113:4:20",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13103:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13103:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13103:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13134:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13137:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13127:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13127:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13127:15:20"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "12964:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13202:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13224:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13226:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13226:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13226:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13218:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13221:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13215:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13215:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "13212:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13255:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13267:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13270:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13263:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13263:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13255:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13184:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13187:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13193:4:20",
                "type": ""
              }
            ],
            "src": "13153:125:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13315:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13332:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13335:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13325:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13325:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13325:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13429:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13432:4:20",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13422:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13422:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13422:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13453:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13456:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13446:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13446:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13446:15:20"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "13283:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13519:148:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13610:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13612:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13612:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13612:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13535:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13542:66:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13532:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13532:77:20"
                  },
                  "nodeType": "YulIf",
                  "src": "13529:103:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13641:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13652:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13659:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13648:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13648:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "13641:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13501:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13511:3:20",
                "type": ""
              }
            ],
            "src": "13472:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13846:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13863:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13874:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13856:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13856:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13856:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13897:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13908:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13893:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13893:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13913:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13886:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13886:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13886:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13936:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13947:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13932:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13932:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206f776e657273686970206f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13952:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has ownership ov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13925:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13925:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13925:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14007:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14018:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14003:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14003:18:20"
                      },
                      {
                        "hexValue": "657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14023:13:20",
                        "type": "",
                        "value": "er tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13996:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13996:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14046:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14058:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14069:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14054:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14054:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14046:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13823:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13837:4:20",
                "type": ""
              }
            ],
            "src": "13672:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14258:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14275:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14286:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14268:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14268:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14268:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14309:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14320:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14305:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14305:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14325:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14298:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14298:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14298:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14348:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14359:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14344:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14344:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14364:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14337:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14337:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14337:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14419:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14430:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14415:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14415:18:20"
                      },
                      {
                        "hexValue": "20746865206372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14435:34:20",
                        "type": "",
                        "value": " the creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14408:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14408:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14408:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14490:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14501:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14486:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14486:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14507:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14479:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14479:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14479:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14529:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14541:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14552:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14537:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14537:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14529:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14235:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14249:4:20",
                "type": ""
              }
            ],
            "src": "14084:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14741:252:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14758:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14769:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14751:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14751:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14751:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14792:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14803:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14788:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14788:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14808:2:20",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14781:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14781:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14781:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14831:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14842:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14827:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14827:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14847:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14820:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14820:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14820:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14913:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14898:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14918:32:20",
                        "type": "",
                        "value": " not own the creative license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14891:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14891:60:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14891:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14960:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14972:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14983:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14968:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14968:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14960:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14718:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14732:4:20",
                "type": ""
              }
            ],
            "src": "14567:426:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15172:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15189:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15200:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15182:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15182:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15182:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15223:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15234:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15219:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15219:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15239:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15212:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15212:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15212:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15262:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15273:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15258:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15258:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15278:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The token does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15251:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15251:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15251:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15333:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15344:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15329:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15329:18:20"
                      },
                      {
                        "hexValue": "6e6f742065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15349:12:20",
                        "type": "",
                        "value": "not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15322:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15322:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15322:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15371:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15383:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15394:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15379:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15379:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15371:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15149:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15163:4:20",
                "type": ""
              }
            ],
            "src": "14998:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15583:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15600:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15611:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15593:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15593:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15593:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15634:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15645:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15630:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15630:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15650:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15623:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15623:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15623:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15673:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15684:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15669:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15669:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15689:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15662:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15662:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15662:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15733:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15745:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15756:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15741:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15741:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15733:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15560:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15574:4:20",
                "type": ""
              }
            ],
            "src": "15409:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15944:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15961:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15972:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15954:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15954:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15954:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15995:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16006:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15991:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15991:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16011:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15984:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15984:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15984:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16034:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16045:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16030:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16030:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16050:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16023:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16023:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16023:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16105:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16116:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16101:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16101:18:20"
                      },
                      {
                        "hexValue": "6963656e736520636f7374206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16121:34:20",
                        "type": "",
                        "value": "icense cost must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16094:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16094:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16094:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16176:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16187:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16172:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16172:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16193:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16165:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16165:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16165:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16208:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16220:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16231:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16216:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16216:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16208:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15921:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15935:4:20",
                "type": ""
              }
            ],
            "src": "15770:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16420:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16437:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16448:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16430:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16430:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16430:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16471:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16482:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16467:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16467:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16487:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16460:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16460:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16460:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16510:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16521:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16506:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16506:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16526:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16499:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16499:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16499:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16581:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16592:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16577:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16577:18:20"
                      },
                      {
                        "hexValue": "20746865206f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16597:34:20",
                        "type": "",
                        "value": " the ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16570:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16570:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16570:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16652:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16663:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16648:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16648:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16669:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16641:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16641:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16641:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16692:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16704:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16715:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16700:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16700:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16692:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16397:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16411:4:20",
                "type": ""
              }
            ],
            "src": "16246:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16904:253:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16921:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16932:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16914:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16914:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16914:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16955:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16966:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16951:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16951:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16971:2:20",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16944:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16944:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16944:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16994:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17005:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16990:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16990:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17010:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16983:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16983:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16983:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17065:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17076:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17061:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17061:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17081:33:20",
                        "type": "",
                        "value": " not own the ownership license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17054:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17054:61:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17054:61:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17124:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17136:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17147:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17132:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17132:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17124:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16881:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16895:4:20",
                "type": ""
              }
            ],
            "src": "16730:427:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17339:277:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17349:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17361:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17372:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17357:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17357:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17349:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17392:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17407:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17415:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17403:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17403:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17385:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17385:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17385:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17479:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17490:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17475:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17475:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17499:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17507:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17495:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17495:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17468:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17468:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17468:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17533:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17544:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17529:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17529:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "17553:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17561:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17549:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17549:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17522:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17522:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17522:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17587:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17598:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17583:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17583:18:20"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17603:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17576:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17576:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17576:34:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17284:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17295:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17303:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17311:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17319:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17330:4:20",
                "type": ""
              }
            ],
            "src": "17162:454:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17795:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17812:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17823:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17805:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17805:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17805:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17846:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17857:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17842:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17842:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17862:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17835:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17835:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17835:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17885:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17896:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17881:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17881:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17901:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17874:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17874:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17874:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17956:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17967:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17952:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17952:18:20"
                      },
                      {
                        "hexValue": "63656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17972:34:20",
                        "type": "",
                        "value": "cense of this token cannot be tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17945:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17945:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17945:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18027:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18038:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18023:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18023:19:20"
                      },
                      {
                        "hexValue": "616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18044:12:20",
                        "type": "",
                        "value": "ansferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18016:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18016:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18016:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18066:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18078:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18089:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18074:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18074:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18066:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17772:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17786:4:20",
                "type": ""
              }
            ],
            "src": "17621:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18278:378:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18295:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18306:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18288:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18288:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18288:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18329:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18340:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18325:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18325:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18345:3:20",
                        "type": "",
                        "value": "107"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18318:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18318:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18318:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18369:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18380:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18365:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18365:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18385:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18358:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18358:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18358:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18440:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18451:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18436:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18436:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18456:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18429:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18429:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18429:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18511:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18522:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18507:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18507:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206372656174697665206c6963656e7365206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18528:34:20",
                        "type": "",
                        "value": "taining the creative license of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18500:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18500:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18500:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18583:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18594:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18579:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18579:19:20"
                      },
                      {
                        "hexValue": "7468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18600:13:20",
                        "type": "",
                        "value": "this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18572:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18572:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18572:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18623:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18635:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18646:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18631:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18631:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18623:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18255:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18269:4:20",
                "type": ""
              }
            ],
            "src": "18104:552:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18835:295:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18852:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18863:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18845:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18845:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18845:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18886:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18897:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18882:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18882:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18902:2:20",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18875:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18875:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18875:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18925:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18936:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18921:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18921:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18941:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The asset relat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18914:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18914:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18914:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18996:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19007:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18992:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18992:18:20"
                      },
                      {
                        "hexValue": "656420746f207468697320746f6b656e206973206e6f742072656e7461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19012:34:20",
                        "type": "",
                        "value": "ed to this token is not rentable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18985:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18985:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18985:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19067:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19078:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19063:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19063:19:20"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19084:3:20",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19056:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19056:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19056:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19097:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19109:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19120:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19105:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19105:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19097:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18812:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18826:4:20",
                "type": ""
              }
            ],
            "src": "18661:469:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19181:228:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19212:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19233:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19236:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19226:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19226:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19226:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19334:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19337:4:20",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19327:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19327:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19327:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19362:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19365:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19355:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19355:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19355:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19201:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19194:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19194:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "19191:189:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19389:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19398:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19401:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19394:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19394:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19389:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19166:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19169:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19175:1:20",
                "type": ""
              }
            ],
            "src": "19135:274:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19588:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19605:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19616:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19598:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19598:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19598:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19639:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19650:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19635:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19635:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19655:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19628:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19628:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19628:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19678:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19689:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19674:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19674:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19694:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19667:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19667:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19667:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19749:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19760:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19745:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19745:18:20"
                      },
                      {
                        "hexValue": "206d75737420626520706f7369746976652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19765:20:20",
                        "type": "",
                        "value": " must be positive."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19738:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19738:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19738:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19795:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19807:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19818:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19803:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19803:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19795:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19565:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19579:4:20",
                "type": ""
              }
            ],
            "src": "19414:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20007:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20024:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20035:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20017:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20017:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20017:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20058:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20069:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20054:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20054:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20074:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20047:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20047:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20047:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20097:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20108:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20093:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20093:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20113:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20086:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20086:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20086:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20168:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20179:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20164:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20164:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420746f20636f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20184:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient to cov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20157:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20157:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20157:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20239:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20250:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20235:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20235:19:20"
                      },
                      {
                        "hexValue": "6572207468652072656e7420657870656e7365732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20256:23:20",
                        "type": "",
                        "value": "er the rent expenses."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20228:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20228:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20228:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20289:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20301:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20312:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20297:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20297:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20289:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19984:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19998:4:20",
                "type": ""
              }
            ],
            "src": "19833:489:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20374:148:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20384:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20399:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20402:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20395:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20395:12:20"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "20388:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20416:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20431:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20434:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20427:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20427:12:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "20420:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20464:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20466:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20466:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20466:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "20454:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "20459:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20451:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20451:12:20"
                  },
                  "nodeType": "YulIf",
                  "src": "20448:38:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20495:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "20507:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "20512:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20503:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20503:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20495:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20356:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20359:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20365:4:20",
                "type": ""
              }
            ],
            "src": "20327:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20701:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20718:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20729:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20711:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20711:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20711:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20752:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20763:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20748:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20748:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20768:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20741:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20741:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20741:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20791:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20802:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20787:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20787:18:20"
                      },
                      {
                        "hexValue": "455243313139303a206f776e65722063616e6e6f7420626520746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20807:34:20",
                        "type": "",
                        "value": "ERC1190: owner cannot be the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20780:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20780:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20780:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20862:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20873:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20858:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20858:18:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20878:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20851:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20851:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20851:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20900:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20912:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20923:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20908:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20908:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20900:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20678:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20692:4:20",
                "type": ""
              }
            ],
            "src": "20527:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21112:231:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21129:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21140:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21122:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21122:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21122:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21163:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21174:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21159:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21159:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21179:2:20",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21152:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21152:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21152:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21202:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21213:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21198:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f2066696c65206173736f63696174656420746f2074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21218:34:20",
                        "type": "",
                        "value": "ERC1190: No file associated to t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21191:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21191:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21191:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21273:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21284:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21269:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21269:18:20"
                      },
                      {
                        "hexValue": "686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21289:11:20",
                        "type": "",
                        "value": "he token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21262:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21262:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21262:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21310:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21322:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21333:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21318:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21318:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21310:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21089:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21103:4:20",
                "type": ""
              }
            ],
            "src": "20938:405:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21404:65:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21421:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "21424:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21414:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21414:14:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21414:14:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21437:26:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21455:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21458:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "21445:9:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21445:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "21437:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "21387:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "21395:4:20",
                "type": ""
              }
            ],
            "src": "21348:121:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21658:1266:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21668:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21688:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21682:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21682:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21672:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21704:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21714:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21708:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21753:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21761:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21749:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21749:15:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21766:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21771:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21727:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21727:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21727:51:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21787:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21804:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21809:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21800:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21800:16:20"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "21791:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21825:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21836:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "ret",
                      "nodeType": "YulTypedName",
                      "src": "21829:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21846:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21869:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "21863:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21863:13:20"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "21850:9:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21885:19:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "21901:3:20"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "21889:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21913:11:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21923:1:20",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21917:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21933:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21949:2:20"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "21953:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "21945:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21945:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "length_1",
                      "nodeType": "YulIdentifier",
                      "src": "21933:8:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21972:44:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "22002:9:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "22013:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21998:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21998:18:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "21976:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22063:55:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22077:31:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "22093:8:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22103:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "22089:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22089:19:20"
                        },
                        "variableNames": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "22077:8:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "22035:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22028:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22028:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "22025:93:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22179:172:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22200:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22205:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22193:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22193:90:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22193:90:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22303:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22306:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22296:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22296:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22296:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22331:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22336:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22324:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22324:17:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22324:17:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "22133:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "22156:8:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22166:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "22153:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22153:16:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "22130:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22130:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "22127:224:20"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22401:161:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22422:5:20"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "22433:9:20"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "22444:66:20",
                                      "type": "",
                                      "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "22429:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22429:82:20"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "22415:6:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22415:97:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "22415:97:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "22525:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22536:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22543:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22532:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22532:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "22525:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "22394:168:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22399:1:20",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "22578:321:20",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "22592:52:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22637:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "22607:29:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22607:37:20"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "22596:7:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "22657:10:20",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22666:1:20",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "22661:1:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "22736:113:20",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "end_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "22765:5:20"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "22772:1:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22761:3:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22761:13:20"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "22782:7:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "22776:5:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22776:14:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "22754:6:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22754:37:20"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "22754:37:20"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22808:27:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "22823:7:20"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "22832:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22819:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22819:16:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "22808:7:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "22691:1:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22694:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "22688:2:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22688:15:20"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "22704:19:20",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22706:15:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "22715:1:20"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "22718:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22711:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22711:10:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "22706:1:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "22684:3:20",
                              "statements": []
                            },
                            "src": "22680:169:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "22862:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22873:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "22880:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "22869:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22869:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "22862:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "22571:328:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22576:1:20",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "22367:18:20"
                  },
                  "nodeType": "YulSwitch",
                  "src": "22360:539:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22908:10:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "22915:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22908:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21626:3:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21631:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21639:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21650:3:20",
                "type": ""
              }
            ],
            "src": "21474:1450:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23103:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23120:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23131:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23113:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23113:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23113:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23154:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23165:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23150:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23150:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23170:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23143:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23143:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23143:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23193:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23204:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23189:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23189:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23209:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23182:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23182:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23182:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23264:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23275:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23260:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23260:18:20"
                      },
                      {
                        "hexValue": "63656e736520636f7374206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23280:34:20",
                        "type": "",
                        "value": "cense cost must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23253:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23253:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23253:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23335:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23346:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23331:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23331:19:20"
                      },
                      {
                        "hexValue": "302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23352:4:20",
                        "type": "",
                        "value": "0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23324:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23324:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23324:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23366:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23378:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23389:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23374:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23374:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23366:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23080:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23094:4:20",
                "type": ""
              }
            ],
            "src": "22929:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23578:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23595:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23606:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23588:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23588:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23588:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23629:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23640:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23625:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23625:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23645:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23618:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23618:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23618:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23668:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23679:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23664:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23664:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f7374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23684:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental cost"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23657:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23657:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23657:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23739:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23750:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23735:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23735:18:20"
                      },
                      {
                        "hexValue": "20706572207365636f6e64206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23755:34:20",
                        "type": "",
                        "value": " per second must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23728:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23728:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23728:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23810:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23821:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23806:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23806:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23827:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23799:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23799:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23799:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23842:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23854:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23865:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23850:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23850:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23842:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23555:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23569:4:20",
                "type": ""
              }
            ],
            "src": "23404:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24054:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24071:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24082:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24064:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24064:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24064:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24105:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24116:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24101:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24101:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24121:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24094:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24094:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24094:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24144:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24155:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24140:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24140:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24160:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24133:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24133:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24133:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24215:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24226:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24211:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24211:18:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24231:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24204:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24204:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24204:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24249:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24261:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24272:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24257:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24257:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24249:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24031:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24045:4:20",
                "type": ""
              }
            ],
            "src": "23880:402:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24461:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24478:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24489:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24471:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24471:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24471:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24512:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24523:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24508:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24508:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24528:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24501:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24501:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24501:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24551:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24562:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24547:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24547:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24567:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24540:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24540:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24540:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24622:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24633:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24618:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24618:18:20"
                      },
                      {
                        "hexValue": "6963656e7365206f66207468697320746f6b656e2063616e6e6f742062652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24638:34:20",
                        "type": "",
                        "value": "icense of this token cannot be t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24611:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24611:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24611:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24693:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24704:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24689:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24689:19:20"
                      },
                      {
                        "hexValue": "72616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24710:13:20",
                        "type": "",
                        "value": "ransferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24682:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24682:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24682:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24733:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24745:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24756:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24741:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24741:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24733:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24438:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24452:4:20",
                "type": ""
              }
            ],
            "src": "24287:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24945:379:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24962:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24973:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24955:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24955:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24955:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24996:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25007:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24992:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24992:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25012:3:20",
                        "type": "",
                        "value": "108"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24985:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24985:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24985:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25036:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25047:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25032:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25032:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25052:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25025:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25025:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25025:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25107:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25118:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25103:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25103:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25123:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25096:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25096:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25096:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25178:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25189:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25174:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25174:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206f776e657273686970206c6963656e7365206f66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25195:34:20",
                        "type": "",
                        "value": "taining the ownership license of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25167:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25167:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25167:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25250:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25261:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25246:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25246:19:20"
                      },
                      {
                        "hexValue": "207468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25267:14:20",
                        "type": "",
                        "value": " this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25239:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25239:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25239:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25291:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25303:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25314:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25299:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25299:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25291:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24922:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24936:4:20",
                "type": ""
              }
            ],
            "src": "24771:553:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25503:254:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25520:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25531:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25513:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25513:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25513:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25554:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25565:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25550:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25550:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25570:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25543:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25543:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25543:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25593:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25604:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25589:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25589:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472616e7366657220746f20636f6e7472616374206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25609:34:20",
                        "type": "",
                        "value": "ERC1190: Transfer to contract no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25582:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25582:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25582:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25664:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25675:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25660:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25660:18:20"
                      },
                      {
                        "hexValue": "7420696d706c656d656e74696e6720494552433131393052656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25680:34:20",
                        "type": "",
                        "value": "t implementing IERC1190Receiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25653:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25653:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25653:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25724:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25736:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25747:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25732:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25732:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25724:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25480:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25494:4:20",
                "type": ""
              }
            ],
            "src": "25329:428:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25936:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25953:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25964:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25946:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25946:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25946:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25987:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25998:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25983:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25983:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26003:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25976:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25976:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25976:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26026:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26037:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26022:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26022:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746865206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26042:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer the own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26015:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26015:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26015:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26097:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26108:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26093:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26093:18:20"
                      },
                      {
                        "hexValue": "657273686970206c6963656e7365206966206974206973206e6f74206f776e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26113:34:20",
                        "type": "",
                        "value": "ership license if it is not owne"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26086:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26086:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26086:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26168:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26179:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26164:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26164:19:20"
                      },
                      {
                        "hexValue": "642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26185:4:20",
                        "type": "",
                        "value": "d."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26157:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26157:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26157:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26199:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26211:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26222:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26207:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26207:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26199:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25913:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25927:4:20",
                "type": ""
              }
            ],
            "src": "25762:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26411:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26428:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26439:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26421:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26421:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26421:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26462:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26473:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26458:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26458:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26478:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26451:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26451:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26451:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26501:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26512:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26497:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26497:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746f2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26517:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer to the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26490:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26490:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26490:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26572:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26583:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26568:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26568:18:20"
                      },
                      {
                        "hexValue": "7a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26588:15:20",
                        "type": "",
                        "value": "zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26561:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26561:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26561:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26613:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26625:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26636:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26621:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26621:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26613:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26388:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26402:4:20",
                "type": ""
              }
            ],
            "src": "26237:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26699:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26726:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "26728:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26728:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26728:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26715:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "26722:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "26718:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26718:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "26712:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26712:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "26709:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26757:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26768:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "26771:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26764:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26764:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "26757:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "26682:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "26685:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "26691:3:20",
                "type": ""
              }
            ],
            "src": "26651:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26958:229:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26975:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26986:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26968:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26968:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26968:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27009:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27020:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27005:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27005:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27025:2:20",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26998:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26998:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26998:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27048:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27059:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27044:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27044:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f2063616e6e6f7420626520746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27064:34:20",
                        "type": "",
                        "value": "ERC1190: to cannot be the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27037:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27037:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27037:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27119:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27130:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27115:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27115:18:20"
                      },
                      {
                        "hexValue": "6464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27135:9:20",
                        "type": "",
                        "value": "ddress."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27108:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27108:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27108:37:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27154:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27166:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27177:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27162:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27162:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27154:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26935:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26949:4:20",
                "type": ""
              }
            ],
            "src": "26784:403:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27366:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27383:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27394:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27376:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27376:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27376:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27417:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27428:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27413:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27413:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27433:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27406:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27406:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27406:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27456:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27467:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27452:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27452:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20616c7265616479206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27472:34:20",
                        "type": "",
                        "value": "ERC1190: The token already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27445:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27445:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27445:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27527:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27538:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27523:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27523:18:20"
                      },
                      {
                        "hexValue": "732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27543:4:20",
                        "type": "",
                        "value": "s."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27516:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27516:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27516:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27557:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27569:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27580:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27565:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27565:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27557:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27343:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27357:4:20",
                "type": ""
              }
            ],
            "src": "27192:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27769:239:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27786:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27797:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27779:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27779:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27779:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27820:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27831:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27816:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27816:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27836:2:20",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27809:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27809:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27809:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27859:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27870:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27855:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27855:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f722072656e74616c206f757420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27875:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for rental out "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27848:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27848:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27848:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27930:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27941:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27926:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27926:18:20"
                      },
                      {
                        "hexValue": "6f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27946:19:20",
                        "type": "",
                        "value": "of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27919:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27919:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27919:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27975:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27987:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27998:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27983:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27983:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27975:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27746:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27760:4:20",
                "type": ""
              }
            ],
            "src": "27595:413:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28187:251:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28204:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28215:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28197:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28197:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28197:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28238:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28249:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28234:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28234:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28254:2:20",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28227:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28227:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28227:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28277:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28288:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28273:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28273:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f72206f776e6572736869702074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28293:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for ownership t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28266:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28266:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28266:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28348:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28359:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28344:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28344:18:20"
                      },
                      {
                        "hexValue": "72616e73666572206f7574206f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28364:31:20",
                        "type": "",
                        "value": "ransfer out of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28337:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28337:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28337:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28405:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28417:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28428:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28413:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28413:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28405:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28164:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28178:4:20",
                "type": ""
              }
            ],
            "src": "28013:425:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28617:234:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28634:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28645:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28627:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28627:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28627:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28668:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28679:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28664:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28664:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28684:2:20",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28657:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28657:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28657:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28707:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28718:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28703:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28703:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20546865206f776e65722063616e6e6f7420617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28723:34:20",
                        "type": "",
                        "value": "ERC1190: The owner cannot approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28696:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28696:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28696:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28778:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28789:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28774:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28774:18:20"
                      },
                      {
                        "hexValue": "6520746865697273656c662e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28794:14:20",
                        "type": "",
                        "value": "e theirself."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28767:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28767:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28767:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28818:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28830:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28841:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28826:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28826:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28818:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28594:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28608:4:20",
                "type": ""
              }
            ],
            "src": "28443:408:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29059:309:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "29069:52:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "29079:42:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "29073:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29137:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "29152:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29160:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29148:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29148:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29130:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29130:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29130:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29184:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29195:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29180:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29180:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "29204:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29212:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29200:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29200:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29173:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29173:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29173:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29236:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29247:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29232:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29232:18:20"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "29252:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29225:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29225:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29225:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29279:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29290:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29275:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29275:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29295:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29268:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29268:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29268:31:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29308:54:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "29334:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29346:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29357:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29342:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29342:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "29316:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29316:46:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29308:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29004:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "29015:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "29023:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29031:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29039:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29050:4:20",
                "type": ""
              }
            ],
            "src": "28856:512:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29453:169:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "29499:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "29508:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "29511:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "29501:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "29501:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "29501:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "29474:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29483:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29470:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29470:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29495:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "29466:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29466:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "29463:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "29524:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29543:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "29537:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29537:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "29528:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29586:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "29562:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29562:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29562:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29601:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "29611:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "29601:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29419:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "29430:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29442:6:20",
                "type": ""
              }
            ],
            "src": "29373:249:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29801:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29818:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29829:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29811:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29811:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29811:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29852:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29863:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29848:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29848:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29868:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29841:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29841:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29841:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29891:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29902:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29887:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29887:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472696564207472616e7366657220746f20636f6e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29907:34:20",
                        "type": "",
                        "value": "ERC1190: Tried transfer to contr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29880:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29880:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29880:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29962:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29973:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29958:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29958:18:20"
                      },
                      {
                        "hexValue": "616374206e6f7420696d706c656d656e74696e67204945524331313930437265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29978:34:20",
                        "type": "",
                        "value": "act not implementing IERC1190Cre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29951:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29951:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29951:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30033:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30044:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30029:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30029:19:20"
                      },
                      {
                        "hexValue": "61746976654c6963656e736552656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30050:23:20",
                        "type": "",
                        "value": "ativeLicenseReceiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30022:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30022:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30022:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30083:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30095:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30106:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30091:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30091:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30083:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29778:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29792:4:20",
                "type": ""
              }
            ],
            "src": "29627:489:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := abi_decode_uint8(add(headStart, 64))\n        value4 := abi_decode_uint8(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token does not exis\")\n        mstore(add(headStart, 96), \"t.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fe8c7dd15717b57b6e8bc8026ad82732e0aecd45fba1c522abf8cccd0cfa50f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent creative owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c9b32d7df821f88f28ae53321015ec4ac9e68ab5a73ee407e87b8c3426f268d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 91)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he (creative) owner of the token\")\n        mstore(add(headStart, 128), \" nor approved to manage it.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner nor approved to manage \")\n        mstore(add(headStart, 128), \"the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has creative own\")\n        mstore(add(headStart, 96), \"ership over tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he creative owner nor approved t\")\n        mstore(add(headStart, 128), \"o manage the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190: creativeOwner cannot be\")\n        mstore(add(headStart, 96), \" the zero address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: renter cannot be the ze\")\n        mstore(add(headStart, 96), \"ro address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: The renter has not rent\")\n        mstore(add(headStart, 96), \"ed the token.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has ownership ov\")\n        mstore(add(headStart, 96), \"er tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the creative license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The token does \")\n        mstore(add(headStart, 96), \"not exist.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense cost must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the ownership license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense of this token cannot be tr\")\n        mstore(add(headStart, 128), \"ansferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 107)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the creative license of \")\n        mstore(add(headStart, 160), \"this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The asset relat\")\n        mstore(add(headStart, 96), \"ed to this token is not rentable\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental time\")\n        mstore(add(headStart, 96), \" must be positive.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient to cov\")\n        mstore(add(headStart, 128), \"er the rent expenses.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: owner cannot be the zer\")\n        mstore(add(headStart, 96), \"o address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1190: No file associated to t\")\n        mstore(add(headStart, 96), \"he token.\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let ret := 0\n        let slotValue := sload(value1)\n        let length_1 := ret\n        let _2 := 1\n        length_1 := shr(_2, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _2)\n        if iszero(outOfPlaceEncoding)\n        {\n            length_1 := and(length_1, 0x7f)\n        }\n        if eq(outOfPlaceEncoding, lt(length_1, _1))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(end_1, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(end_1, length_1)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value1)\n            let i := 0\n            for { } lt(i, length_1) { i := add(i, _1) }\n            {\n                mstore(add(end_1, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_1, length_1)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense cost must be greater than \")\n        mstore(add(headStart, 128), \"0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental cost\")\n        mstore(add(headStart, 96), \" per second must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense of this token cannot be t\")\n        mstore(add(headStart, 128), \"ransferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 108)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the ownership license of\")\n        mstore(add(headStart, 160), \" this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"ERC1190: Transfer to contract no\")\n        mstore(add(headStart, 96), \"t implementing IERC1190Receiver.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer the own\")\n        mstore(add(headStart, 96), \"ership license if it is not owne\")\n        mstore(add(headStart, 128), \"d.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer to the \")\n        mstore(add(headStart, 96), \"zero address.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC1190: to cannot be the zero a\")\n        mstore(add(headStart, 96), \"ddress.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token already exist\")\n        mstore(add(headStart, 96), \"s.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for rental out \")\n        mstore(add(headStart, 96), \"of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for ownership t\")\n        mstore(add(headStart, 96), \"ransfer out of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC1190: The owner cannot approv\")\n        mstore(add(headStart, 96), \"e theirself.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190: Tried transfer to contr\")\n        mstore(add(headStart, 96), \"act not implementing IERC1190Cre\")\n        mstore(add(headStart, 128), \"ativeLicenseReceiver.\")\n        tail := add(headStart, 160)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "261:10859:8:-:0;;;998:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2320:17:7;;1128:9:8;;1139:11;;2320:17:7;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;2348:21:7;;;;:7;;:21;;;;;:::i;:::-;;2245:132;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1162:20:8;;::::1;::::0;:5:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;998:191:::0;;;261:10859;;640:96:2;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;261:10859:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:10859:8;;;-1:-1:-1;261:10859:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:766::-;1154:6;1162;1170;1223:2;1211:9;1202:7;1198:23;1194:32;1191:52;;;1239:1;1236;1229:12;1191:52;1266:16;;-1:-1:-1;;;;;1331:14:20;;;1328:34;;;1358:1;1355;1348:12;1328:34;1381:61;1434:7;1425:6;1414:9;1410:22;1381:61;:::i;:::-;1371:71;;1488:2;1477:9;1473:18;1467:25;1451:41;;1517:2;1507:8;1504:16;1501:36;;;1533:1;1530;1523:12;1501:36;1556:63;1611:7;1600:8;1589:9;1585:24;1556:63;:::i;:::-;1546:73;;1665:2;1654:9;1650:18;1644:25;1628:41;;1694:2;1684:8;1681:16;1678:36;;;1710:1;1707;1700:12;1678:36;;1733:63;1788:7;1777:8;1766:9;1762:24;1733:63;:::i;:::-;1723:73;;;1036:766;;;;;:::o;1807:380::-;1886:1;1882:12;;;;1929;;;1950:61;;2004:4;1996:6;1992:17;1982:27;;1950:61;2057:2;2049:6;2046:14;2026:18;2023:38;2020:161;;;2103:10;2098:3;2094:20;2091:1;2084:31;2138:4;2135:1;2128:15;2166:4;2163:1;2156:15;2020:161;;1807:380;;;:::o;:::-;261:10859:8;;;;;;",
  "deployedSourceMap": "261:10859:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:357:7;;;;;;;;;;-1:-1:-1;2449:357:7;;;;;:::i;:::-;;:::i;:::-;;;611:14:20;;604:22;586:41;;574:2;559:18;2449:357:7;;;;;;;;5165:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8098:261::-;;;;;;;;;;-1:-1:-1;8098:261:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1797:55:20;;;1779:74;;1767:2;1752:18;8098:261:7;1633:226:20;6911:794:7;;;;;;;;;;-1:-1:-1;6911:794:7;;;;;:::i;:::-;;:::i;:::-;;12233:418;;;;;;;;;;-1:-1:-1;12233:418:7;;;;;:::i;:::-;;:::i;4464:379::-;;;;;;;;;;-1:-1:-1;4464:379:7;;;;;:::i;:::-;;:::i;19720:198::-;;;;;;;;;;-1:-1:-1;19720:198:7;;;;;:::i;:::-;;:::i;:::-;;;3887:4:20;3875:17;;;3857:36;;3845:2;3830:18;19720:198:7;3715:184:20;14534:207:7;;;;;;;;;;-1:-1:-1;14534:207:7;;;;;:::i;:::-;;:::i;14824:433::-;;;;;;;;;;-1:-1:-1;14824:433:7;;;;;:::i;:::-;;:::i;10693:376::-;;;;;;;;;;-1:-1:-1;10693:376:7;;;;;:::i;:::-;;:::i;3261:355::-;;;;;;;;;;-1:-1:-1;3261:355:7;;;;;:::i;:::-;;:::i;:::-;;;4574:25:20;;;4562:2;4547:18;3261:355:7;4428:177:20;21183:1423:7;;;;;;;;;;-1:-1:-1;21183:1423:7;;;;;:::i;:::-;;:::i;4063:330::-;;;;;;;;;;-1:-1:-1;4063:330:7;;;;;:::i;:::-;;:::i;1195:102:8:-;;;;;;;;;;;;;:::i;9293:513::-;;;;;;;;;;-1:-1:-1;9293:513:8;;;;;:::i;:::-;;:::i;1514:220::-;;;;;;;;;;-1:-1:-1;1514:220:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;3144:407:8:-;;;;;;;;;;-1:-1:-1;3144:407:8;;;;;:::i;:::-;;:::i;11940:209:7:-;;;;;;;;;;-1:-1:-1;11940:209:7;;;;;:::i;:::-;;:::i;6899:485:8:-;;;;;;;;;;-1:-1:-1;6899:485:8;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;5337:106:7;;;;;;;;;;;;;:::i;2309:599:8:-;;;;;;;;;;-1:-1:-1;2309:599:8;;;;;:::i;:::-;;:::i;13220:391:7:-;;;;;;;;;;-1:-1:-1;13220:391:7;;;;;:::i;:::-;;:::i;8432:187::-;;;;;;;;;;-1:-1:-1;8432:187:7;;;;;:::i;:::-;;:::i;4908:189::-;;;;;;;;;;-1:-1:-1;4908:189:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3687:313::-;;;;;;;;;;-1:-1:-1;3687:313:7;;;;;:::i;:::-;;:::i;10145:973:8:-;;;;;;:::i;:::-;;:::i;5161:1443::-;;;;;;:::i;:::-;;:::i;1740:207::-;;;;;;;;;;-1:-1:-1;1740:207:8;;;;;:::i;:::-;;:::i;19272:176:7:-;;;;;;;;;;-1:-1:-1;19272:176:7;;;;;:::i;:::-;;:::i;2876:307::-;;;;;;;;;;-1:-1:-1;2876:307:7;;;;;:::i;:::-;;:::i;5954:552::-;;;;;;;;;;-1:-1:-1;5954:552:7;;;;;:::i;:::-;;:::i;3786:404:8:-;;;;;;;;;;-1:-1:-1;3786:404:8;;;;;:::i;:::-;;:::i;9209:214:7:-;;;;;;;;;;-1:-1:-1;9209:214:7;;;;;:::i;:::-;-1:-1:-1;;;;;9380:25:7;;;9351:4;9380:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;9209:214;4387:382:8;;;;;;;;;;-1:-1:-1;4387:382:8;;;;;:::i;:::-;;:::i;1303:205::-;;;;;;;;;;-1:-1:-1;1303:205:8;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;20269:220:7:-;;;;;;;;;;-1:-1:-1;20269:220:7;;;;;:::i;:::-;;:::i;7726:1255:8:-;;;;;;:::i;:::-;;:::i;2449:357:7:-;2596:4;2638:41;;;;;:107;;-1:-1:-1;2696:49:7;;;2711:34;2696:49;2638:107;:160;;;-1:-1:-1;952:25:5;937:40;;;;2762:36:7;2618:180;2449:357;-1:-1:-1;;2449:357:7:o;5165:102::-;5221:13;5254:5;5247:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5165:102;:::o;8098:261::-;8219:7;8252:16;8260:7;8252;:16::i;:::-;8244:63;;;;-1:-1:-1;;;8244:63:7;;8369:2:20;8244:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;8244:63:7;;;;;;;;;-1:-1:-1;8327:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;8327:24:7;;8098:261::o;6911:794::-;6992:13;7008:24;7024:7;7008:15;:24::i;:::-;6992:40;;7043:21;7067:32;7091:7;7067:23;:32::i;:::-;7043:56;;7124:5;-1:-1:-1;;;;;7118:11:7;:2;-1:-1:-1;;;;;7118:11:7;;;7110:66;;;;-1:-1:-1;;;7110:66:7;;8772:2:20;7110:66:7;;;8754:21:20;8811:2;8791:18;;;8784:30;8850:34;8830:18;;;8823:62;8921:12;8901:18;;;8894:40;8951:19;;7110:66:7;8570:406:20;7110:66:7;7215:13;-1:-1:-1;;;;;7209:19:7;:2;-1:-1:-1;;;;;7209:19:7;;;7187:120;;;;-1:-1:-1;;;7187:120:7;;9183:2:20;7187:120:7;;;9165:21:20;9222:2;9202:18;;;9195:30;9261:34;9241:18;;;9234:62;9332:21;9312:18;;;9305:49;9371:19;;7187:120:7;8981:415:20;7187:120:7;719:10:2;-1:-1:-1;;;;;7342:21:7;;;;:71;;-1:-1:-1;719:10:2;-1:-1:-1;;;;;7384:29:7;;;7342:71;:129;;;-1:-1:-1;7434:37:7;7451:5;719:10:2;9209:214:7;:::i;7434:37::-;7342:195;;;-1:-1:-1;7492:45:7;7509:13;719:10:2;9209:214:7;:::i;7492:45::-;7320:336;;;;-1:-1:-1;;;7320:336:7;;9603:2:20;7320:336:7;;;9585:21:20;9642:2;9622:18;;;9615:30;9681:34;9661:18;;;9654:62;9752:34;9732:18;;;9725:62;9824:29;9803:19;;;9796:58;9871:19;;7320:336:7;9401:495:20;7320:336:7;7669:28;7678:5;7685:2;7689:7;7669:8;:28::i;:::-;6981:724;;6911:794;;:::o;12233:418::-;12433:41;719:10:2;12466:7:7;12433:18;:41::i;:::-;12411:165;;;;-1:-1:-1;;;12411:165:7;;10103:2:20;12411:165:7;;;10085:21:20;10142:2;10122:18;;;10115:30;10181:34;10161:18;;;10154:62;10252:34;10232:18;;;10225:62;10324:12;10303:19;;;10296:41;10354:19;;12411:165:7;9901:478:20;12411:165:7;12589:54;12619:4;12625:2;12629:7;12638:4;12589:29;:54::i;4464:379::-;4589:7;4638:24;;;:15;:24;;;;;;-1:-1:-1;;;;;4638:24:7;4695:27;4673:129;;;;-1:-1:-1;;;4673:129:7;;10586:2:20;4673:129:7;;;10568:21:20;10625:2;10605:18;;;10598:30;10664:34;10644:18;;;10637:62;10735:22;10715:18;;;10708:50;10775:19;;4673:129:7;10384:416:20;19720:198:7;19842:5;19872:38;19901:8;19872:28;:38::i;14534:207::-;14683:50;14711:4;14717:2;14721:7;14683:50;;;;;;;;;;;;:27;:50::i;:::-;14534:207;;;:::o;14824:433::-;15023:49;719:10:2;15064:7:7;15023:26;:49::i;:::-;15001:182;;;;-1:-1:-1;;;15001:182:7;;11007:2:20;15001:182:7;;;10989:21:20;11046:2;11026:18;;;11019:30;11085:34;11065:18;;;11058:62;11156:34;11136:18;;;11129:62;11228:21;11207:19;;;11200:50;11267:19;;15001:182:7;10805:487:20;15001:182:7;15196:53;15225:4;15231:2;15235:7;15244:4;15196:28;:53::i;10693:376::-;10861:41;719:10:2;10894:7:7;10861:18;:41::i;:::-;10839:165;;;;-1:-1:-1;;;10839:165:7;;10103:2:20;10839:165:7;;;10085:21:20;10142:2;10122:18;;;10115:30;10181:34;10161:18;;;10154:62;10252:34;10232:18;;;10225:62;10324:12;10303:19;;;10296:41;10354:19;;10839:165:7;9901:478:20;10839:165:7;11017:44;11043:4;11049:2;11053:7;11017:25;:44::i;3261:355::-;3399:7;-1:-1:-1;;;;;3446:27:7;;3424:127;;;;-1:-1:-1;;;3424:127:7;;11499:2:20;3424:127:7;;;11481:21:20;11538:2;11518:18;;;11511:30;11577:34;11557:18;;;11550:62;11648:20;11628:18;;;11621:48;11686:19;;3424:127:7;11297:414:20;3424:127:7;-1:-1:-1;;;;;;3571:37:7;;;;;:22;:37;;;;;;;3261:355::o;21183:1423::-;21304:7;21337:16;21345:7;21337;:16::i;:::-;21329:63;;;;-1:-1:-1;;;21329:63:7;;8369:2:20;21329:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;21329:63:7;8167:398:20;21329:63:7;-1:-1:-1;;;;;21427:20:7;;21405:113;;;;-1:-1:-1;;;21405:113:7;;11918:2:20;21405:113:7;;;11900:21:20;11957:2;11937:18;;;11930:30;11996:34;11976:18;;;11969:62;-1:-1:-1;;;12047:18:20;;;12040:41;12098:19;;21405:113:7;11716:407:20;21405:113:7;21553:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21553:25:7;;;;;;;;;;21531:125;;;;-1:-1:-1;;;21531:125:7;;12330:2:20;21531:125:7;;;12312:21:20;12369:2;12349:18;;;12342:30;12408:34;12388:18;;;12381:62;12479:15;12459:18;;;12452:43;12512:19;;21531:125:7;12128:409:20;21531:125:7;21669:18;21690:17;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21690:25:7;;;;;;;;;;21745:22;:15;21763:4;21745:22;:::i;:::-;21732:10;:35;21728:826;;;21853:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21853:25:7;;;;;;;;;21846:32;;;21853:17;21925:575;21984:21;;;;:12;:21;;;;;:28;21980:32;;:41;;;;;22017:4;22016:5;21980:41;21925:575;;;22082:21;;;;:12;:21;;;;;:24;;-1:-1:-1;;;;;22082:34:7;;;:21;22104:1;;22082:24;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;22082:24:7;:34;22078:407;;;22278:21;;;;:12;:21;;;;;22326:28;;:32;;22357:1;;22326:32;:::i;:::-;22278:103;;;;;;;;:::i;:::-;;;;;;;;;;;;;22251:21;;;:12;:21;;;;;;;:24;;-1:-1:-1;;;;;22278:103:7;;;;22273:1;;22251:24;;;;;;:::i;:::-;;;;;;;;;;;;;:130;;-1:-1:-1;;22251:130:7;-1:-1:-1;;;;;22251:130:7;;;;;;;;;;;22404:21;;;:12;:21;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;22404:27:7;;;;;-1:-1:-1;;22404:27:7;;;;;;;;-1:-1:-1;22078:407:7;22040:3;;;;:::i;:::-;;;;21925:575;;;-1:-1:-1;;;;;;22514:23:7;;;;;;:15;:23;;;;;:28;;22541:1;;22514:23;:28;;22541:1;;22514:28;:::i;:::-;;;;-1:-1:-1;;;21728:826:7;-1:-1:-1;;22573:17:7;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;22573:25:7;;;;;;;;;;;;;21183:1423::o;4063:330::-;4180:7;4221:16;;;:7;:16;;;;;;-1:-1:-1;;;;;4221:16:7;4270:19;4248:112;;;;-1:-1:-1;;;4248:112:7;;13874:2:20;4248:112:7;;;13856:21:20;13913:2;13893:18;;;13886:30;13952:34;13932:18;;;13925:62;14023:13;14003:18;;;13996:41;14054:19;;4248:112:7;13672:407:20;1195:102:8;1245:7;1271:19;:9;918:14:3;;827:112;1271:19:8;1264:26;;1195:102;:::o;9293:513::-;-1:-1:-1;;;;;9395:16:8;;9374:137;;;;-1:-1:-1;;;9374:137:8;;14286:2:20;9374:137:8;;;14268:21:20;14325:2;14305:18;;;14298:30;14364:34;14344:18;;;14337:62;14435:34;14415:18;;;14408:62;14507:12;14486:19;;;14479:41;14537:19;;9374:137:8;14084:478:20;9374:137:8;9522:21;9546:30;9568:7;9546:21;:30::i;:::-;9522:54;-1:-1:-1;719:10:2;-1:-1:-1;;;;;9608:35:8;;;9587:144;;;;-1:-1:-1;;;9587:144:8;;14769:2:20;9587:144:8;;;14751:21:20;14808:2;14788:18;;;14781:30;14847:34;14827:18;;;14820:62;14918:32;14898:18;;;14891:60;14968:19;;9587:144:8;14567:426:20;9587:144:8;9742:57;9772:13;9787:2;9791:7;9742:29;:57::i;1514:220::-;1588:7;1615:16;1623:7;1615;:16::i;:::-;1607:71;;;;-1:-1:-1;;;1607:71:8;;15200:2:20;1607:71:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;1607:71:8;14998:406:20;1607:71:8;-1:-1:-1;1704:23:8;;;;:14;:23;;;;;;;1514:220::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;15611:2:20;1240:68:0;;;15593:21:20;;;15630:18;;;15623:30;15689:34;15669:18;;;15662:62;15741:18;;1240:68:0;15409:356:20;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3144:407:8:-;3267:22;3281:7;3267:13;:22::i;:::-;3246:111;;;;-1:-1:-1;;;3246:111:8;;15200:2:20;3246:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;3246:111:8;14998:406:20;3246:111:8;3402:1;3389:10;:14;3368:128;;;;-1:-1:-1;;;3368:128:8;;15972:2:20;3368:128:8;;;15954:21:20;16011:2;15991:18;;;15984:30;16050:34;16030:18;;;16023:62;16121:34;16101:18;;;16094:62;16193:5;16172:19;;;16165:34;16216:19;;3368:128:8;15770:471:20;3368:128:8;3507:24;;;;:15;:24;;;;;;:37;3144:407::o;11940:209:7:-;12090:51;12119:4;12125:2;12129:7;12090:51;;;;;;;;;;;;:28;:51::i;6899:485:8:-;-1:-1:-1;;;;;7002:16:8;;6981:138;;;;-1:-1:-1;;;6981:138:8;;16448:2:20;6981:138:8;;;16430:21:20;16487:2;16467:18;;;16460:30;16526:34;16506:18;;;16499:62;16597:34;16577:18;;;16570:62;-1:-1:-1;;;16648:19:20;;;16641:42;16700:19;;6981:138:8;16246:479:20;6981:138:8;7130:13;7146:22;7160:7;7146:13;:22::i;:::-;7130:38;-1:-1:-1;719:10:2;-1:-1:-1;;;;;7200:27:8;;;7179:137;;;;-1:-1:-1;;;7179:137:8;;16932:2:20;7179:137:8;;;16914:21:20;16971:2;16951:18;;;16944:30;17010:34;16990:18;;;16983:62;17081:33;17061:18;;;17054:61;17132:19;;7179:137:8;16730:427:20;7179:137:8;7327:50;7358:5;7365:2;7369:7;7327:30;:50::i;5337:106:7:-;5395:13;5428:7;5421:14;;;;;:::i;2309:599:8:-;1108:6:0;;2481:7:8;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;15611:2:20;1240:68:0;;;15593:21:20;;;15630:18;;;15623:30;15689:34;15669:18;;;15662:62;15741:18;;1240:68:0;15409:356:20;1240:68:0;2500:21:8::1;:9;1032:19:3::0;;1050:1;1032:19;;;945:123;2500:21:8::1;2532:17;2552:19;:9;918:14:3::0;;827:112;2552:19:8::1;2532:39;;2581:31;2593:7;2602:9;2581:11;:31::i;:::-;2622:37;2643:9;2654:4;;2622:20;:37::i;:::-;2669:117;2702:9;2725:13;2752:24;2669:19;:117::i;:::-;2802:72;::::0;;-1:-1:-1;;;;;17403:55:20;;17385:74;;17507:4;17495:17;;;17490:2;17475:18;;17468:45;17549:17;;17529:18;;;17522:45;17598:2;17583:18;;17576:34;;;2802:72:8;;::::1;::::0;;;;17372:3:20;2802:72:8;;::::1;2892:9:::0;2309:599;-1:-1:-1;;;;;;2309:599:8:o;13220:391:7:-;13387:49;719:10:2;13428:7:7;13387:26;:49::i;:::-;13365:182;;;;-1:-1:-1;;;13365:182:7;;11007:2:20;13365:182:7;;;10989:21:20;11046:2;11026:18;;;11019:30;11085:34;11065:18;;;11058:62;11156:34;11136:18;;;11129:62;11228:21;11207:19;;;11200:50;11267:19;;13365:182:7;10805:487:20;13365:182:7;13560:43;13585:4;13591:2;13595:7;13560:24;:43::i;8432:187::-;8559:52;719:10:2;8592:8:7;8602;8559:18;:52::i;:::-;8432:187;;:::o;4908:189::-;5068:21;;;;:12;:21;;;;;;;;;5061:28;;;;;;;;;;;;;;;;;5027:16;;5061:28;;;5068:21;5061:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5061:28:7;;;;;;;;;;;;;;;;;;;;;;;4908:189;;;:::o;3687:313::-;3811:7;-1:-1:-1;;;;;3858:20:7;;3836:113;;;;-1:-1:-1;;;3836:113:7;;11918:2:20;3836:113:7;;;11900:21:20;11957:2;11937:18;;;11930:30;11996:34;11976:18;;;11969:62;-1:-1:-1;;;12047:18:20;;;12040:41;12098:19;;3836:113:7;11716:407:20;3836:113:7;-1:-1:-1;;;;;;3969:23:7;;;;;:15;:23;;;;;;;3687:313::o;10145:973:8:-;10241:22;10255:7;10241:13;:22::i;:::-;10220:111;;;;-1:-1:-1;;;10220:111:8;;15200:2:20;10220:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;10220:111:8;14998:406:20;10220:111:8;10389:1;10363:23;;;:14;:23;;;;;;10342:148;;;;-1:-1:-1;;;10342:148:8;;17823:2:20;10342:148:8;;;17805:21:20;17862:2;17842:18;;;17835:30;17901:34;17881:18;;;17874:62;17972:34;17952:18;;;17945:62;18044:12;18023:19;;;18016:41;18074:19;;10342:148:8;17621:478:20;10342:148:8;10535:23;;;;:14;:23;;;;;;10522:9;:36;;10501:190;;;;-1:-1:-1;;;10501:190:8;;18306:2:20;10501:190:8;;;18288:21:20;18345:3;18325:18;;;18318:31;18385:34;18365:18;;;18358:62;18456:34;18436:18;;;18429:62;18528:34;18507:19;;;18500:63;18600:13;18579:19;;;18572:42;18631:19;;10501:190:8;18104:552:20;10501:190:8;719:10:2;10702:153:8;;;;-1:-1:-1;;;10702:153:8;;14286:2:20;10702:153:8;;;14268:21:20;14325:2;14305:18;;;14298:30;14364:34;14344:18;;;14337:62;14435:34;14415:18;;;14408:62;14507:12;14486:19;;;14479:41;14537:19;;10702:153:8;14084:478:20;10702:153:8;10866:29;10906:30;10928:7;10906:21;:30::i;:::-;10866:71;-1:-1:-1;10948:119:8;10866:71;719:10:2;11050:7:8;10948:29;:119::i;:::-;11078:33;;-1:-1:-1;;;;;11078:22:8;;;11101:9;11078:33;;;;;;;;;11101:9;11078:22;:33;;;;;;;;;;;;;;;;;;;5161:1443;5301:22;5315:7;5301:13;:22::i;:::-;5280:111;;;;-1:-1:-1;;;5280:111:8;;15200:2:20;5280:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;5280:111:8;14998:406:20;5280:111:8;5447:1;5423:21;;;:12;:21;;;;;;5402:137;;;;-1:-1:-1;;;5402:137:8;;18863:2:20;5402:137:8;;;18845:21:20;18902:2;18882:18;;;18875:30;18941:34;18921:18;;;18914:62;19012:34;18992:18;;;18985:62;19084:3;19063:19;;;19056:32;19105:19;;5402:137:8;18661:469:20;5402:137:8;5550:25;5628:15;5579:33;5608:4;5579:26;:33;:::i;:::-;5578:65;;;;:::i;:::-;5550:93;;5695:1;5675:17;:21;5654:118;;;;-1:-1:-1;;;5654:118:8;;19616:2:20;5654:118:8;;;19598:21:20;19655:2;19635:18;;;19628:30;19694:34;19674:18;;;19667:62;19765:20;19745:18;;;19738:48;19803:19;;5654:118:8;19414:414:20;5654:118:8;5783:24;5830:21;;;:12;:21;;;;;;5810:41;;:17;:41;:::i;:::-;5783:68;;5896:16;5883:9;:29;;5862:161;;;;-1:-1:-1;;;5862:161:8;;20035:2:20;5862:161:8;;;20017:21:20;20074:2;20054:18;;;20047:30;20113:34;20093:18;;;20086:62;20184:34;20164:18;;;20157:62;20256:23;20235:19;;;20228:52;20297:19;;5862:161:8;19833:489:20;5862:161:8;6034:21;6066:22;6080:7;6066:13;:22::i;:::-;6034:55;;6099:29;6139:30;6161:7;6139:21;:30::i;:::-;6099:71;-1:-1:-1;6181:118:8;719:10:2;6242:7:8;6263:26;6181:15;:118::i;:::-;6323:13;-1:-1:-1;;;;;6314:22:8;:5;-1:-1:-1;;;;;6314:22:8;;6310:288;;;6352:25;;-1:-1:-1;;;;;6352:14:8;;;6367:9;6352:25;;;;;;;;;6367:9;6352:14;:25;;;;;;;;;;;;;;;;;;;;;6310:288;;;6408:13;6424:32;6448:7;6424:23;:32::i;:::-;6408:48;-1:-1:-1;;;;;;6471:14:8;;:51;6518:3;6500:13;6408:48;6518:3;6500:13;:::i;:::-;6487:27;;;;:9;:27;:::i;:::-;6486:35;;;;:::i;:::-;6471:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6536:22:8;;:51;6583:3;6560:19;;;;:9;:19;:::i;:::-;6559:27;;;;:::i;:::-;6536:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6394:204;6310:288;5270:1334;;;;5161:1443;;:::o;1740:207::-;1803:7;1830:16;1838:7;1830;:16::i;:::-;1822:71;;;;-1:-1:-1;;;1822:71:8;;15200:2:20;1822:71:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;1822:71:8;14998:406:20;1822:71:8;-1:-1:-1;1919:21:8;;;;:12;:21;;;;;;;1740:207::o;19272:176:7:-;19383:5;19413:27;19431:8;19413:17;:27::i;2876:307::-;2998:7;-1:-1:-1;;;;;3045:19:7;;3023:111;;;;-1:-1:-1;;;3023:111:7;;20729:2:20;3023:111:7;;;20711:21:20;20768:2;20748:18;;;20741:30;20807:34;20787:18;;;20780:62;20878:12;20858:18;;;20851:40;20908:19;;3023:111:7;20527:406:20;3023:111:7;-1:-1:-1;;;;;;3154:21:7;;;;;:14;:21;;;;;;;2876:307::o;5954:552::-;6074:13;6113:16;6121:7;6113;:16::i;:::-;6105:63;;;;-1:-1:-1;;;6105:63:7;;8369:2:20;6105:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;6105:63:7;8167:398:20;6105:63:7;6233:1;6207:15;;;:6;:15;;;;;6201:29;;;;;:::i;:::-;;;:33;6179:124;;;;-1:-1:-1;;;6179:124:7;;21140:2:20;6179:124:7;;;21122:21:20;21179:2;21159:18;;;21152:30;21218:34;21198:18;;;21191:62;21289:11;21269:18;;;21262:39;21318:19;;6179:124:7;20938:405:20;6179:124:7;6316:21;6340:10;:8;:10::i;:::-;6316:34;;6405:1;6387:7;6381:21;:25;:117;;;;;;;;;;;;;;;;;6450:7;6459:6;:15;6466:7;6459:15;;;;;;;;;;;6433:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6381:117;6361:137;5954:552;-1:-1:-1;;;5954:552:7:o;3786:404:8:-;3908:22;3922:7;3908:13;:22::i;:::-;3887:111;;;;-1:-1:-1;;;3887:111:8;;15200:2:20;3887:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;3887:111:8;14998:406:20;3887:111:8;4043:1;4030:10;:14;4009:127;;;;-1:-1:-1;;;4009:127:8;;23131:2:20;4009:127:8;;;23113:21:20;23170:2;23150:18;;;23143:30;23209:34;23189:18;;;23182:62;23280:34;23260:18;;;23253:62;23352:4;23331:19;;;23324:33;23374:19;;4009:127:8;22929:470:20;4009:127:8;4147:23;;;;:14;:23;;;;;;:36;3786:404::o;4387:382::-;4488:22;4502:7;4488:13;:22::i;:::-;4467:111;;;;-1:-1:-1;;;4467:111:8;;15200:2:20;4467:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;4467:111:8;14998:406:20;4467:111:8;4623:1;4610:10;:14;4589:128;;;;-1:-1:-1;;;4589:128:8;;23606:2:20;4589:128:8;;;23588:21:20;23645:2;23625:18;;;23618:30;23684:34;23664:18;;;23657:62;23755:34;23735:18;;;23728:62;23827:5;23806:19;;;23799:34;23850:19;;4589:128:8;23404:471:20;4589:128:8;4728:21;;;;:12;:21;;;;;;:34;4387:382::o;1303:205::-;1369:7;1396:16;1404:7;1396;:16::i;:::-;1388:71;;;;-1:-1:-1;;;1388:71:8;;15200:2:20;1388:71:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;1388:71:8;14998:406:20;1388:71:8;-1:-1:-1;1477:24:8;;;;:15;:24;;;;;;;1303:205::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;15611:2:20;1240:68:0;;;15593:21:20;;;15630:18;;;15623:30;15689:34;15669:18;;;15662:62;15741:18;;1240:68:0;15409:356:20;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;24082:2:20;1998:73:0::1;::::0;::::1;24064:21:20::0;24121:2;24101:18;;;24094:30;24160:34;24140:18;;;24133:62;24231:8;24211:18;;;24204:36;24257:19;;1998:73:0::1;23880:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;20269:220:7:-;20426:55;20437:6;20445:7;20454:26;20426:10;:55::i;7726:1255:8:-;7823:22;7837:7;7823:13;:22::i;:::-;7802:111;;;;-1:-1:-1;;;7802:111:8;;15200:2:20;7802:111:8;;;15182:21:20;15239:2;15219:18;;;15212:30;15278:34;15258:18;;;15251:62;-1:-1:-1;;;15329:18:20;;;15322:40;15379:19;;7802:111:8;14998:406:20;7802:111:8;7972:1;7945:24;;;:15;:24;;;;;;7924:150;;;;-1:-1:-1;;;7924:150:8;;24489:2:20;7924:150:8;;;24471:21:20;24528:2;24508:18;;;24501:30;24567:34;24547:18;;;24540:62;24638:34;24618:18;;;24611:62;24710:13;24689:19;;;24682:42;24741:19;;7924:150:8;24287:479:20;7924:150:8;8119:24;;;;:15;:24;;;;;;8106:9;:37;;8085:192;;;;-1:-1:-1;;;8085:192:8;;24973:2:20;8085:192:8;;;24955:21:20;25012:3;24992:18;;;24985:31;25052:34;25032:18;;;25025:62;25123:34;25103:18;;;25096:62;25195:34;25174:19;;;25167:63;25267:14;25246:19;;;25239:43;25299:19;;8085:192:8;24771:553:20;8085:192:8;719:10:2;8288:154:8;;;;-1:-1:-1;;;8288:154:8;;16448:2:20;8288:154:8;;;16430:21:20;16487:2;16467:18;;;16460:30;16526:34;16506:18;;;16499:62;16597:34;16577:18;;;16570:62;-1:-1:-1;;;16648:19:20;;;16641:42;16700:19;;8288:154:8;16246:479:20;8288:154:8;8453:21;8485:22;8499:7;8485:13;:22::i;:::-;8453:55;;8518:29;8558:30;8580:7;8558:21;:30::i;:::-;8518:71;-1:-1:-1;8600:66:8;8631:5;719:10:2;8658:7:8;8600:30;:66::i;:::-;8690:13;-1:-1:-1;;;;;8681:22:8;:5;-1:-1:-1;;;;;8681:22:8;;8677:298;;;8719:25;;-1:-1:-1;;;;;8719:14:8;;;8734:9;8719:25;;;;;;;;;8734:9;8719:14;:25;;;;;;;;;;;;;;;;;;;8677:298;8775:13;8791:43;8826:7;8791:34;:43::i;:::-;8775:59;-1:-1:-1;;;;;;8848:14:8;;:51;8895:3;8877:13;8775:59;8895:3;8877:13;:::i;:::-;8864:27;;;;:9;:27;:::i;:::-;8863:35;;;;:::i;:::-;8848:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8913:22:8;;:51;8960:3;8937:19;;;;:9;:19;:::i;:::-;8936:27;;;;:::i;:::-;8913:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8761:214;7792:1189;;7726:1255;:::o;5698:184:7:-;5763:4;5788:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5788:16:7;:30;;;;:85;;-1:-1:-1;;5871:1:7;5835:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5835:24:7;:38;;;5698:184::o;7824:207::-;7948:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;7948:29:7;-1:-1:-1;;;;;7948:29:7;;;;;;;;;7995:28;;7948:24;;7995:28;;;;;;;7824:207;;;:::o;9590:408::-;9719:4;9749:16;9757:7;9749;:16::i;:::-;9741:63;;;;-1:-1:-1;;;9741:63:7;;8369:2:20;9741:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;9741:63:7;8167:398:20;9741:63:7;9815:13;9831:24;9847:7;9831:15;:24::i;:::-;9815:40;;9887:5;-1:-1:-1;;;;;9876:16:7;:7;-1:-1:-1;;;;;9876:16:7;;:64;;;;9933:7;-1:-1:-1;;;;;9909:31:7;:20;9921:7;9909:11;:20::i;:::-;-1:-1:-1;;;;;9909:31:7;;9876:64;:113;;;-1:-1:-1;;;;;;9380:25:7;;;9351:4;9380:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9957:32;9868:122;9590:408;-1:-1:-1;;;;9590:408:7:o;12726:415::-;12898:44;12924:4;12930:2;12934:7;12898:25;:44::i;:::-;12977:64;13017:4;13023:2;13027:7;13036:4;12977:39;:64::i;:::-;12955:178;;;;;-1:-1:-1;;;12955:178:7;;25531:2:20;12955:178:7;;;25513:21:20;25550:18;;;25543:30;;;;25609:34;25589:18;;;25582:62;25680:34;25660:18;;;25653:62;25732:19;;12955:178:7;25329:428:20;19926:278:7;20049:5;20080:17;20088:8;20080:7;:17::i;:::-;20072:64;;;;-1:-1:-1;;;20072:64:7;;8369:2:20;20072:64:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;20072:64:7;8167:398:20;20072:64:7;-1:-1:-1;20156:40:7;;;;:30;:40;;;;;;;;;19926:278::o;10165:448::-;10302:4;10332:16;10340:7;10332;:16::i;:::-;10324:63;;;;-1:-1:-1;;;10324:63:7;;8369:2:20;10324:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;10324:63:7;8167:398:20;10324:63:7;10398:21;10422:32;10446:7;10422:23;:32::i;15331:412::-;15502:43;15527:4;15533:2;15537:7;15502:24;:43::i;:::-;15580:63;15619:4;15625:2;15629:7;15638:4;15580:38;:63::i;11140:716::-;11280:13;11296:24;11312:7;11296:15;:24::i;:::-;11280:40;;11362:4;-1:-1:-1;;;;;11353:13:7;:5;-1:-1:-1;;;;;11353:13:7;;11331:129;;;;-1:-1:-1;;;11331:129:7;;25964:2:20;11331:129:7;;;25946:21:20;26003:2;25983:18;;;25976:30;26042:34;26022:18;;;26015:62;26113:34;26093:18;;;26086:62;26185:4;26164:19;;;26157:33;26207:19;;11331:129:7;25762:470:20;11331:129:7;-1:-1:-1;;;;;11493:16:7;;11471:111;;;;-1:-1:-1;;;11471:111:7;;26439:2:20;11471:111:7;;;26421:21:20;26478:2;26458:18;;;26451:30;26517:34;26497:18;;;26490:62;26588:15;26568:18;;;26561:43;26621:19;;11471:111:7;26237:409:20;11471:111:7;11647:36;11656:5;11671:1;11675:7;11647:8;:36::i;:::-;-1:-1:-1;;;;;11696:20:7;;;;;;:14;:20;;;;;:25;;11720:1;;11696:20;:25;;11720:1;;11696:25;:::i;:::-;;;;-1:-1:-1;;;;;;;11732:18:7;;;;;;:14;:18;;;;;:23;;11754:1;;11732:18;:23;;11754:1;;11732:23;:::i;:::-;;;;-1:-1:-1;;11766:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;11766:21:7;-1:-1:-1;;;;;11766:21:7;;;;;;;;;11805:43;;11766:16;;11805:43;;;;;;;11269:587;11140:716;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;17555:504:7:-;-1:-1:-1;;;;;17635:16:7;;17627:68;;;;-1:-1:-1;;;17627:68:7;;26986:2:20;17627:68:7;;;26968:21:20;27025:2;27005:18;;;26998:30;27064:34;27044:18;;;27037:62;27135:9;27115:18;;;27108:37;27162:19;;17627:68:7;26784:403:20;17627:68:7;17715:16;17723:7;17715;:16::i;:::-;17714:17;17706:64;;;;-1:-1:-1;;;17706:64:7;;27394:2:20;17706:64:7;;;27376:21:20;27433:2;27413:18;;;27406:30;27472:34;27452:18;;;27445:62;27543:4;27523:18;;;27516:32;27565:19;;17706:64:7;27192:398:20;17706:64:7;-1:-1:-1;;;;;17783:18:7;;;;;;:14;:18;;;;;:23;;17805:1;;17783:18;:23;;17805:1;;17783:23;:::i;:::-;;;;-1:-1:-1;;;;;;;17817:26:7;;;;;;:22;:26;;;;;:31;;17847:1;;17817:26;:31;;17847:1;;17817:31;:::i;:::-;;;;-1:-1:-1;;17859:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;17859:21:7;;-1:-1:-1;;17859:21:7;;;;;;;;17891:15;:24;;;;;;:29;;;;;;;;;;17938:49;17867:7;;17859:16;17938:49;;17859:16;;17938:49;18003:48;;18043:7;;-1:-1:-1;;;;;18003:48:7;;;18035:1;;18003:48;;18035:1;;18003:48;17555:504;;:::o;18067:220::-;18189:16;18197:7;18189;:16::i;:::-;18181:63;;;;-1:-1:-1;;;18181:63:7;;8369:2:20;18181:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;18181:63:7;8167:398:20;18181:63:7;18257:15;;;;:6;:15;;;;;:22;;18275:4;;18257:22;:::i;18562:702::-;18725:16;18733:7;18725;:16::i;:::-;18717:63;;;;-1:-1:-1;;;18717:63:7;;8369:2:20;18717:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;18717:63:7;8167:398:20;18717:63:7;18854:3;18837:13;:20;;;;18793:141;;;;-1:-1:-1;;;18793:141:7;;27797:2:20;18793:141:7;;;27779:21:20;27836:2;27816:18;;;27809:30;27875:34;27855:18;;;27848:62;27946:19;27926:18;;;27919:47;27983:19;;18793:141:7;27595:413:20;18793:141:7;19030:3;19002:24;:31;;;;18947:175;;;;-1:-1:-1;;;18947:175:7;;28215:2:20;18947:175:7;;;28197:21:20;28254:2;28234:18;;;28227:30;28293:34;28273:18;;;28266:62;28364:31;28344:18;;;28337:59;28413:19;;18947:175:7;28013:425:20;18947:175:7;19135:28;;;;:19;:28;;;;;;;;:44;;-1:-1:-1;;19135:44:7;;;;;;;;;;;19190:30;:39;;;;;;:66;;;;;;;;;;18562:702::o;13681:770::-;13820:21;13844:32;13868:7;13844:23;:32::i;:::-;13820:56;;13926:4;-1:-1:-1;;;;;13909:21:7;:13;-1:-1:-1;;;;;13909:21:7;;13887:137;;;;-1:-1:-1;;;13887:137:7;;25964:2:20;13887:137:7;;;25946:21:20;26003:2;25983:18;;;25976:30;26042:34;26022:18;;;26015:62;26113:34;26093:18;;;26086:62;26185:4;26164:19;;;26157:33;26207:19;;13887:137:7;25762:470:20;13887:137:7;-1:-1:-1;;;;;14057:16:7;;14035:111;;;;-1:-1:-1;;;14035:111:7;;26439:2:20;14035:111:7;;;26421:21:20;26478:2;26458:18;;;26451:30;26517:34;26497:18;;;26490:62;26588:15;26568:18;;;26561:43;26621:19;;14035:111:7;26237:409:20;14035:111:7;14211:44;14220:13;14243:1;14247:7;14211:8;:44::i;:::-;-1:-1:-1;;;;;14268:28:7;;;;;;:22;:28;;;;;:33;;14300:1;;14268:28;:33;;14300:1;;14268:33;:::i;:::-;;;;-1:-1:-1;;;;;;;14312:26:7;;;;;;:22;:26;;;;;:31;;14342:1;;14312:26;:31;;14342:1;;14312:31;:::i;:::-;;;;-1:-1:-1;;14354:24:7;;;;:15;:24;;;;;;:29;;-1:-1:-1;;14354:29:7;-1:-1:-1;;;;;14354:29:7;;;;;;;;;14401:42;;14354:24;;14401:42;;;;;;;13809:642;13681:770;;;:::o;8762:375::-;8931:8;-1:-1:-1;;;;;8922:17:7;:5;-1:-1:-1;;;;;8922:17:7;;;8900:111;;;;-1:-1:-1;;;8900:111:7;;28645:2:20;8900:111:7;;;28627:21:20;28684:2;28664:18;;;28657:30;28723:34;28703:18;;;28696:62;28794:14;28774:18;;;28767:42;28826:19;;8900:111:7;28443:408:20;8900:111:7;-1:-1:-1;;;;;9024:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;9024:46:7;;;;;;;;;;9088:41;;9024:46;;:35;:25;9088:41;;;8762:375;;;:::o;19456:256::-;19568:5;19599:17;19607:8;19599:7;:17::i;:::-;19591:64;;;;-1:-1:-1;;;19591:64:7;;8369:2:20;19591:64:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;19591:64:7;8167:398:20;19591:64:7;-1:-1:-1;19675:29:7;;;;:19;:29;;;;;;;;;19456:256::o;2000:104:8:-;2060:13;2092:5;2085:12;;;;;:::i;20545:573:7:-;-1:-1:-1;;;;;20718:20:7;;20696:113;;;;-1:-1:-1;;;20696:113:7;;11918:2:20;20696:113:7;;;11900:21:20;11957:2;11937:18;;;11930:30;11996:34;11976:18;;;11969:62;-1:-1:-1;;;12047:18:20;;;12040:41;12098:19;;20696:113:7;11716:407:20;20696:113:7;20830:16;20838:7;20830;:16::i;:::-;20822:63;;;;-1:-1:-1;;;20822:63:7;;8369:2:20;20822:63:7;;;8351:21:20;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;-1:-1:-1;;;8498:18:20;;;8491:32;8540:19;;20822:63:7;8167:398:20;20822:63:7;20898:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20898:25:7;;;;;;;;;;;:54;;;20963:21;;;:12;:21;;;;;:34;;;;;;;;;;;;;;;;;-1:-1:-1;;20963:34:7;;;;;21008:23;;;:15;:23;;;;;:28;;20963:34;;21008:23;;:28;;20963:34;;21008:28;:::i;:::-;;;;-1:-1:-1;;21054:56:7;;4574:25:20;;;21074:7:7;;-1:-1:-1;;;;;21054:56:7;;;;;4562:2:20;4547:18;21054:56:7;;;;;;;20545:573;;;:::o;24998:1213::-;25169:4;-1:-1:-1;;;;;25190:13:7;;1087:20:1;1133:8;25186:1018:7;;25243:250;;;;;-1:-1:-1;;;;;25243:92:7;;;;;:250;;719:10:2;;25401:4:7;;25432:7;;25466:4;;25243:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25243:250:7;;;;;;;;-1:-1:-1;;25243:250:7;;;;;;;;;;;;:::i;:::-;;;25222:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25804:13:7;;25800:334;;25847:122;;;-1:-1:-1;;;25847:122:7;;25531:2:20;25847:122:7;;;25513:21:20;25550:18;;;25543:30;;;;25609:34;25589:18;;;25582:62;25680:34;25660:18;;;25653:62;25732:19;;25847:122:7;25329:428:20;25800:334:7;26084:6;26078:13;26069:6;26065:2;26061:15;26054:38;25222:927;25578:158;;25609:127;25578:158;;-1:-1:-1;25550:186:7;;25186:1018;-1:-1:-1;26188:4:7;24998:1213;;;;;;:::o;23187:1229::-;23357:4;-1:-1:-1;;;;;23378:13:7;;1087:20:1;1133:8;23374:1035:7;;23431:248;;;;;-1:-1:-1;;;;;23431:90:7;;;;;:248;;719:10:2;;23587:4:7;;23618:7;;23652:4;;23431:248;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23431:248:7;;;;;;;;-1:-1:-1;;23431:248:7;;;;;;;;;;;;:::i;:::-;;;23410:944;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23988:13:7;;23984:355;;24031:143;;-1:-1:-1;;;24031:143:7;;29829:2:20;24031:143:7;;;29811:21:20;29868:2;29848:18;;;29841:30;29907:34;29887:18;;;29880:62;29978:34;29958:18;;;29951:62;30050:23;30029:19;;;30022:52;30091:19;;24031:143:7;29627:489:20;23410:944:7;23764:156;;23795:125;23764:156;;-1:-1:-1;23736:184:7;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:20;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:20;868:16;;861:27;638:258::o;901:317::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1132:2;1120:15;-1:-1:-1;;1116:88:20;1107:98;;;;1207:4;1103:109;;901:317;-1:-1:-1;;901:317:20:o;1223:220::-;1372:2;1361:9;1354:21;1335:4;1392:45;1433:2;1422:9;1418:18;1410:6;1392:45;:::i;1448:180::-;1507:6;1560:2;1548:9;1539:7;1535:23;1531:32;1528:52;;;1576:1;1573;1566:12;1528:52;-1:-1:-1;1599:23:20;;1448:180;-1:-1:-1;1448:180:20:o;1864:196::-;1932:20;;-1:-1:-1;;;;;1981:54:20;;1971:65;;1961:93;;2050:1;2047;2040:12;1961:93;1864:196;;;:::o;2065:254::-;2133:6;2141;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2309:2;2294:18;;;;2281:32;;-1:-1:-1;;;2065:254:20:o;2324:184::-;-1:-1:-1;;;2373:1:20;2366:88;2473:4;2470:1;2463:15;2497:4;2494:1;2487:15;2513:1197;2608:6;2616;2624;2632;2685:3;2673:9;2664:7;2660:23;2656:33;2653:53;;;2702:1;2699;2692:12;2653:53;2725:29;2744:9;2725:29;:::i;:::-;2715:39;;2773:38;2807:2;2796:9;2792:18;2773:38;:::i;:::-;2763:48;;2858:2;2847:9;2843:18;2830:32;2820:42;;2913:2;2902:9;2898:18;2885:32;2936:18;2977:2;2969:6;2966:14;2963:34;;;2993:1;2990;2983:12;2963:34;3031:6;3020:9;3016:22;3006:32;;3076:7;3069:4;3065:2;3061:13;3057:27;3047:55;;3098:1;3095;3088:12;3047:55;3134:2;3121:16;3156:2;3152;3149:10;3146:36;;;3162:18;;:::i;:::-;3296:2;3290:9;3358:4;3350:13;;-1:-1:-1;;3346:22:20;;;3370:2;3342:31;3338:40;3326:53;;;3394:18;;;3414:22;;;3391:46;3388:72;;;3440:18;;:::i;:::-;3480:10;3476:2;3469:22;3515:2;3507:6;3500:18;3555:7;3550:2;3545;3541;3537:11;3533:20;3530:33;3527:53;;;3576:1;3573;3566:12;3527:53;3632:2;3627;3623;3619:11;3614:2;3606:6;3602:15;3589:46;3677:1;3672:2;3667;3659:6;3655:15;3651:24;3644:35;3698:6;3688:16;;;;;;;2513:1197;;;;;;;:::o;3904:328::-;3981:6;3989;3997;4050:2;4038:9;4029:7;4025:23;4021:32;4018:52;;;4066:1;4063;4056:12;4018:52;4089:29;4108:9;4089:29;:::i;:::-;4079:39;;4137:38;4171:2;4160:9;4156:18;4137:38;:::i;:::-;4127:48;;4222:2;4211:9;4207:18;4194:32;4184:42;;3904:328;;;;;:::o;4237:186::-;4296:6;4349:2;4337:9;4328:7;4324:23;4320:32;4317:52;;;4365:1;4362;4355:12;4317:52;4388:29;4407:9;4388:29;:::i;4610:254::-;4678:6;4686;4739:2;4727:9;4718:7;4714:23;4710:32;4707:52;;;4755:1;4752;4745:12;4707:52;4791:9;4778:23;4768:33;;4820:38;4854:2;4843:9;4839:18;4820:38;:::i;:::-;4810:48;;4610:254;;;;;:::o;4869:248::-;4937:6;4945;4998:2;4986:9;4977:7;4973:23;4969:32;4966:52;;;5014:1;5011;5004:12;4966:52;-1:-1:-1;;5037:23:20;;;5107:2;5092:18;;;5079:32;;-1:-1:-1;4869:248:20:o;5122:156::-;5188:20;;5248:4;5237:16;;5227:27;;5217:55;;5268:1;5265;5258:12;5283:807;5377:6;5385;5393;5401;5409;5462:3;5450:9;5441:7;5437:23;5433:33;5430:53;;;5479:1;5476;5469:12;5430:53;5502:29;5521:9;5502:29;:::i;:::-;5492:39;;5582:2;5571:9;5567:18;5554:32;5605:18;5646:2;5638:6;5635:14;5632:34;;;5662:1;5659;5652:12;5632:34;5700:6;5689:9;5685:22;5675:32;;5745:7;5738:4;5734:2;5730:13;5726:27;5716:55;;5767:1;5764;5757:12;5716:55;5807:2;5794:16;5833:2;5825:6;5822:14;5819:34;;;5849:1;5846;5839:12;5819:34;5894:7;5889:2;5880:6;5876:2;5872:15;5868:24;5865:37;5862:57;;;5915:1;5912;5905:12;5862:57;5946:2;5942;5938:11;5928:21;;5968:6;5958:16;;;;;5993:36;6025:2;6014:9;6010:18;5993:36;:::i;:::-;5983:46;;6048:36;6080:2;6069:9;6065:18;6048:36;:::i;:::-;6038:46;;5283:807;;;;;;;;:::o;6095:347::-;6160:6;6168;6221:2;6209:9;6200:7;6196:23;6192:32;6189:52;;;6237:1;6234;6227:12;6189:52;6260:29;6279:9;6260:29;:::i;:::-;6250:39;;6339:2;6328:9;6324:18;6311:32;6386:5;6379:13;6372:21;6365:5;6362:32;6352:60;;6408:1;6405;6398:12;6352:60;6431:5;6421:15;;;6095:347;;;;;:::o;6447:681::-;6618:2;6670:21;;;6740:13;;6643:18;;;6762:22;;;6589:4;;6618:2;6841:15;;;;6815:2;6800:18;;;6589:4;6884:218;6898:6;6895:1;6892:13;6884:218;;;6963:13;;-1:-1:-1;;;;;6959:62:20;6947:75;;7077:15;;;;7042:12;;;;6920:1;6913:9;6884:218;;;-1:-1:-1;7119:3:20;;6447:681;-1:-1:-1;;;;;;6447:681:20:o;7133:260::-;7201:6;7209;7262:2;7250:9;7241:7;7237:23;7233:32;7230:52;;;7278:1;7275;7268:12;7230:52;7301:29;7320:9;7301:29;:::i;:::-;7291:39;;7349:38;7383:2;7372:9;7368:18;7349:38;:::i;7398:322::-;7475:6;7483;7491;7544:2;7532:9;7523:7;7519:23;7515:32;7512:52;;;7560:1;7557;7550:12;7512:52;7583:29;7602:9;7583:29;:::i;:::-;7573:39;7659:2;7644:18;;7631:32;;-1:-1:-1;7710:2:20;7695:18;;;7682:32;;7398:322;-1:-1:-1;;;7398:322:20:o;7725:437::-;7804:1;7800:12;;;;7847;;;7868:61;;7922:4;7914:6;7910:17;7900:27;;7868:61;7975:2;7967:6;7964:14;7944:18;7941:38;7938:218;;;-1:-1:-1;;;8009:1:20;8002:88;8113:4;8110:1;8103:15;8141:4;8138:1;8131:15;7938:218;;7725:437;;;:::o;12542:184::-;-1:-1:-1;;;12591:1:20;12584:88;12691:4;12688:1;12681:15;12715:4;12712:1;12705:15;12731:228;12771:7;12897:1;-1:-1:-1;;12825:74:20;12822:1;12819:81;12814:1;12807:9;12800:17;12796:105;12793:131;;;12904:18;;:::i;:::-;-1:-1:-1;12944:9:20;;12731:228::o;12964:184::-;-1:-1:-1;;;13013:1:20;13006:88;13113:4;13110:1;13103:15;13137:4;13134:1;13127:15;13153:125;13193:4;13221:1;13218;13215:8;13212:34;;;13226:18;;:::i;:::-;-1:-1:-1;13263:9:20;;13153:125::o;13283:184::-;-1:-1:-1;;;13332:1:20;13325:88;13432:4;13429:1;13422:15;13456:4;13453:1;13446:15;13472:195;13511:3;-1:-1:-1;;13535:5:20;13532:77;13529:103;;;13612:18;;:::i;:::-;-1:-1:-1;13659:1:20;13648:13;;13472:195::o;19135:274::-;19175:1;19201;19191:189;;-1:-1:-1;;;19233:1:20;19226:88;19337:4;19334:1;19327:15;19365:4;19362:1;19355:15;19191:189;-1:-1:-1;19394:9:20;;19135:274::o;20327:195::-;20365:4;20402;20399:1;20395:12;20434:4;20431:1;20427:12;20459:3;20454;20451:12;20448:38;;;20466:18;;:::i;:::-;20503:13;;;20327:195;-1:-1:-1;;;20327:195:20:o;21474:1450::-;21650:3;21688:6;21682:13;21714:4;21727:51;21771:6;21766:3;21761:2;21753:6;21749:15;21727:51;:::i;:::-;21863:13;;21800:16;;;;21836:1;;21923;21945:18;;;;21998;;;;22025:93;;22103:4;22093:8;22089:19;22077:31;;22025:93;22166:2;22156:8;22153:16;22133:18;22130:40;22127:224;;;-1:-1:-1;;;22200:3:20;22193:90;22306:4;22303:1;22296:15;22336:4;22331:3;22324:17;22127:224;22367:18;22394:168;;;;22576:1;22571:328;;;;22360:539;;22394:168;-1:-1:-1;;22433:9:20;22429:82;22422:5;22415:97;22543:8;22536:5;22532:20;22525:27;;22394:168;;22571:328;21421:1;21414:14;;;21458:4;21445:18;;22666:1;22680:169;22694:8;22691:1;22688:15;22680:169;;;22776:14;;22761:13;;;22754:37;22819:16;;;;22711:10;;22680:169;;;22684:3;;22880:8;22873:5;22869:20;22862:27;;22360:539;-1:-1:-1;22915:3:20;;21474:1450;-1:-1:-1;;;;;;;;;;21474:1450:20:o;26651:128::-;26691:3;26722:1;26718:6;26715:1;26712:13;26709:39;;;26728:18;;:::i;:::-;-1:-1:-1;26764:9:20;;26651:128::o;28856:512::-;29050:4;-1:-1:-1;;;;;29160:2:20;29152:6;29148:15;29137:9;29130:34;29212:2;29204:6;29200:15;29195:2;29184:9;29180:18;29173:43;;29252:6;29247:2;29236:9;29232:18;29225:34;29295:3;29290:2;29279:9;29275:18;29268:31;29316:46;29357:3;29346:9;29342:19;29334:6;29316:46;:::i;:::-;29308:54;28856:512;-1:-1:-1;;;;;;28856:512:20:o;29373:249::-;29442:6;29495:2;29483:9;29474:7;29470:23;29466:32;29463:52;;;29511:1;29508;29501:12;29463:52;29543:9;29537:16;29562:30;29586:5;29562:30;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./ERC1190.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev Implementation of ERC1190 with payable methods.\n */\ncontract ERC1190Tradable is ERC1190, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    event TokenMinted(\n        address creator,\n        uint8 royaltyForRental,\n        uint8 royaltyForOwnershipTransfer,\n        uint256 tokenId\n    );\n\n    // Base URI\n    string private _base;\n\n    // The price in wei of each token that can be owned.\n    mapping(uint256 => uint256) private _ownershipPrice;\n\n    // The price in wei of each token that can be creative owned.\n    mapping(uint256 => uint256) private _creativePrice;\n\n    // The price in wei of each token that can be rented.\n    mapping(uint256 => uint256) private _rentalPrice;\n\n    /**\n     * @dev See {ERC1190-constructor}.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        string memory tokenBaseUri\n    ) ERC1190(tokenName, tokenSymbol) {\n        _base = tokenBaseUri;\n    }\n\n    function availableTokens() external view returns (uint256) {\n        return _tokenIds.current();\n    }\n\n    function ownershipPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n\n        return _ownershipPrice[tokenId];\n    }\n\n    function creativeOwnershipPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n        \n        return _creativePrice[tokenId];\n    }\n\n    function rentalPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n        \n        return _rentalPrice[tokenId];\n    }\n\n    /**\n     * See {ERC1190-_baseURI}.\n     */\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _base;\n    }\n\n    /**\n     * @dev Generates a new token and assigns its ownership and creative\n     * license to `creator`.\n     * The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`.\n     */\n    function mint(\n        address creator,\n        string calldata file,\n        uint8 rentalRoyalty,\n        uint8 ownershipTransferRoyalty\n    ) external onlyOwner returns (uint256) {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        super._mint(creator, newItemId);\n        super._associateFile(newItemId, file);\n        super._setRoyalties(\n            newItemId,\n            rentalRoyalty,\n            ownershipTransferRoyalty\n        );\n\n        emit TokenMinted(creator, rentalRoyalty, ownershipTransferRoyalty, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the ownership license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setOwnershipLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The ownership license cost must be greater than 0.\"\n        );\n\n        _ownershipPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the creative license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setCreativeLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The creative license cost must be greater than 0.\"\n        );\n\n        _creativePrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for renting `tokenId` for 1 second.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setRentalPrice(uint256 tokenId, uint256 priceInWei) external {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The rental cost per second must be greater than 0.\"\n        );\n\n        _rentalPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A rental price must have been set via {setRentalPrice}.\n     * - `rentExpirationDateInMillis` should correspond to a future date.\n     * - the sent money should be enough to cover the renting expenses.\n     */\n    function rentAsset(uint256 tokenId, uint256 rentExpirationDateInMillis)\n        external\n        payable\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _rentalPrice[tokenId] > 0,\n            \"ERC1190Tradable: The asset related to this token is not rentable.\"\n        );\n\n        uint256 rentTimeInSeconds = (rentExpirationDateInMillis / 1000) -\n            block.timestamp;\n\n        require(\n            rentTimeInSeconds > 0,\n            \"ERC1190Tradable: The rental time must be positive.\"\n        );\n\n        uint256 rentalTotalPrice = rentTimeInSeconds * _rentalPrice[tokenId];\n\n        require(\n            msg.value >= rentalTotalPrice,\n            \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.rentAsset(\n            super._msgSender(),\n            tokenId,\n            rentExpirationDateInMillis\n        );\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForRental(tokenId);\n\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferOwnershipLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\n        );\n\n        address owner = super.ownerOf(tokenId);\n\n        require(\n            super._msgSender() == owner,\n            \"ERC1190Tradable: The sender does not own the ownership license.\"\n        );\n\n        super.transferOwnershipLicense(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A ownership license price must have been set via {setOwnershipLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainOwnershipLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _ownershipPrice[tokenId] > 0,\n            \"ERC1190Tradable: The ownership license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _ownershipPrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferOwnershipLicense(owner, super._msgSender(), tokenId);\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForOwnershipTransfer(tokenId);\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the creative license from the current creative owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the creative owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferCreativeLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\n        );\n\n        address creativeOwner = super.creativeOwnerOf(tokenId);\n\n        require(\n            super._msgSender() == creativeOwner,\n            \"ERC1190Tradable: The sender does not own the creative license.\"\n        );\n\n        super.transferCreativeLicense(creativeOwner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the creative license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A creative license price must have been set via {setCreativeLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainCreativeLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _creativePrice[tokenId] > 0,\n            \"ERC1190Tradable: The creative license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _creativePrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\n        );\n\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferCreativeLicense(\n            creativeOwner,\n            super._msgSender(),\n            tokenId\n        );\n\n        creativeOwner.transfer(msg.value);\n    }\n}\n",
  "sourcePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
  "ast": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2321
      ],
      "ERC1190Tradable": [
        3026
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        3042
      ],
      "IERC1190Approver": [
        3098
      ],
      "IERC1190CreativeLicenseReceiver": [
        3116
      ],
      "IERC1190CreativeOwner": [
        3178
      ],
      "IERC1190Metadata": [
        3205
      ],
      "IERC1190Owner": [
        3267
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3285
      ],
      "IERC1190Renter": [
        3336
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 3027,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2323,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2324,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 2322,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2325,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2326,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2328,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2321,
              "src": "289:7:8"
            },
            "id": 2329,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2330,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2331,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2327,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 3026,
        "linearizedBaseContracts": [
          3026,
          104,
          2321,
          3205,
          3042,
          3336,
          3178,
          3267,
          3098,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2335,
            "libraryName": {
              "id": 2332,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2334,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2333,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2338,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2336,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2348,
            "name": "TokenMinted",
            "nameLocation": "400:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "429:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "421:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "452:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "446:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "484:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "478:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "529:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "521:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:131:8"
            },
            "src": "394:149:8"
          },
          {
            "constant": false,
            "id": 2350,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "580:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "565:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2349,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "565:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2354,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "685:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "649:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2353,
              "keyType": {
                "id": 2351,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "649:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2358,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "809:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "773:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2357,
              "keyType": {
                "id": 2355,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "773:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2356,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2362,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "924:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "888:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2361,
              "keyType": {
                "id": 2359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "888:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2360,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "1152:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2376,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "1162:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2377,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "1170:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1162:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2363,
              "nodeType": "StructuredDocumentation",
              "src": "943:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2381,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2372,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2365,
                    "src": "1128:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2373,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2367,
                    "src": "1139:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2374,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2371,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2321,
                  "src": "1120:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2365,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1033:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1019:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1066:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1052:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1101:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1087:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:110:8"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:8"
            },
            "scope": 3026,
            "src": "998:191:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2390,
              "nodeType": "Block",
              "src": "1254:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2386,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "1271:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1271:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2385,
                  "id": 2389,
                  "nodeType": "Return",
                  "src": "1264:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1204:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:8"
            },
            "returnParameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "1245:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:8"
            },
            "scope": 3026,
            "src": "1195:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2409,
              "nodeType": "Block",
              "src": "1378:130:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2400,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2393,
                            "src": "1404:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2399,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1396:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2405,
                      "name": "_ownershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "1477:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2407,
                    "indexExpression": {
                      "id": 2406,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2393,
                      "src": "1493:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1477:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2397,
                  "id": 2408,
                  "nodeType": "Return",
                  "src": "1470:31:8"
                }
              ]
            },
            "functionSelector": "ef1e00e0",
            "id": 2410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipPriceOf",
            "nameLocation": "1312:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1337:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "1329:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:17:8"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "1369:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:8"
            },
            "scope": 3026,
            "src": "1303:205:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "1597:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2419,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "1623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2418,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1615:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2424,
                      "name": "_creativePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2358,
                      "src": "1704:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2426,
                    "indexExpression": {
                      "id": 2425,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "1719:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1704:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2416,
                  "id": 2427,
                  "nodeType": "Return",
                  "src": "1697:30:8"
                }
              ]
            },
            "functionSelector": "6f902516",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creativeOwnershipPriceOf",
            "nameLocation": "1523:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2412,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1556:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "1548:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:17:8"
            },
            "returnParameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "1588:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:9:8"
            },
            "scope": 3026,
            "src": "1514:220:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2447,
              "nodeType": "Block",
              "src": "1812:135:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2438,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "1838:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2437,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1830:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2443,
                      "name": "_rentalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2362,
                      "src": "1919:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2445,
                    "indexExpression": {
                      "id": 2444,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2431,
                      "src": "1932:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2435,
                  "id": 2446,
                  "nodeType": "Return",
                  "src": "1912:28:8"
                }
              ]
            },
            "functionSelector": "bf0a660b",
            "id": 2448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentalPriceOf",
            "nameLocation": "1749:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1771:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "1763:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:17:8"
            },
            "returnParameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "1803:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:9:8"
            },
            "scope": 3026,
            "src": "1740:207:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "2075:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2455,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2350,
                    "src": "2092:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2454,
                  "id": 2456,
                  "nodeType": "Return",
                  "src": "2085:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2449,
              "nodeType": "StructuredDocumentation",
              "src": "1953:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "2009:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:8"
            },
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:2:8"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "2060:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:15:8"
            },
            "scope": 3026,
            "src": "2000:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2516,
              "nodeType": "Block",
              "src": "2490:418:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2474,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "2500:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "2500:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2478,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:21:8"
                },
                {
                  "assignments": [
                    2480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2480,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "2540:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2516,
                      "src": "2532:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2532:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2484,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2481,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "2552:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "2552:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2488,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2593:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2489,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2602:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2485,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2581:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1855,
                      "src": "2581:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2491,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2495,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2643:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2496,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "2654:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2492,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "2622:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2502,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2702:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2503,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2725:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2504,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "2752:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2499,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2669:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "2669:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:117:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:117:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2508,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2509,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2823:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2510,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "2838:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2511,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2864:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2507,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "2802:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2513,
                  "nodeType": "EmitStatement",
                  "src": "2797:77:8"
                },
                {
                  "expression": {
                    "id": 2514,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2480,
                    "src": "2892:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2473,
                  "id": 2515,
                  "nodeType": "Return",
                  "src": "2885:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2459,
              "nodeType": "StructuredDocumentation",
              "src": "2110:194:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
            },
            "functionSelector": "9940a11a",
            "id": 2517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2469,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2462:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "2318:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "2340:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2332:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "2373:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2357:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "rentalRoyalty",
                  "nameLocation": "2393:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2387:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "mutability": "mutable",
                  "name": "ownershipTransferRoyalty",
                  "nameLocation": "2422:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2416:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:130:8"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 3026,
            "src": "2309:599:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "3236:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2528,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2520,
                            "src": "3281:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2526,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3267:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3267:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3303:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2534,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3389:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3402:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3389:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3368:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:128:8"
                },
                {
                  "expression": {
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2540,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "3507:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2542,
                      "indexExpression": {
                        "id": 2541,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "3523:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3507:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2543,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3534:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3507:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2518,
              "nodeType": "StructuredDocumentation",
              "src": "2914:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "3153:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3186:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3178:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3203:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3195:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3177:37:8"
            },
            "returnParameters": {
              "id": 2524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:8"
            },
            "scope": 3026,
            "src": "3144:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2576,
              "nodeType": "Block",
              "src": "3877:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2558,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2550,
                            "src": "3922:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2556,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3908:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3908:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3908:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2562,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2564,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2552,
                          "src": "4030:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4043:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4030:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4009:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2569,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:127:8"
                },
                {
                  "expression": {
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2570,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2358,
                        "src": "4147:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2572,
                      "indexExpression": {
                        "id": 2571,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "4162:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2573,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "4173:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4147:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2575,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2548,
              "nodeType": "StructuredDocumentation",
              "src": "3557:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3795:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3827:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3819:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2552,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3844:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3836:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3836:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:37:8"
            },
            "returnParameters": {
              "id": 2554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:8"
            },
            "scope": 3026,
            "src": "3786:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2606,
              "nodeType": "Block",
              "src": "4457:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2588,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2580,
                            "src": "4502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2586,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4488:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4488:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4488:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4524:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4467:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2592,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2594,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2582,
                          "src": "4610:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4623:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4610:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4589:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2599,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:128:8"
                },
                {
                  "expression": {
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2600,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "4728:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2602,
                      "indexExpression": {
                        "id": 2601,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2580,
                        "src": "4741:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4728:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2603,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2582,
                      "src": "4752:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4728:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2605,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2578,
              "nodeType": "StructuredDocumentation",
              "src": "4196:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "4396:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2580,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4419:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2607,
                  "src": "4411:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2582,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "4436:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2607,
                  "src": "4428:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4410:37:8"
            },
            "returnParameters": {
              "id": 2584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4457:0:8"
            },
            "scope": 3026,
            "src": "4387:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2742,
              "nodeType": "Block",
              "src": "5270:1334:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2618,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "5315:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2616,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5301:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "5301:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5301:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5337:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5280:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2624,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "5423:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2626,
                          "indexExpression": {
                            "id": 2625,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "5436:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5423:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5447:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5423:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5462:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5402:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:137:8"
                },
                {
                  "assignments": [
                    2633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2633,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5558:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "5550:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5550:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2641,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2634,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2612,
                            "src": "5579:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5608:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5579:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2637,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5578:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2638,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5628:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5628:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5578:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5550:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2643,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2633,
                          "src": "5675:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5695:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5675:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5710:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5654:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2648,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:118:8"
                },
                {
                  "assignments": [
                    2650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2650,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5791:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "5783:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5783:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2651,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "5810:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2652,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "5830:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2654,
                      "indexExpression": {
                        "id": 2653,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "5843:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5830:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5810:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5783:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2658,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5883:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5883:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2660,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2650,
                          "src": "5896:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5883:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5926:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5862:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5862:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "5862:161:8"
                },
                {
                  "assignments": [
                    2666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2666,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6050:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "6034:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6034:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2674,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2671,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "6080:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2669,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6066:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "6066:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6066:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6058:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6058:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6034:55:8"
                },
                {
                  "assignments": [
                    2676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2676,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "6115:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "6099:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6099:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2681,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "6161:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2679,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6139:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "6139:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6139:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6131:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2677,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6131:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6099:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2688,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6210:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "6210:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6210:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2691,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "6242:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2692,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2612,
                        "src": "6263:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2685,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6181:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2008,
                      "src": "6181:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6181:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2694,
                  "nodeType": "ExpressionStatement",
                  "src": "6181:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2695,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "6314:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2696,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2676,
                      "src": "6323:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6314:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "6394:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2707
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2707,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "6414:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2740,
                            "src": "6408:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2706,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6408:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2712,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2710,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "6448:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2708,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6424:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1959,
                            "src": "6424:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6408:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2716,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6487:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6487:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2720,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2718,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6500:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2719,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2707,
                                            "src": "6506:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6500:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2721,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6499:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6487:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2723,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6486:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6518:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6486:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2713,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2666,
                              "src": "6471:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6471:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6471:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2727,
                        "nodeType": "ExpressionStatement",
                        "src": "6471:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2731,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6560:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6560:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2733,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2707,
                                      "src": "6572:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6560:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2735,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6559:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6583:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6559:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2728,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2676,
                              "src": "6536:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6536:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6536:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "6536:51:8"
                      }
                    ]
                  },
                  "id": 2741,
                  "nodeType": "IfStatement",
                  "src": "6310:288:8",
                  "trueBody": {
                    "id": 2705,
                    "nodeType": "Block",
                    "src": "6338:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2701,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6367:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6367:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2698,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2666,
                              "src": "6352:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6352:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2704,
                        "nodeType": "ExpressionStatement",
                        "src": "6352:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2608,
              "nodeType": "StructuredDocumentation",
              "src": "4775:381:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "5170:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2610,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5188:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5180:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2612,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "5205:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5197:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5179:53:8"
            },
            "returnParameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5270:0:8"
            },
            "scope": 3026,
            "src": "5161:1443:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "6971:413:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2752,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2748,
                          "src": "7002:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7016:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7008:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2753,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7008:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7008:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7002:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7032:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6981:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2760,
                  "nodeType": "ExpressionStatement",
                  "src": "6981:138:8"
                },
                {
                  "assignments": [
                    2762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2762,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7138:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2785,
                      "src": "7130:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2761,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7130:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2767,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2765,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "7160:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2763,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7146:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "7146:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7146:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7130:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2769,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7200:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7200:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7200:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2772,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2762,
                          "src": "7222:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7200:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7241:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7179:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2780,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2762,
                        "src": "7358:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2781,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "7365:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2782,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "7369:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2777,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7327:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "7327:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7327:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "7327:50:8"
                }
              ]
            },
            "documentation": {
              "id": 2744,
              "nodeType": "StructuredDocumentation",
              "src": "6610:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "6908:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6941:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "6933:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6958:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "6950:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6932:29:8"
            },
            "returnParameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6971:0:8"
            },
            "scope": 3026,
            "src": "6899:485:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2908,
              "nodeType": "Block",
              "src": "7792:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2795,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "7837:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2793,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7823:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7823:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7823:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7859:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7802:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7802:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2799,
                  "nodeType": "ExpressionStatement",
                  "src": "7802:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2801,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "7945:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2803,
                          "indexExpression": {
                            "id": 2802,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "7961:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7945:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7972:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7945:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7987:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7924:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7924:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "7924:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2810,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8106:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8106:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2812,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "8119:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2814,
                          "indexExpression": {
                            "id": 2813,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8135:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8119:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8106:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8157:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8085:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "8085:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2820,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8309:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8309:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8309:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8339:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8331:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2823,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8331:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8331:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8309:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8355:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8288:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2830,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:154:8"
                },
                {
                  "assignments": [
                    2832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2832,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8469:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2908,
                      "src": "8453:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2831,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8453:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2840,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2837,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8499:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2835,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8485:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8485:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8485:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8477:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8477:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8477:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8453:55:8"
                },
                {
                  "assignments": [
                    2842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2842,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8534:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2908,
                      "src": "8518:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8518:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2850,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2847,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8580:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2845,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8558:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8558:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8558:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8550:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2843,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8550:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8550:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8518:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2854,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "8631:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2855,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8638:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8638:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8638:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2858,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2789,
                        "src": "8658:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2851,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8600:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "8600:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "8600:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2861,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2832,
                      "src": "8681:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2862,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "8690:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8681:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2906,
                    "nodeType": "Block",
                    "src": "8761:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2873
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2873,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8781:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2906,
                            "src": "8775:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2872,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8775:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2878,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2876,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "8826:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2874,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8791:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1990,
                            "src": "8791:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8775:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2882,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8864:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8864:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2886,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2884,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8877:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2885,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2873,
                                            "src": "8883:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "8877:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2887,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8876:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8864:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2889,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8863:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8895:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8863:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2879,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2832,
                              "src": "8848:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8848:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8848:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2893,
                        "nodeType": "ExpressionStatement",
                        "src": "8848:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2900,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2897,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8937:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8937:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2899,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2873,
                                      "src": "8949:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8937:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2901,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8936:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8960:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8936:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2894,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "8913:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8913:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8913:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2905,
                        "nodeType": "ExpressionStatement",
                        "src": "8913:51:8"
                      }
                    ]
                  },
                  "id": 2907,
                  "nodeType": "IfStatement",
                  "src": "8677:298:8",
                  "trueBody": {
                    "id": 2871,
                    "nodeType": "Block",
                    "src": "8705:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2867,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8734:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8734:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2864,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2832,
                              "src": "8719:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8719:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8719:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2870,
                        "nodeType": "ExpressionStatement",
                        "src": "8719:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2787,
              "nodeType": "StructuredDocumentation",
              "src": "7390:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7735:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2789,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7766:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2909,
                  "src": "7758:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7757:17:8"
            },
            "returnParameters": {
              "id": 2791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7792:0:8"
            },
            "scope": 3026,
            "src": "7726:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2951,
              "nodeType": "Block",
              "src": "9364:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2918,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "9395:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9409:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9401:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2919,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9401:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9401:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9395:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9425:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9374:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2926,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:137:8"
                },
                {
                  "assignments": [
                    2928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2928,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9530:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2951,
                      "src": "9522:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2927,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9522:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2933,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2931,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "9568:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2929,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9546:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9546:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9522:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2935,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9608:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9608:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9608:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2938,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "9630:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9608:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9657:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9587:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "9587:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2946,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2928,
                        "src": "9772:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2947,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2914,
                        "src": "9787:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2948,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "9791:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2943,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9742:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "9742:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9742:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2950,
                  "nodeType": "ExpressionStatement",
                  "src": "9742:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2910,
              "nodeType": "StructuredDocumentation",
              "src": "8987:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "9302:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2912,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9334:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9326:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9326:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2914,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9351:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9343:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9343:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9325:29:8"
            },
            "returnParameters": {
              "id": 2916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9364:0:8"
            },
            "scope": 3026,
            "src": "9293:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3024,
              "nodeType": "Block",
              "src": "10210:908:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2961,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10255:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2959,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10241:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "10241:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10241:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10277:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10220:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2965,
                  "nodeType": "ExpressionStatement",
                  "src": "10220:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2967,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "10363:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2969,
                          "indexExpression": {
                            "id": 2968,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10378:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10363:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10389:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10363:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10404:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10342:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10342:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "10342:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10522:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10522:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2978,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "10535:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2980,
                          "indexExpression": {
                            "id": 2979,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10550:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10535:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10522:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10572:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10501:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10501:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "10501:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2986,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10723:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10723:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10723:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10753:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10745:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10745:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10745:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10723:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10769:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10702:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10702:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "ExpressionStatement",
                  "src": "10702:153:8"
                },
                {
                  "assignments": [
                    2998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2998,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "10882:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3024,
                      "src": "10866:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2997,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10866:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3006,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3003,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10928:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3001,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10906:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "10906:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10906:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10898:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2999,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10898:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10866:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3010,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "10991:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3011,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11018:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "11018:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11018:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3014,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2955,
                        "src": "11050:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3007,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10948:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 3009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "10948:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10948:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3016,
                  "nodeType": "ExpressionStatement",
                  "src": "10948:119:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3020,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11101:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11101:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3017,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "11078:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11078:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11078:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3023,
                  "nodeType": "ExpressionStatement",
                  "src": "11078:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2953,
              "nodeType": "StructuredDocumentation",
              "src": "9812:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 3025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "10154:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10184:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "10176:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10176:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10175:17:8"
            },
            "returnParameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10210:0:8"
            },
            "scope": 3026,
            "src": "10145:973:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3027,
        "src": "261:10859:8",
        "usedErrors": []
      }
    ],
    "src": "32:11089:8"
  },
  "legacyAST": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2321
      ],
      "ERC1190Tradable": [
        3026
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        3042
      ],
      "IERC1190Approver": [
        3098
      ],
      "IERC1190CreativeLicenseReceiver": [
        3116
      ],
      "IERC1190CreativeOwner": [
        3178
      ],
      "IERC1190Metadata": [
        3205
      ],
      "IERC1190Owner": [
        3267
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3285
      ],
      "IERC1190Renter": [
        3336
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 3027,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2323,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2324,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 2322,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2325,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2326,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3027,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2328,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2321,
              "src": "289:7:8"
            },
            "id": 2329,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2330,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2331,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2327,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 3026,
        "linearizedBaseContracts": [
          3026,
          104,
          2321,
          3205,
          3042,
          3336,
          3178,
          3267,
          3098,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2335,
            "libraryName": {
              "id": 2332,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2334,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2333,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2338,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2336,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2348,
            "name": "TokenMinted",
            "nameLocation": "400:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "429:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "421:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "452:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "446:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "484:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "478:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "529:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "521:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:131:8"
            },
            "src": "394:149:8"
          },
          {
            "constant": false,
            "id": 2350,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "580:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "565:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2349,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "565:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2354,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "685:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "649:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2353,
              "keyType": {
                "id": 2351,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "649:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2352,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2358,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "809:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "773:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2357,
              "keyType": {
                "id": 2355,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "773:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2356,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2362,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "924:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 3026,
            "src": "888:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2361,
              "keyType": {
                "id": 2359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "888:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2360,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "1152:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2376,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "1162:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2377,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "1170:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1162:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2363,
              "nodeType": "StructuredDocumentation",
              "src": "943:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2381,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2372,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2365,
                    "src": "1128:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2373,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2367,
                    "src": "1139:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2374,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2371,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2321,
                  "src": "1120:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2365,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1033:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1019:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1066:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1052:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1101:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2381,
                  "src": "1087:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:110:8"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:8"
            },
            "scope": 3026,
            "src": "998:191:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2390,
              "nodeType": "Block",
              "src": "1254:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2386,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "1271:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1271:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2385,
                  "id": 2389,
                  "nodeType": "Return",
                  "src": "1264:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1204:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:8"
            },
            "returnParameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "1245:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:8"
            },
            "scope": 3026,
            "src": "1195:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2409,
              "nodeType": "Block",
              "src": "1378:130:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2400,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2393,
                            "src": "1404:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2399,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1396:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2405,
                      "name": "_ownershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "1477:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2407,
                    "indexExpression": {
                      "id": 2406,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2393,
                      "src": "1493:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1477:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2397,
                  "id": 2408,
                  "nodeType": "Return",
                  "src": "1470:31:8"
                }
              ]
            },
            "functionSelector": "ef1e00e0",
            "id": 2410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipPriceOf",
            "nameLocation": "1312:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1337:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "1329:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:17:8"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "1369:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:8"
            },
            "scope": 3026,
            "src": "1303:205:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "1597:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2419,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "1623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2418,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1615:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2424,
                      "name": "_creativePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2358,
                      "src": "1704:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2426,
                    "indexExpression": {
                      "id": 2425,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "1719:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1704:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2416,
                  "id": 2427,
                  "nodeType": "Return",
                  "src": "1697:30:8"
                }
              ]
            },
            "functionSelector": "6f902516",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creativeOwnershipPriceOf",
            "nameLocation": "1523:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2412,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1556:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "1548:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:17:8"
            },
            "returnParameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "1588:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:9:8"
            },
            "scope": 3026,
            "src": "1514:220:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2447,
              "nodeType": "Block",
              "src": "1812:135:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2438,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "1838:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2437,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1830:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2443,
                      "name": "_rentalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2362,
                      "src": "1919:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2445,
                    "indexExpression": {
                      "id": 2444,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2431,
                      "src": "1932:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2435,
                  "id": 2446,
                  "nodeType": "Return",
                  "src": "1912:28:8"
                }
              ]
            },
            "functionSelector": "bf0a660b",
            "id": 2448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentalPriceOf",
            "nameLocation": "1749:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1771:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "1763:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:17:8"
            },
            "returnParameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "1803:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:9:8"
            },
            "scope": 3026,
            "src": "1740:207:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "2075:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2455,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2350,
                    "src": "2092:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2454,
                  "id": 2456,
                  "nodeType": "Return",
                  "src": "2085:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2449,
              "nodeType": "StructuredDocumentation",
              "src": "1953:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "2009:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:8"
            },
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:2:8"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "2060:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:15:8"
            },
            "scope": 3026,
            "src": "2000:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2516,
              "nodeType": "Block",
              "src": "2490:418:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2474,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "2500:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "2500:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2478,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:21:8"
                },
                {
                  "assignments": [
                    2480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2480,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "2540:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2516,
                      "src": "2532:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2532:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2484,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2481,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2338,
                        "src": "2552:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "2552:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2488,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2593:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2489,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2602:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2485,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2581:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1855,
                      "src": "2581:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2491,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2495,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2643:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2496,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "2654:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2492,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "2622:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2498,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2502,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2702:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2503,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2725:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2504,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "2752:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2499,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2669:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "2669:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:117:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:117:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2508,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2509,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2823:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2510,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "2838:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2511,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "2864:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2507,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "2802:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2513,
                  "nodeType": "EmitStatement",
                  "src": "2797:77:8"
                },
                {
                  "expression": {
                    "id": 2514,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2480,
                    "src": "2892:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2473,
                  "id": 2515,
                  "nodeType": "Return",
                  "src": "2885:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2459,
              "nodeType": "StructuredDocumentation",
              "src": "2110:194:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
            },
            "functionSelector": "9940a11a",
            "id": 2517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2469,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2462:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "2318:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "2340:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2332:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "2373:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2357:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "rentalRoyalty",
                  "nameLocation": "2393:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2387:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "mutability": "mutable",
                  "name": "ownershipTransferRoyalty",
                  "nameLocation": "2422:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2416:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:130:8"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 3026,
            "src": "2309:599:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2546,
              "nodeType": "Block",
              "src": "3236:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2528,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2520,
                            "src": "3281:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2526,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3267:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3267:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3303:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2534,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "3389:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3402:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3389:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3368:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:128:8"
                },
                {
                  "expression": {
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2540,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "3507:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2542,
                      "indexExpression": {
                        "id": 2541,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "3523:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3507:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2543,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "3534:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3507:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2518,
              "nodeType": "StructuredDocumentation",
              "src": "2914:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "3153:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3186:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3178:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3203:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2547,
                  "src": "3195:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3177:37:8"
            },
            "returnParameters": {
              "id": 2524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:8"
            },
            "scope": 3026,
            "src": "3144:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2576,
              "nodeType": "Block",
              "src": "3877:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2558,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2550,
                            "src": "3922:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2556,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3908:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3908:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3908:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2562,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2564,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2552,
                          "src": "4030:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4043:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4030:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4009:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2569,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:127:8"
                },
                {
                  "expression": {
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2570,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2358,
                        "src": "4147:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2572,
                      "indexExpression": {
                        "id": 2571,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "4162:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2573,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2552,
                      "src": "4173:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4147:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2575,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2548,
              "nodeType": "StructuredDocumentation",
              "src": "3557:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3795:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2550,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3827:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3819:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2552,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3844:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2577,
                  "src": "3836:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3836:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:37:8"
            },
            "returnParameters": {
              "id": 2554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:8"
            },
            "scope": 3026,
            "src": "3786:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2606,
              "nodeType": "Block",
              "src": "4457:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2588,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2580,
                            "src": "4502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2586,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4488:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4488:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4488:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4524:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4467:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2592,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2594,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2582,
                          "src": "4610:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4623:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4610:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4589:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2599,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:128:8"
                },
                {
                  "expression": {
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2600,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "4728:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2602,
                      "indexExpression": {
                        "id": 2601,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2580,
                        "src": "4741:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4728:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2603,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2582,
                      "src": "4752:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4728:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2605,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2578,
              "nodeType": "StructuredDocumentation",
              "src": "4196:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2607,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "4396:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2580,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4419:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2607,
                  "src": "4411:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2582,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "4436:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2607,
                  "src": "4428:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4410:37:8"
            },
            "returnParameters": {
              "id": 2584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4457:0:8"
            },
            "scope": 3026,
            "src": "4387:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2742,
              "nodeType": "Block",
              "src": "5270:1334:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2618,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "5315:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2616,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5301:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "5301:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5301:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5337:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5280:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "5280:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2624,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "5423:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2626,
                          "indexExpression": {
                            "id": 2625,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "5436:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5423:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5447:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5423:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5462:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5402:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:137:8"
                },
                {
                  "assignments": [
                    2633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2633,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5558:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "5550:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5550:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2641,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2634,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2612,
                            "src": "5579:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5608:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5579:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2637,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5578:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 2638,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5628:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5628:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5578:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5550:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2643,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2633,
                          "src": "5675:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5695:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5675:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5710:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5654:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2648,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:118:8"
                },
                {
                  "assignments": [
                    2650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2650,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5791:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "5783:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2649,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5783:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2651,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "5810:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2652,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2362,
                        "src": "5830:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2654,
                      "indexExpression": {
                        "id": 2653,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "5843:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5830:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5810:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5783:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2658,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5883:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5883:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2660,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2650,
                          "src": "5896:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5883:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5926:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5862:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5862:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "5862:161:8"
                },
                {
                  "assignments": [
                    2666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2666,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6050:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "6034:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2665,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6034:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2674,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2671,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "6080:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2669,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6066:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "6066:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6066:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6058:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6058:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6034:55:8"
                },
                {
                  "assignments": [
                    2676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2676,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "6115:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2742,
                      "src": "6099:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6099:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2681,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "6161:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2679,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6139:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "6139:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6139:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6131:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2677,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6131:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6131:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6099:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2688,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6210:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "6210:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6210:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2691,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2610,
                        "src": "6242:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2692,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2612,
                        "src": "6263:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2685,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6181:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2008,
                      "src": "6181:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6181:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2694,
                  "nodeType": "ExpressionStatement",
                  "src": "6181:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2695,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2666,
                      "src": "6314:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2696,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2676,
                      "src": "6323:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6314:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "6394:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2707
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2707,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "6414:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2740,
                            "src": "6408:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2706,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6408:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2712,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2710,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "6448:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2708,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6424:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1959,
                            "src": "6424:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6408:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2716,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6487:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6487:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2720,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2718,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6500:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2719,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2707,
                                            "src": "6506:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6500:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2721,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6499:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6487:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2723,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6486:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6518:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6486:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2713,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2666,
                              "src": "6471:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6471:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6471:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2727,
                        "nodeType": "ExpressionStatement",
                        "src": "6471:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2731,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6560:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6560:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2733,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2707,
                                      "src": "6572:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6560:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2735,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6559:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6583:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6559:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2728,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2676,
                              "src": "6536:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6536:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6536:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "6536:51:8"
                      }
                    ]
                  },
                  "id": 2741,
                  "nodeType": "IfStatement",
                  "src": "6310:288:8",
                  "trueBody": {
                    "id": 2705,
                    "nodeType": "Block",
                    "src": "6338:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2701,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6367:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6367:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2698,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2666,
                              "src": "6352:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6352:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2704,
                        "nodeType": "ExpressionStatement",
                        "src": "6352:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2608,
              "nodeType": "StructuredDocumentation",
              "src": "4775:381:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "b042ce94",
            "id": 2743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "5170:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2610,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5188:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5180:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2612,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "5205:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2743,
                  "src": "5197:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5179:53:8"
            },
            "returnParameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5270:0:8"
            },
            "scope": 3026,
            "src": "5161:1443:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "6971:413:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2752,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2748,
                          "src": "7002:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7016:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7008:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2753,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7008:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7008:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7002:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7032:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6981:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2760,
                  "nodeType": "ExpressionStatement",
                  "src": "6981:138:8"
                },
                {
                  "assignments": [
                    2762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2762,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7138:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2785,
                      "src": "7130:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2761,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7130:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2767,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2765,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "7160:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2763,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7146:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "7146:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7146:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7130:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2769,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7200:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7200:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7200:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2772,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2762,
                          "src": "7222:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7200:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7241:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7179:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2780,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2762,
                        "src": "7358:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2781,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "7365:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2782,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "7369:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2777,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7327:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "7327:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7327:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "7327:50:8"
                }
              ]
            },
            "documentation": {
              "id": 2744,
              "nodeType": "StructuredDocumentation",
              "src": "6610:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "6908:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6941:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "6933:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6958:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2786,
                  "src": "6950:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6932:29:8"
            },
            "returnParameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6971:0:8"
            },
            "scope": 3026,
            "src": "6899:485:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2908,
              "nodeType": "Block",
              "src": "7792:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2795,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "7837:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2793,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7823:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7823:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7823:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7859:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7802:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7802:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2799,
                  "nodeType": "ExpressionStatement",
                  "src": "7802:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2801,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "7945:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2803,
                          "indexExpression": {
                            "id": 2802,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "7961:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7945:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7972:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7945:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7987:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7924:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7924:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "7924:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2810,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8106:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8106:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2812,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "8119:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2814,
                          "indexExpression": {
                            "id": 2813,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8135:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8119:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8106:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8157:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8085:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "8085:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2820,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8309:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8309:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8309:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8339:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8331:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2823,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8331:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8331:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8309:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8355:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8288:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2830,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:154:8"
                },
                {
                  "assignments": [
                    2832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2832,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8469:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2908,
                      "src": "8453:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2831,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8453:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2840,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2837,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8499:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2835,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8485:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8485:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8485:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8477:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8477:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8477:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8453:55:8"
                },
                {
                  "assignments": [
                    2842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2842,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8534:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2908,
                      "src": "8518:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8518:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2850,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2847,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2789,
                            "src": "8580:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2845,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8558:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8558:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8558:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8550:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2843,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8550:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8550:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8518:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2854,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "8631:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2855,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8638:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8638:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8638:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2858,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2789,
                        "src": "8658:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2851,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8600:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "8600:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "8600:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2861,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2832,
                      "src": "8681:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2862,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "8690:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8681:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2906,
                    "nodeType": "Block",
                    "src": "8761:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2873
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2873,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8781:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2906,
                            "src": "8775:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2872,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8775:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2878,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2876,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "8826:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2874,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8791:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1990,
                            "src": "8791:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8775:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2882,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8864:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8864:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2886,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2884,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8877:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2885,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2873,
                                            "src": "8883:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "8877:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2887,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8876:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8864:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2889,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8863:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8895:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8863:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2879,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2832,
                              "src": "8848:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8848:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8848:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2893,
                        "nodeType": "ExpressionStatement",
                        "src": "8848:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2900,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2897,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8937:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8937:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2899,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2873,
                                      "src": "8949:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8937:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2901,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8936:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8960:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8936:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2894,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2842,
                              "src": "8913:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8913:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8913:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2905,
                        "nodeType": "ExpressionStatement",
                        "src": "8913:51:8"
                      }
                    ]
                  },
                  "id": 2907,
                  "nodeType": "IfStatement",
                  "src": "8677:298:8",
                  "trueBody": {
                    "id": 2871,
                    "nodeType": "Block",
                    "src": "8705:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2867,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8734:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8734:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2864,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2832,
                              "src": "8719:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8719:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8719:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2870,
                        "nodeType": "ExpressionStatement",
                        "src": "8719:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2787,
              "nodeType": "StructuredDocumentation",
              "src": "7390:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7735:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2789,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7766:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2909,
                  "src": "7758:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7757:17:8"
            },
            "returnParameters": {
              "id": 2791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7792:0:8"
            },
            "scope": 3026,
            "src": "7726:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2951,
              "nodeType": "Block",
              "src": "9364:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2918,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2914,
                          "src": "9395:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9409:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9401:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2919,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9401:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9401:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9395:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9425:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9374:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2926,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:137:8"
                },
                {
                  "assignments": [
                    2928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2928,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9530:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2951,
                      "src": "9522:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2927,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9522:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2933,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2931,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "9568:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2929,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9546:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9546:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9522:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2935,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9608:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9608:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9608:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2938,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "9630:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9608:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9657:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9587:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "9587:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2946,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2928,
                        "src": "9772:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2947,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2914,
                        "src": "9787:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2948,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "9791:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2943,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9742:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "9742:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9742:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2950,
                  "nodeType": "ExpressionStatement",
                  "src": "9742:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2910,
              "nodeType": "StructuredDocumentation",
              "src": "8987:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2952,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "9302:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2912,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9334:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9326:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9326:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2914,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9351:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "9343:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9343:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9325:29:8"
            },
            "returnParameters": {
              "id": 2916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9364:0:8"
            },
            "scope": 3026,
            "src": "9293:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3024,
              "nodeType": "Block",
              "src": "10210:908:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2961,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10255:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2959,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10241:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "10241:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10241:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10277:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10220:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10220:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2965,
                  "nodeType": "ExpressionStatement",
                  "src": "10220:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2967,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "10363:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2969,
                          "indexExpression": {
                            "id": 2968,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10378:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10363:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10389:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10363:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10404:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10342:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10342:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "10342:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10522:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10522:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2978,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "10535:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2980,
                          "indexExpression": {
                            "id": 2979,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10550:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10535:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10522:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10572:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 2975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10501:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10501:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2984,
                  "nodeType": "ExpressionStatement",
                  "src": "10501:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2986,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10723:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10723:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10723:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10753:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10745:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10745:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10745:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10723:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10769:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10702:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10702:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "ExpressionStatement",
                  "src": "10702:153:8"
                },
                {
                  "assignments": [
                    2998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2998,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "10882:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3024,
                      "src": "10866:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2997,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10866:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3006,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3003,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2955,
                            "src": "10928:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3001,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10906:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "10906:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10906:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10898:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2999,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10898:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10866:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3010,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "10991:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3011,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11018:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "11018:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11018:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3014,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2955,
                        "src": "11050:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3007,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "10948:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3026_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 3009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "10948:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10948:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3016,
                  "nodeType": "ExpressionStatement",
                  "src": "10948:119:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3020,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11101:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11101:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3017,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "11078:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11078:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11078:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3023,
                  "nodeType": "ExpressionStatement",
                  "src": "11078:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2953,
              "nodeType": "StructuredDocumentation",
              "src": "9812:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 3025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "10154:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10184:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "10176:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10176:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10175:17:8"
            },
            "returnParameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10210:0:8"
            },
            "scope": 3026,
            "src": "10145:973:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3027,
        "src": "261:10859:8",
        "usedErrors": []
      }
    ],
    "src": "32:11089:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-04T10:24:31.549Z",
  "devdoc": {
    "details": "Implementation of ERC1190 with payable methods.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC1190-approve}."
      },
      "balanceOfCreativeOwner(address)": {
        "details": "See {IERC1190-balanceOfCreativeOwner}."
      },
      "balanceOfOwner(address)": {
        "details": "See {IERC1190-balanceOfOwner}."
      },
      "balanceOfRenter(address)": {
        "details": "See {IERC1190-balanceOfRenter}."
      },
      "constructor": {
        "details": "See {ERC1190-constructor}."
      },
      "creativeOwnerOf(uint256)": {
        "details": "See {IERC1190-creativeOwnerOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC1190-getApproved}."
      },
      "getRented(uint256,address)": {
        "details": "See {IERC1190-getRented}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1190-isApprovedForAll}."
      },
      "mint(address,string,uint8,uint8)": {
        "details": "Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
      },
      "name()": {
        "details": "See {IERC1190Metadata-name}."
      },
      "obtainCreativeLicense(uint256)": {
        "details": "Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "obtainOwnershipLicense(uint256)": {
        "details": "Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC1190-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rentAsset(address,uint256,uint256)": {
        "details": "See {IERC1190-rentAsset}."
      },
      "rentAsset(uint256,uint256)": {
        "details": "Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - the sent money should be enough to cover the renting expenses."
      },
      "rentersOf(uint256)": {
        "details": "See {IERC1190-rentersOf}."
      },
      "safeTransferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferCreativeLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1190-setApprovalForAll}."
      },
      "setCreativeLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setOwnershipLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setRentalPrice(uint256,uint256)": {
        "details": "Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC1190Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC1190Metadata-tokenURI}."
      },
      "transferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferCreativeLicense}."
      },
      "transferCreativeLicense(uint256,address)": {
        "details": "Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferOwnershipLicense}."
      },
      "transferOwnershipLicense(uint256,address)": {
        "details": "Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}