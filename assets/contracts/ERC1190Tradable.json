{
  "contractName": "ERC1190Tradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenBaseUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "AssetRented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForRental",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "royaltyForOwnershipTransfer",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferCreativeLicense",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TransferOwnershipLicense",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creativeOwner",
          "type": "address"
        }
      ],
      "name": "balanceOfCreativeOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "balanceOfRenter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "getRentalDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentersOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "royaltyForOwnershipTransfer",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "royaltyForRental",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentDate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        }
      ],
      "name": "updateEndRentalDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownershipPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "creativeOwnershipPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "rentalPriceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "rentalRoyalty",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "ownershipTransferRoyalty",
          "type": "uint8"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setOwnershipLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setCreativeLicensePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceInWei",
          "type": "uint256"
        }
      ],
      "name": "setRentalPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentStartingDateInMillis",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "renter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentExpirationDateInMillis",
          "type": "uint256"
        }
      ],
      "name": "rentAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnershipLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainOwnershipLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferCreativeLicense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "obtainCreativeLicense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"AssetRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForRental\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"royaltyForOwnershipTransfer\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferCreativeLicense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TransferOwnershipLicense\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creativeOwner\",\"type\":\"address\"}],\"name\":\"balanceOfCreativeOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"balanceOfRenter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"creativeOwnershipPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"getRentalDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"rentalRoyalty\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"ownershipTransferRoyalty\",\"type\":\"uint8\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainCreativeLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"obtainOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownershipPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentStartingDateInMillis\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentExpirationDateInMillis\",\"type\":\"uint256\"}],\"name\":\"rentAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentalPriceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rentersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyForOwnershipTransfer\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"royaltyForRental\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setCreativeLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setOwnershipLicensePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setRentalPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferCreativeLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnershipLicense\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"}],\"name\":\"updateEndRentalDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of ERC1190 with payable methods.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC1190-approve}.\"},\"balanceOfCreativeOwner(address)\":{\"details\":\"See {IERC1190-balanceOfCreativeOwner}.\"},\"balanceOfOwner(address)\":{\"details\":\"See {IERC1190-balanceOfOwner}.\"},\"balanceOfRenter(address)\":{\"details\":\"See {IERC1190-balanceOfRenter}.\"},\"constructor\":{\"details\":\"See {ERC1190-constructor}.\"},\"creativeOwnerOf(uint256)\":{\"details\":\"See {IERC1190-creativeOwnerOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC1190-getApproved}.\"},\"getRentalDate(uint256,address)\":{\"details\":\"See {IERC1190-getRentalDate}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1190-isApprovedForAll}.\"},\"mint(address,string,uint8,uint8)\":{\"details\":\"Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`.\"},\"name()\":{\"details\":\"See {IERC1190Metadata-name}.\"},\"obtainCreativeLicense(uint256)\":{\"details\":\"Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"obtainOwnershipLicense(uint256)\":{\"details\":\"Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC1190-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rentAsset(address,uint256,uint256)\":{\"details\":\"See {IERC1190-rentAsset}.\"},\"rentAsset(uint256,uint256,uint256)\":{\"details\":\"Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - `rentExpirationDateInMillis` - `rentStartingDateInMillis` should be greater than 0. - the sent money should be enough to cover the renting expenses.\"},\"rentersOf(uint256)\":{\"details\":\"See {IERC1190-rentersOf}.\"},\"safeTransferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferCreativeLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferCreativeLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"safeTransferOwnershipLicense(address,address,uint256,bytes)\":{\"details\":\"See {IERC1190-safeTransferOwnershipLicense}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1190-setApprovalForAll}.\"},\"setCreativeLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setOwnershipLicensePrice(uint256,uint256)\":{\"details\":\"Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"setRentalPrice(uint256,uint256)\":{\"details\":\"Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC1190Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC1190Metadata-tokenURI}.\"},\"transferCreativeLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferCreativeLicense}.\"},\"transferCreativeLicense(uint256,address)\":{\"details\":\"Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipLicense(address,address,uint256)\":{\"details\":\"See {IERC1190-transferOwnershipLicense}.\"},\"transferOwnershipLicense(uint256,address)\":{\"details\":\"Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address.\"},\"updateEndRentalDate(uint256,uint256,address)\":{\"details\":\"See {IERC1190-updateEndRentalDate}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":\"ERC1190Tradable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"non-fungible-royalty-token/contracts/ERC1190.sol\":{\"keccak256\":\"0xddcd92a67af5ad0b6909d01ddbc63271934fa1c59660688d8f1d06ad060ee65f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95fe98145a4629f7d3b079931a8a07a69a96b730ba6f704975d4524180d2fdd\",\"dweb:/ipfs/QmWa3h2q8T297Shor3jw3zejWddNPT19Uam8Q5y5jEUtaw\"]},\"non-fungible-royalty-token/contracts/ERC1190Tradable.sol\":{\"keccak256\":\"0xfc0b04c86fbe33b6fb5623556ea37356c76b2b1a57f0a44b415be3254404499e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06370162001afa0fd85a7f7b68049ced6741f1fb966bbc9593697988a223d9a4\",\"dweb:/ipfs/Qmdg7VRJNf3D5pExiajZkmazc4jrG27ZrWnZcdBABieX56\"]},\"non-fungible-royalty-token/contracts/IERC1190.sol\":{\"keccak256\":\"0x5e3900926a431223b3e1440ece11eb5f4d6d4a4984883ce02429a98a2347101c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab59370ae94fa0be22ff10401ea241aa281416b4b750fb375f6251be25bc18de\",\"dweb:/ipfs/QmXoh5TUjkUuZEA2mL9KQMif8MxH1wjHe44c45FX4K5H18\"]},\"non-fungible-royalty-token/contracts/IERC1190Approver.sol\":{\"keccak256\":\"0x5cfe8bd143e6c86c443a02ea6e94e2f7d6c53474d6256bf55ee79691b714e8d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://188ed6db1029ae83b6e06293dfdd2f220b77d59255a5a76af76feae1a1d799c1\",\"dweb:/ipfs/QmY7TpFWDHydRg2mi8eyKPW3saMXYE2MYjgYd1qvh4dXZc\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeLicenseReceiver.sol\":{\"keccak256\":\"0x9874faa59977fddaf0d252be515418e26866d4c8f5668176e55b479604ae4c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d164d320f1ffa7db1aa93c9685988784fe2e32a9ad93a98062468bf9e5e1bd4d\",\"dweb:/ipfs/QmXR8K1VtLd8CbfNTHPaFtrAhDF9rZSHi9JiFSW1ZqEM9d\"]},\"non-fungible-royalty-token/contracts/IERC1190CreativeOwner.sol\":{\"keccak256\":\"0xd4e44eeb23623ad7ea99d56d9b6318ecc678f25660e6a66128e3f8f26bd82df9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b350bdaf466d21b78a3e53b568fd396e8093717932554907ff15913f83c8f\",\"dweb:/ipfs/QmaywMBe5sjeJAiRNc68n4GCsEgj4pr542xcVqsBwpuyF4\"]},\"non-fungible-royalty-token/contracts/IERC1190Metadata.sol\":{\"keccak256\":\"0xa35fa1bcd09130941ca255b6972841b83400b1981b87f1913088dba4b13d09c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da7c2757cd7163b2c8e21355df095e1d977ff4f8a95dd62c4ee89f86f93fd20e\",\"dweb:/ipfs/QmVnp9quJ3gSHNXiVMRrHx2nL982rdiosiz6v5rEqyTyvJ\"]},\"non-fungible-royalty-token/contracts/IERC1190Owner.sol\":{\"keccak256\":\"0x3b3eb1a173a0c912b83b97446793e9c456b3f04ef968b866cc5db1788fb78827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6092fb88805deb255a39ab7b15049de42c1242b822edb68707c74a062d7626d8\",\"dweb:/ipfs/QmWcgWeFCjed5CJKuT6UoTszRj1C25ESEgX9n8Ab5neDNW\"]},\"non-fungible-royalty-token/contracts/IERC1190OwnershipLicenseReceiver.sol\":{\"keccak256\":\"0xea676c2f50bff066256ff8cedf8a092971a2fb124f964c91e7d8739d9b35cbc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b09a8d9ad2954151b7c22bd6434c16898237494efaf54bf842b105fb24e6d58\",\"dweb:/ipfs/QmNj1accKopyGKxdcSfStz1gCcQBmr319quhxS7K1B2yiD\"]},\"non-fungible-royalty-token/contracts/IERC1190Renter.sol\":{\"keccak256\":\"0xf97b2f9dbd435242365006f591567cdbf82aa15ca9c38b324e692bad0af300ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1397b1b39e468f57ecd2e670a134f5e384e5bc089aa22d7fdeaee13e6398b91d\",\"dweb:/ipfs/QmXzMd92QD7YVpRyaAMx6bfT7g1wPFJo4C9j5T6jsq37Ps\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200485f3803806200485f833981016040819052620000349162000268565b8251839083906200004d906000906020850190620000f5565b50805162000063906001906020840190620000f5565b505050620000806200007a6200009f60201b60201c565b620000a3565b805162000095906010906020840190620000f5565b5050505062000336565b3390565b600e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010390620002f9565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c357600080fd5b81516001600160401b0380821115620001e057620001e06200019b565b604051601f8301601f19908116603f011681019082821181831017156200020b576200020b6200019b565b816040528381526020925086838588010111156200022857600080fd5b600091505b838210156200024c57858201830151818301840152908201906200022d565b838211156200025e5760008385830101525b9695505050505050565b6000806000606084860312156200027e57600080fd5b83516001600160401b03808211156200029657600080fd5b620002a487838801620001b1565b94506020860151915080821115620002bb57600080fd5b620002c987838801620001b1565b93506040860151915080821115620002e057600080fd5b50620002ef86828701620001b1565b9150509250925092565b600181811c908216806200030e57607f821691505b602082108114156200033057634e487b7160e01b600052602260045260246000fd5b50919050565b61451980620003466000396000f3fe6080604052600436106102c65760003560e01c80638c4b5a9211610179578063bf0a660b116100d6578063e985e9c51161008a578063f2fde38b11610064578063f2fde38b146107d5578063f3e4198e146107f5578063f9de1d831461081557600080fd5b8063e985e9c51461074c578063ec2b20ac14610795578063ef1e00e0146107b557600080fd5b8063c66130d7116100bb578063c66130d7146106ec578063c87b56dd1461070c578063de8e7bab1461072c57600080fd5b8063bf0a660b146106ac578063c588ea5c146106cc57600080fd5b80639f2cd0e41161012d578063a333818c11610112578063a333818c1461064c578063aad1b61714610679578063afe9a4ff1461069957600080fd5b80639f2cd0e41461060c578063a22cb4651461062c57600080fd5b80638da5cb5b1161015e5780638da5cb5b146105b957806395d89b41146105d75780639940a11a146105ec57600080fd5b80638c4b5a92146105795780638d6cf8bc1461059957600080fd5b806341fb748b116102275780636ebd773d116101db578063715018a6116101c0578063715018a61461052457806379b66eb714610539578063851fcadd1461055957600080fd5b80636ebd773d146104e45780636f9025161461050457600080fd5b80634cd5ca8e1161020c5780634cd5ca8e1461048f5780636352211e146104af57806369bb4dc2146104cf57600080fd5b806341fb748b146104415780634909d94e1461046f57600080fd5b80630c2e6c161161027e57806325d8a3581161026357806325d8a358146103cf57806325dc1264146104015780633c7342341461042157600080fd5b80630c2e6c161461039c578063224157ea146103af57600080fd5b8063081812fc116102af578063081812fc14610322578063095ea7b31461035a5780630b97be961461037c57600080fd5b806301ffc9a7146102cb57806306fdde0314610300575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613e33565b610828565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156108ec565b6040516102f79190613ea8565b34801561032e57600080fd5b5061034261033d366004613ebb565b61097e565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b5061037a610375366004613ef0565b610a01565b005b34801561038857600080fd5b5061037a610397366004613f30565b610c13565b61037a6103aa36600461400c565b610cc1565b3480156103bb57600080fd5b506103426103ca366004613ebb565b611052565b3480156103db57600080fd5b506103ef6103ea366004613ebb565b6110dd565b60405160ff90911681526020016102f7565b34801561040d57600080fd5b5061037a61041c366004614038565b6110e8565b34801561042d57600080fd5b5061037a61043c366004613f30565b611108565b34801561044d57600080fd5b5061046161045c366004614074565b6111b6565b6040519081526020016102f7565b34801561047b57600080fd5b5061037a61048a366004614038565b61152d565b34801561049b57600080fd5b506104616104aa3660046140a9565b6115da565b3480156104bb57600080fd5b506103426104ca366004613ebb565b611674565b3480156104db57600080fd5b506104616116ff565b3480156104f057600080fd5b5061037a6104ff3660046140c4565b61170f565b34801561051057600080fd5b5061046161051f366004613ebb565b611847565b34801561053057600080fd5b5061037a6118c4565b34801561054557600080fd5b5061037a6105543660046140f0565b61192a565b34801561056557600080fd5b506104616105743660046140c4565b611a40565b34801561058557600080fd5b5061037a610594366004614038565b611b35565b3480156105a557600080fd5b5061037a6105b43660046140c4565b611b50565b3480156105c557600080fd5b50600e546001600160a01b0316610342565b3480156105e357600080fd5b50610315611c76565b3480156105f857600080fd5b50610461610607366004614123565b611c85565b34801561061857600080fd5b5061037a610627366004614038565b611d7a565b34801561063857600080fd5b5061037a6106473660046141c8565b611e27565b34801561065857600080fd5b5061066c610667366004613ebb565b611e36565b6040516102f79190614204565b34801561068557600080fd5b506104616106943660046140a9565b611ea2565b61037a6106a7366004613ebb565b611f2a565b3480156106b857600080fd5b506104616106c7366004613ebb565b6121ef565b3480156106d857600080fd5b506103ef6106e7366004613ebb565b61226c565b3480156106f857600080fd5b506104616107073660046140a9565b612277565b34801561071857600080fd5b50610315610727366004613ebb565b612311565b34801561073857600080fd5b5061037a6107473660046140f0565b612467565b34801561075857600080fd5b506102eb610767366004614251565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b3480156107a157600080fd5b5061037a6107b03660046140f0565b61257d565b3480156107c157600080fd5b506104616107d0366004613ebb565b612693565b3480156107e157600080fd5b5061037a6107f03660046140a9565b612710565b34801561080157600080fd5b5061037a61081036600461427b565b6127f2565b61037a610823366004613ebb565b6127fd565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061089a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108e657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546108fb906142ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610927906142ae565b80156109745780601f1061094957610100808354040283529160200191610974565b820191906000526020600020905b81548152906001019060200180831161095757829003601f168201915b5050505050905090565b600061098982612b92565b6109e55760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b6000610a0c82611674565b90506000610a1983611052565b9050816001600160a01b0316846001600160a01b03161415610aa35760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e0000000000000000000000000000000000000000000060648201526084016109dc565b806001600160a01b0316846001600160a01b03161415610b2b5760405162461bcd60e51b815260206004820152603360248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206372656174697665206f776e65722e0000000000000000000000000060648201526084016109dc565b336001600160a01b0383161480610b4a5750336001600160a01b038216145b80610b5a5750610b5a8233610767565b80610b6a5750610b6a8133610767565b610c025760405162461bcd60e51b815260206004820152605b60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f68652028637265617469766529206f776e6572206f662074686520746f6b656e60648201527f206e6f7220617070726f76656420746f206d616e6167652069742e0000000000608482015260a4016109dc565b610c0d828585612bd1565b50505050565b610c1d3383612c3a565b610cb55760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109dc565b610c0d84848484612d1a565b610cca83612b92565b610d295760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b600083815260136020526040902054610dd05760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60006103e8610ddf84846142ff565b610de99190614316565b905060008111610e615760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e000000000000000000000000000060648201526084016109dc565b600084815260136020526040812054610e7a9083614338565b905080341015610f185760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a4016109dc565b6000610f2386611674565b90506000610f3087611052565b9050610f3d3388876127f2565b806001600160a01b0316826001600160a01b03161415610f92576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610f8c573d6000803e3d6000fd5b50611049565b6000610f9d88612da5565b90506001600160a01b0383166108fc6064610fb88482614357565b610fc59060ff1634614338565b610fcf9190614316565b6040518115909202916000818181858888f19350505050158015610ff7573d6000803e3d6000fd5b506001600160a01b0382166108fc606461101460ff851634614338565b61101e9190614316565b6040518115909202916000818181858888f19350505050158015611046573d6000803e3d6000fd5b50505b50505050505050565b6000818152600360205260408120546001600160a01b0316806108e65760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e00000000000000000000000060648201526084016109dc565b60006108e682612e1d565b61110383838360405180602001604052806000815250611108565b505050565b6111123383612e95565b6111aa5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109dc565b610c0d84848484612f02565b60006111c184612b92565b6112185760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6001600160a01b0382166112825760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b60008481526004602090815260408083206001600160a01b03861684529091529020546113175760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e0000000000000000000000000000000000000060648201526084016109dc565b60008481526004602090815260408083206001600160a01b0386168452909152902054838110156115015760008581526004602090815260408083206001600160a01b03871684529091528120819055805b60008781526005602052604090205481108015611384575081155b156114d057600087815260056020526040902080546001600160a01b0387169190839081106113b5576113b561437a565b6000918252602090912001546001600160a01b031614156114be57600087815260056020526040902080546113ec906001906142ff565b815481106113fc576113fc61437a565b60009182526020808320909101548983526005909152604090912080546001600160a01b0390921691839081106114355761143561437a565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03949094169390931790925588815260059091526040902080548061148a5761148a614390565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b806114c8816143a6565b915050611369565b506001600160a01b03841660009081526008602052604081208054600192906114fa9084906142ff565b9091555050505b505060008381526004602090815260408083206001600160a01b03851684529091529020549392505050565b6115373382612c3a565b6115cf5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109dc565b611103838383612f19565b60006001600160a01b0382166116585760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e000000000000000000000000000060648201526084016109dc565b506001600160a01b031660009081526007602052604090205490565b6000818152600260205260408120546001600160a01b0316806108e65760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e00000000000000000000000000000000000000000060648201526084016109dc565b600061170a600f5490565b905090565b6001600160a01b0381166117b15760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109dc565b60006117bc83611052565b9050336001600160a01b0382161461183c5760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e000060648201526084016109dc565b611103818385611d7a565b600061185282612b92565b6118b15760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526012602052604090205490565b600e546001600160a01b0316331461191e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b6119286000613121565b565b61193382612b92565b6119925760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b60008111611a2e5760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526011602052604090912055565b6000611a4b83612b92565b611aa25760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6001600160a01b038216611b0c5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b5060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b61110383838360405180602001604052806000815250610c13565b6001600160a01b038116611be05760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109dc565b6000611beb83611674565b9050336001600160a01b03821614611c6b5760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e0060648201526084016109dc565b61110381838561152d565b6060600180546108fb906142ae565b600e546000906001600160a01b03163314611ce25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b611cf0600f80546001019055565b6000611cfb600f5490565b9050611d078782613180565b611d12818787613386565b611d1d8185856133ff565b604080516001600160a01b038916815260ff86811660208301528516818301526060810183905290517fd3df8e557dd2db4e6ed42c0bc93d8dceae1dae9bd0d8bfa2c69d68759fceab539181900360800190a19695505050505050565b611d843382612e95565b611e1c5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109dc565b611103838383613589565b611e32338383613791565b5050565b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015611e9657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e78575b50505050509050919050565b60006001600160a01b038216611f0e5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b506001600160a01b031660009081526008602052604090205490565b611f3381612b92565b611f925760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b6000818152601260205260409020546120395760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a4016109dc565b6000818152601260205260409020543410156121095760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c4016109dc565b336121a25760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109dc565b60006121ad82611052565b90506121ba813384611d7a565b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015611103573d6000803e3d6000fd5b60006121fa82612b92565b6122595760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526013602052604090205490565b60006108e682612da5565b60006001600160a01b0382166122f55760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e0000000000000000000000000000000000000000000060648201526084016109dc565b506001600160a01b031660009081526006602052604090205490565b606061231c82612b92565b6123735760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000828152600d60205260408120805461238c906142ae565b9050116124015760405162461bcd60e51b815260206004820152602960248201527f455243313139303a204e6f2066696c65206173736f63696174656420746f207460448201527f686520746f6b656e2e000000000000000000000000000000000000000000000060648201526084016109dc565b600061240b61387f565b9050600081511161242b5760405180602001604052806000815250612460565b80600d60008581526020019081526020016000206040516020016124509291906143c1565b6040516020818303038152906040525b9392505050565b61247082612b92565b6124cf5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b6000811161256b5760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526012602052604090912055565b61258682612b92565b6125e55760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b600081116126815760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526013602052604090912055565b600061269e82612b92565b6126fd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526011602052604090205490565b600e546001600160a01b0316331461276a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b6001600160a01b0381166127e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109dc565b6127ef81613121565b50565b61110383838361388e565b61280681612b92565b6128655760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b60008181526011602052604090205461290c5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a4016109dc565b6000818152601160205260409020543410156129dc5760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c4016109dc565b33612a635760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109dc565b6000612a6e82611674565b90506000612a7b83611052565b9050612a8882338561152d565b806001600160a01b0316826001600160a01b03161415612ad7576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610c0d573d6000803e3d6000fd5b6000612ae284612e1d565b90506001600160a01b0383166108fc6064612afd8482614357565b612b0a9060ff1634614338565b612b149190614316565b6040518115909202916000818181858888f19350505050158015612b3c573d6000803e3d6000fd5b506001600160a01b0382166108fc6064612b5960ff851634614338565b612b639190614316565b6040518115909202916000818181858888f19350505050158015612b8b573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906108e65750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000612c4582612b92565b612c9c5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000612ca783611674565b9050806001600160a01b0316846001600160a01b03161480612ce25750836001600160a01b0316612cd78461097e565b6001600160a01b0316145b80612d1257506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff165b949350505050565b612d25848484612f19565b612d3184848484613a1b565b610c0d576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109dc565b6000612db082612b92565b612e075760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b506000908152600a602052604090205460ff1690565b6000612e2882612b92565b612e7f5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b506000908152600b602052604090205460ff1690565b6000612ea082612b92565b612ef75760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000612ca783611052565b612f0d848484613589565b612d3184848484613bbb565b6000612f2482611674565b9050836001600160a01b0316816001600160a01b031614612fd35760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b6001600160a01b03831661304f5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109dc565b61305b81600084612bd1565b6001600160a01b03841660009081526006602052604081208054600192906130849084906142ff565b90915550506001600160a01b03831660009081526006602052604081208054600192906130b2908490614472565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166131fc5760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e0000000000000000000000000000000000000000000000000060648201526084016109dc565b61320581612b92565b156132785760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c726561647920657869737460448201527f732e00000000000000000000000000000000000000000000000000000000000060648201526084016109dc565b6001600160a01b03821660009081526006602052604081208054600192906132a1908490614472565b90915550506001600160a01b03821660009081526007602052604081208054600192906132cf908490614472565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b61338f83612b92565b6133e65760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000838152600d60205260409020610c0d908383613d6c565b61340883612b92565b61345f5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b60648260ff1611156134d95760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e00000000000000000000000000000060648201526084016109dc565b60648160ff1611156135535760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e00000060648201526084016109dc565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b600061359482611052565b9050836001600160a01b0316816001600160a01b0316146136435760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b6001600160a01b0383166136bf5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109dc565b6136cb81600084612bd1565b6001600160a01b03841660009081526007602052604081208054600192906136f49084906142ff565b90915550506001600160a01b0383166000908152600760205260408120805460019290613722908490614472565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156138195760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e000000000000000000000000000000000000000060648201526084016109dc565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b6060601080546108fb906142ae565b6001600160a01b0383166138f85760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b61390182612b92565b6139585760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff191683179055908452600890925282208054919290916139d1908490614472565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b60006001600160a01b0384163b15613bb0576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea76190613a7890339089908890889060040161448a565b6020604051808303816000875af1925050508015613ab3575060408051601f3d908101601f19168201909252613ab0918101906144c6565b60015b613b65573d808015613ae1576040519150601f19603f3d011682016040523d82523d6000602084013e613ae6565b606091505b508051613b5d576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109dc565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea76100000000000000000000000000000000000000000000000000000000149050612d12565b506001949350505050565b60006001600160a01b0384163b15613bb0576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e090613c1890339089908890889060040161448a565b6020604051808303816000875af1925050508015613c53575060408051601f3d908101601f19168201909252613c50918101906144c6565b60015b613d21573d808015613c81576040519150601f19603f3d011682016040523d82523d6000602084013e613c86565b606091505b508051613b5d5760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a4016109dc565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e000000000000000000000000000000000000000000000000000000000149050612d12565b828054613d78906142ae565b90600052602060002090601f016020900481019282613d9a5760008555613de0565b82601f10613db35782800160ff19823516178555613de0565b82800160010185558215613de0579182015b82811115613de0578235825591602001919060010190613dc5565b50613dec929150613df0565b5090565b5b80821115613dec5760008155600101613df1565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146127ef57600080fd5b600060208284031215613e4557600080fd5b813561246081613e05565b60005b83811015613e6b578181015183820152602001613e53565b83811115610c0d5750506000910152565b60008151808452613e94816020860160208601613e50565b601f01601f19169290920160200192915050565b6020815260006124606020830184613e7c565b600060208284031215613ecd57600080fd5b5035919050565b80356001600160a01b0381168114613eeb57600080fd5b919050565b60008060408385031215613f0357600080fd5b613f0c83613ed4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613f4657600080fd5b613f4f85613ed4565b9350613f5d60208601613ed4565b925060408501359150606085013567ffffffffffffffff80821115613f8157600080fd5b818701915087601f830112613f9557600080fd5b813581811115613fa757613fa7613f1a565b604051601f8201601f19908116603f01168101908382118183101715613fcf57613fcf613f1a565b816040528281528a6020848701011115613fe857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006060848603121561402157600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561404d57600080fd5b61405684613ed4565b925061406460208501613ed4565b9150604084013590509250925092565b60008060006060848603121561408957600080fd5b83359250602084013591506140a060408501613ed4565b90509250925092565b6000602082840312156140bb57600080fd5b61246082613ed4565b600080604083850312156140d757600080fd5b823591506140e760208401613ed4565b90509250929050565b6000806040838503121561410357600080fd5b50508035926020909101359150565b803560ff81168114613eeb57600080fd5b60008060008060006080868803121561413b57600080fd5b61414486613ed4565b9450602086013567ffffffffffffffff8082111561416157600080fd5b818801915088601f83011261417557600080fd5b81358181111561418457600080fd5b89602082850101111561419657600080fd5b6020830196508095505050506141ae60408701614112565b91506141bc60608701614112565b90509295509295909350565b600080604083850312156141db57600080fd5b6141e483613ed4565b9150602083013580151581146141f957600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156142455783516001600160a01b031683529284019291840191600101614220565b50909695505050505050565b6000806040838503121561426457600080fd5b61426d83613ed4565b91506140e760208401613ed4565b60008060006060848603121561429057600080fd5b61429984613ed4565b95602085013595506040909401359392505050565b600181811c908216806142c257607f821691505b602082108114156142e357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015614311576143116142e9565b500390565b60008261433357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614352576143526142e9565b500290565b600060ff821660ff841680821015614371576143716142e9565b90039392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006000198214156143ba576143ba6142e9565b5060010190565b6000835160206143d48285838901613e50565b845491840191600090600181811c90808316806143f257607f831692505b85831081141561441057634e487b7160e01b85526022600452602485fd5b808015614424576001811461443557614462565b60ff19851688528388019550614462565b60008b81526020902060005b8581101561445a5781548a820152908401908801614441565b505083880195505b50939a9950505050505050505050565b60008219821115614485576144856142e9565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526144bc6080830184613e7c565b9695505050505050565b6000602082840312156144d857600080fd5b815161246081613e0556fea26469706673582212204869c1daac692707a17c316c5f7a3418939a0487a81ff6069ae3d121fe5c2cbf64736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106102c65760003560e01c80638c4b5a9211610179578063bf0a660b116100d6578063e985e9c51161008a578063f2fde38b11610064578063f2fde38b146107d5578063f3e4198e146107f5578063f9de1d831461081557600080fd5b8063e985e9c51461074c578063ec2b20ac14610795578063ef1e00e0146107b557600080fd5b8063c66130d7116100bb578063c66130d7146106ec578063c87b56dd1461070c578063de8e7bab1461072c57600080fd5b8063bf0a660b146106ac578063c588ea5c146106cc57600080fd5b80639f2cd0e41161012d578063a333818c11610112578063a333818c1461064c578063aad1b61714610679578063afe9a4ff1461069957600080fd5b80639f2cd0e41461060c578063a22cb4651461062c57600080fd5b80638da5cb5b1161015e5780638da5cb5b146105b957806395d89b41146105d75780639940a11a146105ec57600080fd5b80638c4b5a92146105795780638d6cf8bc1461059957600080fd5b806341fb748b116102275780636ebd773d116101db578063715018a6116101c0578063715018a61461052457806379b66eb714610539578063851fcadd1461055957600080fd5b80636ebd773d146104e45780636f9025161461050457600080fd5b80634cd5ca8e1161020c5780634cd5ca8e1461048f5780636352211e146104af57806369bb4dc2146104cf57600080fd5b806341fb748b146104415780634909d94e1461046f57600080fd5b80630c2e6c161161027e57806325d8a3581161026357806325d8a358146103cf57806325dc1264146104015780633c7342341461042157600080fd5b80630c2e6c161461039c578063224157ea146103af57600080fd5b8063081812fc116102af578063081812fc14610322578063095ea7b31461035a5780630b97be961461037c57600080fd5b806301ffc9a7146102cb57806306fdde0314610300575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004613e33565b610828565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b506103156108ec565b6040516102f79190613ea8565b34801561032e57600080fd5b5061034261033d366004613ebb565b61097e565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b5061037a610375366004613ef0565b610a01565b005b34801561038857600080fd5b5061037a610397366004613f30565b610c13565b61037a6103aa36600461400c565b610cc1565b3480156103bb57600080fd5b506103426103ca366004613ebb565b611052565b3480156103db57600080fd5b506103ef6103ea366004613ebb565b6110dd565b60405160ff90911681526020016102f7565b34801561040d57600080fd5b5061037a61041c366004614038565b6110e8565b34801561042d57600080fd5b5061037a61043c366004613f30565b611108565b34801561044d57600080fd5b5061046161045c366004614074565b6111b6565b6040519081526020016102f7565b34801561047b57600080fd5b5061037a61048a366004614038565b61152d565b34801561049b57600080fd5b506104616104aa3660046140a9565b6115da565b3480156104bb57600080fd5b506103426104ca366004613ebb565b611674565b3480156104db57600080fd5b506104616116ff565b3480156104f057600080fd5b5061037a6104ff3660046140c4565b61170f565b34801561051057600080fd5b5061046161051f366004613ebb565b611847565b34801561053057600080fd5b5061037a6118c4565b34801561054557600080fd5b5061037a6105543660046140f0565b61192a565b34801561056557600080fd5b506104616105743660046140c4565b611a40565b34801561058557600080fd5b5061037a610594366004614038565b611b35565b3480156105a557600080fd5b5061037a6105b43660046140c4565b611b50565b3480156105c557600080fd5b50600e546001600160a01b0316610342565b3480156105e357600080fd5b50610315611c76565b3480156105f857600080fd5b50610461610607366004614123565b611c85565b34801561061857600080fd5b5061037a610627366004614038565b611d7a565b34801561063857600080fd5b5061037a6106473660046141c8565b611e27565b34801561065857600080fd5b5061066c610667366004613ebb565b611e36565b6040516102f79190614204565b34801561068557600080fd5b506104616106943660046140a9565b611ea2565b61037a6106a7366004613ebb565b611f2a565b3480156106b857600080fd5b506104616106c7366004613ebb565b6121ef565b3480156106d857600080fd5b506103ef6106e7366004613ebb565b61226c565b3480156106f857600080fd5b506104616107073660046140a9565b612277565b34801561071857600080fd5b50610315610727366004613ebb565b612311565b34801561073857600080fd5b5061037a6107473660046140f0565b612467565b34801561075857600080fd5b506102eb610767366004614251565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b3480156107a157600080fd5b5061037a6107b03660046140f0565b61257d565b3480156107c157600080fd5b506104616107d0366004613ebb565b612693565b3480156107e157600080fd5b5061037a6107f03660046140a9565b612710565b34801561080157600080fd5b5061037a61081036600461427b565b6127f2565b61037a610823366004613ebb565b6127fd565b60007fffffffff000000000000000000000000000000000000000000000000000000008216158061089a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108e657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546108fb906142ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610927906142ae565b80156109745780601f1061094957610100808354040283529160200191610974565b820191906000526020600020905b81548152906001019060200180831161095757829003601f168201915b5050505050905090565b600061098982612b92565b6109e55760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b6000610a0c82611674565b90506000610a1983611052565b9050816001600160a01b0316846001600160a01b03161415610aa35760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206f776e65722e0000000000000000000000000000000000000000000060648201526084016109dc565b806001600160a01b0316846001600160a01b03161415610b2b5760405162461bcd60e51b815260206004820152603360248201527f455243313139303a2043616e6e6f7420617070726f766520746865206375727260448201527f656e74206372656174697665206f776e65722e0000000000000000000000000060648201526084016109dc565b336001600160a01b0383161480610b4a5750336001600160a01b038216145b80610b5a5750610b5a8233610767565b80610b6a5750610b6a8133610767565b610c025760405162461bcd60e51b815260206004820152605b60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f68652028637265617469766529206f776e6572206f662074686520746f6b656e60648201527f206e6f7220617070726f76656420746f206d616e6167652069742e0000000000608482015260a4016109dc565b610c0d828585612bd1565b50505050565b610c1d3383612c3a565b610cb55760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109dc565b610c0d84848484612d1a565b610cca83612b92565b610d295760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b600083815260136020526040902054610dd05760405162461bcd60e51b815260206004820152604160248201527f455243313139305472616461626c653a205468652061737365742072656c617460448201527f656420746f207468697320746f6b656e206973206e6f742072656e7461626c6560648201527f2e00000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60006103e8610ddf84846142ff565b610de99190614316565b905060008111610e615760405162461bcd60e51b815260206004820152603260248201527f455243313139305472616461626c653a205468652072656e74616c2074696d6560448201527f206d75737420626520706f7369746976652e000000000000000000000000000060648201526084016109dc565b600084815260136020526040812054610e7a9083614338565b905080341015610f185760405162461bcd60e51b815260206004820152605560248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420746f20636f7660648201527f6572207468652072656e7420657870656e7365732e0000000000000000000000608482015260a4016109dc565b6000610f2386611674565b90506000610f3087611052565b9050610f3d3388876127f2565b806001600160a01b0316826001600160a01b03161415610f92576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610f8c573d6000803e3d6000fd5b50611049565b6000610f9d88612da5565b90506001600160a01b0383166108fc6064610fb88482614357565b610fc59060ff1634614338565b610fcf9190614316565b6040518115909202916000818181858888f19350505050158015610ff7573d6000803e3d6000fd5b506001600160a01b0382166108fc606461101460ff851634614338565b61101e9190614316565b6040518115909202916000818181858888f19350505050158015611046573d6000803e3d6000fd5b50505b50505050505050565b6000818152600360205260408120546001600160a01b0316806108e65760405162461bcd60e51b815260206004820152603460248201527f455243313139303a204e6f626f647920686173206372656174697665206f776e60448201527f657273686970206f76657220746f6b656e49642e00000000000000000000000060648201526084016109dc565b60006108e682612e1d565b61110383838360405180602001604052806000815250611108565b505050565b6111123383612e95565b6111aa5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109dc565b610c0d84848484612f02565b60006111c184612b92565b6112185760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6001600160a01b0382166112825760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b60008481526004602090815260408083206001600160a01b03861684529091529020546113175760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a205468652072656e74657220686173206e6f742072656e7460448201527f65642074686520746f6b656e2e0000000000000000000000000000000000000060648201526084016109dc565b60008481526004602090815260408083206001600160a01b0386168452909152902054838110156115015760008581526004602090815260408083206001600160a01b03871684529091528120819055805b60008781526005602052604090205481108015611384575081155b156114d057600087815260056020526040902080546001600160a01b0387169190839081106113b5576113b561437a565b6000918252602090912001546001600160a01b031614156114be57600087815260056020526040902080546113ec906001906142ff565b815481106113fc576113fc61437a565b60009182526020808320909101548983526005909152604090912080546001600160a01b0390921691839081106114355761143561437a565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03949094169390931790925588815260059091526040902080548061148a5761148a614390565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055600191505b806114c8816143a6565b915050611369565b506001600160a01b03841660009081526008602052604081208054600192906114fa9084906142ff565b9091555050505b505060008381526004602090815260408083206001600160a01b03851684529091529020549392505050565b6115373382612c3a565b6115cf5760405162461bcd60e51b815260206004820152604a60248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206f776e6572206e6f7220617070726f76656420746f206d616e6167652060648201527f74686520746f6b656e2e00000000000000000000000000000000000000000000608482015260a4016109dc565b611103838383612f19565b60006001600160a01b0382166116585760405162461bcd60e51b815260206004820152603260248201527f455243313139303a2063726561746976654f776e65722063616e6e6f7420626560448201527f20746865207a65726f20616464726573732e000000000000000000000000000060648201526084016109dc565b506001600160a01b031660009081526007602052604090205490565b6000818152600260205260408120546001600160a01b0316806108e65760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a204e6f626f647920686173206f776e657273686970206f7660448201527f657220746f6b656e49642e00000000000000000000000000000000000000000060648201526084016109dc565b600061170a600f5490565b905090565b6001600160a01b0381166117b15760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109dc565b60006117bc83611052565b9050336001600160a01b0382161461183c5760405162461bcd60e51b815260206004820152603e60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206372656174697665206c6963656e73652e000060648201526084016109dc565b611103818385611d7a565b600061185282612b92565b6118b15760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526012602052604090205490565b600e546001600160a01b0316331461191e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b6119286000613121565b565b61193382612b92565b6119925760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b60008111611a2e5760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e736520636f7374206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526011602052604090912055565b6000611a4b83612b92565b611aa25760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6001600160a01b038216611b0c5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b5060009182526004602090815260408084206001600160a01b0393909316845291905290205490565b61110383838360405180602001604052806000815250610c13565b6001600160a01b038116611be05760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109dc565b6000611beb83611674565b9050336001600160a01b03821614611c6b5760405162461bcd60e51b815260206004820152603f60248201527f455243313139305472616461626c653a205468652073656e64657220646f657360448201527f206e6f74206f776e20746865206f776e657273686970206c6963656e73652e0060648201526084016109dc565b61110381838561152d565b6060600180546108fb906142ae565b600e546000906001600160a01b03163314611ce25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b611cf0600f80546001019055565b6000611cfb600f5490565b9050611d078782613180565b611d12818787613386565b611d1d8185856133ff565b604080516001600160a01b038916815260ff86811660208301528516818301526060810183905290517fd3df8e557dd2db4e6ed42c0bc93d8dceae1dae9bd0d8bfa2c69d68759fceab539181900360800190a19695505050505050565b611d843382612e95565b611e1c5760405162461bcd60e51b815260206004820152605360248201527f455243313139303a205468652073656e646572206973206e656974686572207460448201527f6865206372656174697665206f776e6572206e6f7220617070726f766564207460648201527f6f206d616e6167652074686520746f6b656e2e00000000000000000000000000608482015260a4016109dc565b611103838383613589565b611e32338383613791565b5050565b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015611e9657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e78575b50505050509050919050565b60006001600160a01b038216611f0e5760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b506001600160a01b031660009081526008602052604090205490565b611f3381612b92565b611f925760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b6000818152601260205260409020546120395760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e7365206f66207468697320746f6b656e2063616e6e6f7420626520747260648201527f616e736665727265642e00000000000000000000000000000000000000000000608482015260a4016109dc565b6000818152601260205260409020543410156121095760405162461bcd60e51b815260206004820152606b60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206372656174697665206c6963656e7365206f662060848201527f7468697320746f6b656e2e00000000000000000000000000000000000000000060a482015260c4016109dc565b336121a25760405162461bcd60e51b815260206004820152604a60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206372656174697665206c6963656e736520746f20746865207a657260648201527f6f20616464726573732e00000000000000000000000000000000000000000000608482015260a4016109dc565b60006121ad82611052565b90506121ba813384611d7a565b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015611103573d6000803e3d6000fd5b60006121fa82612b92565b6122595760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526013602052604090205490565b60006108e682612da5565b60006001600160a01b0382166122f55760405162461bcd60e51b815260206004820152602a60248201527f455243313139303a206f776e65722063616e6e6f7420626520746865207a657260448201527f6f20616464726573732e0000000000000000000000000000000000000000000060648201526084016109dc565b506001600160a01b031660009081526006602052604090205490565b606061231c82612b92565b6123735760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000828152600d60205260408120805461238c906142ae565b9050116124015760405162461bcd60e51b815260206004820152602960248201527f455243313139303a204e6f2066696c65206173736f63696174656420746f207460448201527f686520746f6b656e2e000000000000000000000000000000000000000000000060648201526084016109dc565b600061240b61387f565b9050600081511161242b5760405180602001604052806000815250612460565b80600d60008581526020019081526020016000206040516020016124509291906143c1565b6040516020818303038152906040525b9392505050565b61247082612b92565b6124cf5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b6000811161256b5760405162461bcd60e51b815260206004820152604260248201527f455243313139305472616461626c653a20546865206372656174697665206c6960448201527f63656e736520636f7374206d7573742062652067726561746572207468616e2060648201527f302e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526012602052604090912055565b61258682612b92565b6125e55760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b600081116126815760405162461bcd60e51b815260206004820152604360248201527f455243313139305472616461626c653a205468652072656e74616c20636f737460448201527f20706572207365636f6e64206d7573742062652067726561746572207468616e60648201527f20302e0000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b60009182526013602052604090912055565b600061269e82612b92565b6126fd5760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b5060009081526011602052604090205490565b600e546001600160a01b0316331461276a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109dc565b6001600160a01b0381166127e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109dc565b6127ef81613121565b50565b61110383838361388e565b61280681612b92565b6128655760405162461bcd60e51b815260206004820152602a60248201527f455243313139305472616461626c653a2054686520746f6b656e20646f6573206044820152693737ba1032bc34b9ba1760b11b60648201526084016109dc565b60008181526011602052604090205461290c5760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a20546865206f776e657273686970206c60448201527f6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207460648201527f72616e736665727265642e000000000000000000000000000000000000000000608482015260a4016109dc565b6000818152601160205260409020543410156129dc5760405162461bcd60e51b815260206004820152606c60248201527f455243313139305472616461626c653a2054686520616d6f756e74206f66207760448201527f65692073656e74206973206e6f742073756666696369656e7420666f72206f6260648201527f7461696e696e6720746865206f776e657273686970206c6963656e7365206f6660848201527f207468697320746f6b656e2e000000000000000000000000000000000000000060a482015260c4016109dc565b33612a635760405162461bcd60e51b815260206004820152604b60248201527f455243313139305472616461626c653a2043616e6e6f74207472616e7366657260448201527f20746865206f776e657273686970206c6963656e736520746f20746865207a6560648201526a39379030b2323932b9b99760a91b608482015260a4016109dc565b6000612a6e82611674565b90506000612a7b83611052565b9050612a8882338561152d565b806001600160a01b0316826001600160a01b03161415612ad7576040516001600160a01b038316903480156108fc02916000818181858888f19350505050158015610c0d573d6000803e3d6000fd5b6000612ae284612e1d565b90506001600160a01b0383166108fc6064612afd8482614357565b612b0a9060ff1634614338565b612b149190614316565b6040518115909202916000818181858888f19350505050158015612b3c573d6000803e3d6000fd5b506001600160a01b0382166108fc6064612b5960ff851634614338565b612b639190614316565b6040518115909202916000818181858888f19350505050158015612b8b573d6000803e3d6000fd5b5050505050565b6000818152600260205260408120546001600160a01b0316158015906108e65750506000908152600360205260409020546001600160a01b0316151590565b600081815260096020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000612c4582612b92565b612c9c5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000612ca783611674565b9050806001600160a01b0316846001600160a01b03161480612ce25750836001600160a01b0316612cd78461097e565b6001600160a01b0316145b80612d1257506001600160a01b038082166000908152600c602090815260408083209388168352929052205460ff165b949350505050565b612d25848484612f19565b612d3184848484613a1b565b610c0d576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109dc565b6000612db082612b92565b612e075760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b506000908152600a602052604090205460ff1690565b6000612e2882612b92565b612e7f5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b506000908152600b602052604090205460ff1690565b6000612ea082612b92565b612ef75760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000612ca783611052565b612f0d848484613589565b612d3184848484613bbb565b6000612f2482611674565b9050836001600160a01b0316816001600160a01b031614612fd35760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b6001600160a01b03831661304f5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109dc565b61305b81600084612bd1565b6001600160a01b03841660009081526006602052604081208054600192906130849084906142ff565b90915550506001600160a01b03831660009081526006602052604081208054600192906130b2908490614472565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f91a450505050565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166131fc5760405162461bcd60e51b815260206004820152602760248201527f455243313139303a20746f2063616e6e6f7420626520746865207a65726f206160448201527f6464726573732e0000000000000000000000000000000000000000000000000060648201526084016109dc565b61320581612b92565b156132785760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20616c726561647920657869737460448201527f732e00000000000000000000000000000000000000000000000000000000000060648201526084016109dc565b6001600160a01b03821660009081526006602052604081208054600192906132a1908490614472565b90915550506001600160a01b03821660009081526007602052604081208054600192906132cf908490614472565b9091555050600081815260026020908152604080832080546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff199182168117909255600390935281842080549093168117909255518392907fe80a6bc7d5973fd4e185e65f6809de784f12b41b6e342e215b7d37669cd3cc7f908290a460405181906001600160a01b038416906000907f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca908290a45050565b61338f83612b92565b6133e65760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b6000838152600d60205260409020610c0d908383613d6c565b61340883612b92565b61345f5760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b60648260ff1611156134d95760405162461bcd60e51b815260206004820152603160248201527f455243313139303a20526f79616c747920666f722072656e74616c206f75742060448201527f6f662072616e6765205b302c3130305d2e00000000000000000000000000000060648201526084016109dc565b60648160ff1611156135535760405162461bcd60e51b815260206004820152603d60248201527f455243313139303a20526f79616c747920666f72206f776e657273686970207460448201527f72616e73666572206f7574206f662072616e6765205b302c3130305d2e00000060648201526084016109dc565b6000928352600a60209081526040808520805460ff1990811660ff96871617909155600b90925290932080549093169116179055565b600061359482611052565b9050836001600160a01b0316816001600160a01b0316146136435760405162461bcd60e51b815260206004820152604260248201527f455243313139303a2043616e6e6f74207472616e7366657220746865206f776e60448201527f657273686970206c6963656e7365206966206974206973206e6f74206f776e6560648201527f642e000000000000000000000000000000000000000000000000000000000000608482015260a4016109dc565b6001600160a01b0383166136bf5760405162461bcd60e51b815260206004820152602d60248201527f455243313139303a2043616e6e6f74207472616e7366657220746f207468652060448201527f7a65726f20616464726573732e0000000000000000000000000000000000000060648201526084016109dc565b6136cb81600084612bd1565b6001600160a01b03841660009081526007602052604081208054600192906136f49084906142ff565b90915550506001600160a01b0383166000908152600760205260408120805460019290613722908490614472565b9091555050600082815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918816917f17e7f9521d748f438723d107c498592c030975fd52ce9ca0ff758b7b96cb36ca91a450505050565b816001600160a01b0316836001600160a01b031614156138195760405162461bcd60e51b815260206004820152602c60248201527f455243313139303a20546865206f776e65722063616e6e6f7420617070726f7660448201527f6520746865697273656c662e000000000000000000000000000000000000000060648201526084016109dc565b6001600160a01b038381166000818152600c6020908152604080832094871680845294909152808220805460ff19168615159081179091559051909392917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191a4505050565b6060601080546108fb906142ae565b6001600160a01b0383166138f85760405162461bcd60e51b815260206004820152602b60248201527f455243313139303a2072656e7465722063616e6e6f7420626520746865207a6560448201526a39379030b2323932b9b99760a91b60648201526084016109dc565b61390182612b92565b6139585760405162461bcd60e51b815260206004820152602260248201527f455243313139303a2054686520746f6b656e20646f6573206e6f7420657869736044820152613a1760f11b60648201526084016109dc565b60008281526004602090815260408083206001600160a01b0387168085529083528184208590558584526005835281842080546001818101835591865284862001805473ffffffffffffffffffffffffffffffffffffffff191683179055908452600890925282208054919290916139d1908490614472565b909155505060405181815282906001600160a01b038516907fbde1f9520db9dbbe765a8fa71cf09322ecafa1c2ac591112fe5b2f137549d6de9060200160405180910390a3505050565b60006001600160a01b0384163b15613bb0576040517f6b6ea7610000000000000000000000000000000000000000000000000000000081526001600160a01b03851690636b6ea76190613a7890339089908890889060040161448a565b6020604051808303816000875af1925050508015613ab3575060408051601f3d908101601f19168201909252613ab0918101906144c6565b60015b613b65573d808015613ae1576040519150601f19603f3d011682016040523d82523d6000602084013e613ae6565b606091505b508051613b5d576040805162461bcd60e51b81526020600482015260248101919091527f455243313139303a205472616e7366657220746f20636f6e7472616374206e6f60448201527f7420696d706c656d656e74696e6720494552433131393052656365697665722e60648201526084016109dc565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f6b6ea76100000000000000000000000000000000000000000000000000000000149050612d12565b506001949350505050565b60006001600160a01b0384163b15613bb0576040517f996206e00000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063996206e090613c1890339089908890889060040161448a565b6020604051808303816000875af1925050508015613c53575060408051601f3d908101601f19168201909252613c50918101906144c6565b60015b613d21573d808015613c81576040519150601f19603f3d011682016040523d82523d6000602084013e613c86565b606091505b508051613b5d5760405162461bcd60e51b815260206004820152605560248201527f455243313139303a205472696564207472616e7366657220746f20636f6e747260448201527f616374206e6f7420696d706c656d656e74696e6720494552433131393043726560648201527f61746976654c6963656e736552656365697665722e0000000000000000000000608482015260a4016109dc565b7fffffffff00000000000000000000000000000000000000000000000000000000167f996206e000000000000000000000000000000000000000000000000000000000149050612d12565b828054613d78906142ae565b90600052602060002090601f016020900481019282613d9a5760008555613de0565b82601f10613db35782800160ff19823516178555613de0565b82800160010185558215613de0579182015b82811115613de0578235825591602001919060010190613dc5565b50613dec929150613df0565b5090565b5b80821115613dec5760008155600101613df1565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146127ef57600080fd5b600060208284031215613e4557600080fd5b813561246081613e05565b60005b83811015613e6b578181015183820152602001613e53565b83811115610c0d5750506000910152565b60008151808452613e94816020860160208601613e50565b601f01601f19169290920160200192915050565b6020815260006124606020830184613e7c565b600060208284031215613ecd57600080fd5b5035919050565b80356001600160a01b0381168114613eeb57600080fd5b919050565b60008060408385031215613f0357600080fd5b613f0c83613ed4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613f4657600080fd5b613f4f85613ed4565b9350613f5d60208601613ed4565b925060408501359150606085013567ffffffffffffffff80821115613f8157600080fd5b818701915087601f830112613f9557600080fd5b813581811115613fa757613fa7613f1a565b604051601f8201601f19908116603f01168101908382118183101715613fcf57613fcf613f1a565b816040528281528a6020848701011115613fe857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006060848603121561402157600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561404d57600080fd5b61405684613ed4565b925061406460208501613ed4565b9150604084013590509250925092565b60008060006060848603121561408957600080fd5b83359250602084013591506140a060408501613ed4565b90509250925092565b6000602082840312156140bb57600080fd5b61246082613ed4565b600080604083850312156140d757600080fd5b823591506140e760208401613ed4565b90509250929050565b6000806040838503121561410357600080fd5b50508035926020909101359150565b803560ff81168114613eeb57600080fd5b60008060008060006080868803121561413b57600080fd5b61414486613ed4565b9450602086013567ffffffffffffffff8082111561416157600080fd5b818801915088601f83011261417557600080fd5b81358181111561418457600080fd5b89602082850101111561419657600080fd5b6020830196508095505050506141ae60408701614112565b91506141bc60608701614112565b90509295509295909350565b600080604083850312156141db57600080fd5b6141e483613ed4565b9150602083013580151581146141f957600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156142455783516001600160a01b031683529284019291840191600101614220565b50909695505050505050565b6000806040838503121561426457600080fd5b61426d83613ed4565b91506140e760208401613ed4565b60008060006060848603121561429057600080fd5b61429984613ed4565b95602085013595506040909401359392505050565b600181811c908216806142c257607f821691505b602082108114156142e357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015614311576143116142e9565b500390565b60008261433357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614352576143526142e9565b500290565b600060ff821660ff841680821015614371576143716142e9565b90039392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006000198214156143ba576143ba6142e9565b5060010190565b6000835160206143d48285838901613e50565b845491840191600090600181811c90808316806143f257607f831692505b85831081141561441057634e487b7160e01b85526022600452602485fd5b808015614424576001811461443557614462565b60ff19851688528388019550614462565b60008b81526020902060005b8581101561445a5781548a820152908401908801614441565b505083880195505b50939a9950505050505050505050565b60008219821115614485576144856142e9565b500190565b60006001600160a01b038087168352808616602084015250836040830152608060608301526144bc6080830184613e7c565b9695505050505050565b6000602082840312156144d857600080fd5b815161246081613e0556fea26469706673582212204869c1daac692707a17c316c5f7a3418939a0487a81ff6069ae3d121fe5c2cbf64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2189:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:20",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:20",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "210:821:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "259:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "268:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "271:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "261:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "261:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "261:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "238:6:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "246:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:17:20"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "253:3:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "230:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "230:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "220:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "284:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "300:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "294:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:13:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "288:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "316:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "334:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "338:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "330:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "330:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "342:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:18:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "320:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "367:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "369:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "369:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "369:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "363:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "356:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "353:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "398:17:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:2:20",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "408:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:7:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "402:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "424:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "444:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "438:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "428:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "478:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "502:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "498:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "498:13:20"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "494:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "494:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "490:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:31:20"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "523:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "486:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "460:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "586:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "588:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "588:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "588:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "545:10:20"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "557:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "542:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "565:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "577:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "562:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "539:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "536:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "628:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "655:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "663:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "648:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "648:18:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "675:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "685:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "679:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "735:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "744:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "737:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "737:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "737:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "712:6:20"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "720:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "708:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "708:15:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "725:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "704:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "704:24:20"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "730:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "701:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "698:53:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "760:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "769:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "764:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "825:87:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "854:6:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "862:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "850:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "850:14:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "866:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "846:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "846:23:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "885:6:20"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:1:20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "881:3:20"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "881:14:20"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "897:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "877:23:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "871:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "871:30:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "839:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:63:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "839:63:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "790:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "793:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "787:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:9:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "797:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "799:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "808:1:20"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "811:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "804:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "799:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "783:3:20",
                    "statements": []
                  },
                  "src": "779:133:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "942:59:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "971:6:20"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "979:2:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "967:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "967:15:20"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "984:2:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "963:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "963:24:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "956:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "956:35:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "956:35:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "927:1:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "930:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "924:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "921:80:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:15:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1019:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1010:5:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "184:6:20",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "192:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "200:5:20",
                "type": ""
              }
            ],
            "src": "146:885:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:621:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1227:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1236:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1239:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1229:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1229:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1229:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1202:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1211:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1223:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1191:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1252:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1272:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:16:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1256:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1291:28:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:2:20",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:1:20",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1305:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1305:10:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1317:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1301:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:18:20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1295:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1346:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1355:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1358:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1348:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1348:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1348:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1342:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1331:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1328:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1371:71:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1414:9:20"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1425:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1410:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:22:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1434:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1381:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:61:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1371:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1451:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1488:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1473:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1467:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1455:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1533:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1523:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1507:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1517:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1589:9:20"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1600:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1585:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1611:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1556:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1628:41:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1654:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1665:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1644:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:25:20"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "1632:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1698:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1707:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1710:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1700:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1700:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1700:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "1684:8:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1694:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1681:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1681:16:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1678:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:73:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:20"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "1777:8:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1788:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1733:28:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:63:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1723:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1131:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1142:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1154:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1162:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1170:6:20",
                "type": ""
              }
            ],
            "src": "1036:766:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1862:325:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1886:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1889:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1933:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1939:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1907:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1980:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1982:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1996:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1992:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1982:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1960:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1950:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2070:111:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2098:3:20",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2103:10:20",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2094:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2094:20:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:31:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:31:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2135:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2128:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2156:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2156:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2156:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2026:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2049:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2046:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2023:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2020:161:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1842:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1851:6:20",
                "type": ""
              }
            ],
            "src": "1807:380:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30766:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:133:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "81:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "92:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "99:66:20",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "88:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "88:78:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "78:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "78:89:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "71:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "71:97:20"
                  },
                  "nodeType": "YulIf",
                  "src": "68:117:20"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "47:5:20",
                "type": ""
              }
            ],
            "src": "14:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "311:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "313:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "313:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "313:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "286:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "295:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "282:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "282:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "307:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "278:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "278:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "275:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "336:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "349:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "340:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "405:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "381:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "381:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "420:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "430:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "420:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "231:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "242:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "254:6:20",
                "type": ""
              }
            ],
            "src": "196:245:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "541:92:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "551:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "563:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "574:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "551:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "611:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "611:14:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "604:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "586:41:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "521:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "532:4:20",
                "type": ""
              }
            ],
            "src": "446:187:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:205:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "710:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "705:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:63:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "795:3:20"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:1:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "791:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "791:11:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "814:3:20"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:1:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "810:11:20"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "804:5:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "804:18:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "784:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "784:39:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "784:39:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "731:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "734:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "728:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "742:19:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "744:15:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "753:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:2:20",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "749:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "749:10:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "744:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "724:3:20",
                    "statements": []
                  },
                  "src": "720:113:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "859:31:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:20"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "877:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "868:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "868:16:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "861:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "861:27:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "861:27:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "848:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "851:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "845:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "842:48:20"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "669:3:20",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "674:3:20",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "679:6:20",
                "type": ""
              }
            ],
            "src": "638:258:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:267:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "961:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "981:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "975:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:12:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "965:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1003:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:19:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "996:19:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1050:5:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:16:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1068:3:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1073:4:20",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:14:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1080:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1024:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1024:63:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:116:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1111:3:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:6:20"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1132:2:20",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1120:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1120:15:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1137:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1116:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1116:88:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:98:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1103:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:109:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1096:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:20",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "935:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "943:3:20",
                "type": ""
              }
            ],
            "src": "901:317:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1344:99:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1361:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1372:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1354:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1354:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1354:21:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1384:53:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1410:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1392:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:45:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1384:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1313:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1324:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1335:4:20",
                "type": ""
              }
            ],
            "src": "1223:220:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:110:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1539:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1548:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1560:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1528:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1589:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1612:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1599:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:20",
                "type": ""
              }
            ],
            "src": "1448:180:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:125:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1744:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1786:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1801:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:74:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1714:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1725:4:20",
                "type": ""
              }
            ],
            "src": "1633:226:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1913:147:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1945:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1932:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1932:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1923:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2038:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2047:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2050:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2040:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2040:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2040:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1974:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1985:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1992:42:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1981:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1981:54:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1971:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:65:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:73:20"
                  },
                  "nodeType": "YulIf",
                  "src": "1961:93:20"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1892:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1903:5:20",
                "type": ""
              }
            ],
            "src": "1864:196:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2198:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2210:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2200:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2200:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2200:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2173:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2182:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2165:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2162:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2223:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2252:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2233:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2223:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2271:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2298:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2309:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2294:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2294:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2281:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2281:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2110:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2121:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2133:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2141:6:20",
                "type": ""
              }
            ],
            "src": "2065:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2356:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2373:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2376:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:4:20",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2463:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2494:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2487:15:20"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2324:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:1067:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2690:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2699:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2702:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2692:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2692:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2692:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2664:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2660:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2660:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2685:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2656:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2656:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2653:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2715:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2725:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2763:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2807:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2792:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2773:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2820:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2830:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2820:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2871:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2898:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2885:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2875:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2926:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2936:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2930:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2981:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2990:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2983:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2983:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2969:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2977:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2966:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "2963:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3006:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3020:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3031:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3016:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3016:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3010:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3086:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3095:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3088:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3088:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3088:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3065:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3061:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3061:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3076:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3047:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3111:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3134:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3121:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3121:16:20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3115:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3160:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3162:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3162:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3162:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3152:2:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3149:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:10:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3146:36:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3191:76:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3201:66:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3195:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3276:23:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3290:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:9:20"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3280:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3308:71:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3330:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3354:2:20"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3358:4:20",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3350:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3350:13:20"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3365:2:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3346:3:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3346:22:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3370:2:20",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3342:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3342:31:20"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "3375:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:40:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3326:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:53:20"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3312:10:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3438:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3440:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3440:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3440:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3397:10:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3409:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3394:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3417:10:20"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3429:6:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3414:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3414:22:20"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3391:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3391:46:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3388:72:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3476:2:20",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3480:10:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3469:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:22:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3507:6:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3515:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:18:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:18:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3564:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3573:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3576:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3566:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3566:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3566:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3541:2:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3545:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3537:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3537:11:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3550:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:20:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3555:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3530:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3527:53:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3606:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3602:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:15:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3623:2:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3627:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:11:20"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3632:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3589:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3589:46:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3589:46:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3659:6:20"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3667:2:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3655:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3655:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3651:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3651:24:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:1:20",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:35:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:35:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3688:16:20",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3698:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3688:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2585:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2596:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2608:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2616:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2624:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2632:6:20",
                "type": ""
              }
            ],
            "src": "2513:1197:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3819:212:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3865:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3874:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3877:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3867:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3867:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3867:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3840:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3849:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3836:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3836:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3832:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "3829:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3890:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3913:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3900:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3932:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3959:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3970:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3955:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3955:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3942:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3932:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3983:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4010:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4021:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4006:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4006:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3993:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3983:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3769:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3780:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3792:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3800:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3808:6:20",
                "type": ""
              }
            ],
            "src": "3715:316:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4133:87:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4155:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4166:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4143:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4185:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4200:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4208:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4196:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4196:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4178:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4178:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4178:36:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4102:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4113:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4124:4:20",
                "type": ""
              }
            ],
            "src": "4036:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4329:224:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4375:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4384:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4387:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4377:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4377:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4377:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4350:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4359:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4346:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4346:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4371:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4342:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4342:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4339:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4400:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4429:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4410:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4400:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4448:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4481:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4492:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4477:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4458:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4458:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4448:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4505:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4532:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4543:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4528:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4528:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4515:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4505:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4279:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4290:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4302:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4310:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4318:6:20",
                "type": ""
              }
            ],
            "src": "4225:328:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4662:218:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4708:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4717:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4720:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4710:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4710:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4710:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4683:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4692:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4679:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4679:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4704:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4675:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4675:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "4672:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4733:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4756:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4743:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4743:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4733:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4775:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4802:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4813:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4798:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4798:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4785:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4785:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4775:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4826:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4859:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4870:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4855:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4855:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4836:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4826:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4612:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4623:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4635:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4643:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4651:6:20",
                "type": ""
              }
            ],
            "src": "4558:322:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:76:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4996:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5008:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5019:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5004:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5004:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4996:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5038:9:20"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5049:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5031:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5031:25:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5031:25:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4955:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4966:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4977:4:20",
                "type": ""
              }
            ],
            "src": "4885:177:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5137:116:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5183:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5192:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5195:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5185:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5185:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5185:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5158:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5167:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5154:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5154:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5179:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5150:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5147:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5208:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5237:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5218:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5218:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5208:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5103:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5114:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5126:6:20",
                "type": ""
              }
            ],
            "src": "5067:186:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5345:167:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5391:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5400:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5403:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5393:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5393:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5393:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5366:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5375:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5362:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5362:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5387:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5358:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5358:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5355:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5416:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5439:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5426:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5426:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5416:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5458:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5491:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5502:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5487:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5487:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5468:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5458:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5303:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5314:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5326:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5334:6:20",
                "type": ""
              }
            ],
            "src": "5258:254:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5604:161:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5650:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5659:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5662:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5652:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5652:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5652:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5625:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5634:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5621:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5621:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5617:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5617:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5614:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5675:33:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5698:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5685:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:23:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5717:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5744:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5755:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5740:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5740:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5727:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5727:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5717:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5562:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5573:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5585:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5593:6:20",
                "type": ""
              }
            ],
            "src": "5517:248:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5817:109:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5827:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5849:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5836:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5836:20:20"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5827:5:20"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5904:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5913:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5916:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5906:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5906:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5906:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5878:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5889:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5896:4:20",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5885:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5885:16:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5875:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5875:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5868:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5868:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "5865:55:20"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5796:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5807:5:20",
                "type": ""
              }
            ],
            "src": "5770:156:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6068:670:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6115:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6124:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6127:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6117:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6117:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6117:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6089:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6098:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6085:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6085:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6110:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6081:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:33:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6078:53:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6140:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6169:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6150:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6150:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6140:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6188:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6219:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6230:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6215:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6215:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6202:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6202:32:20"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "6192:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6243:28:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6253:18:20",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6247:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6298:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6307:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6310:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6300:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6300:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6300:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6286:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6294:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6283:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6280:34:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6323:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6337:9:20"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6348:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6333:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6333:22:20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6327:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6403:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6412:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6415:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6405:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6405:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6405:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6382:2:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6386:4:20",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6378:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6378:13:20"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6393:7:20"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6374:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6374:27:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6367:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6367:35:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6364:55:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6428:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6455:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6442:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:16:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6432:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6485:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6494:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6497:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6487:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6487:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6487:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6473:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6481:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6470:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6470:14:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6467:34:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6551:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6560:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6563:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6553:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6553:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6553:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6524:2:20"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6528:6:20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6520:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6520:15:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6537:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6516:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6516:24:20"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6542:7:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6513:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6513:37:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6510:57:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6576:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6590:2:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6594:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6586:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:11:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6576:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6606:16:20",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "6616:6:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6606:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6631:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6662:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6673:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "6641:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6641:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6631:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6686:46:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6717:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6728:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6713:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6713:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "6696:16:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:36:20"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6686:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6002:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6013:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6025:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6033:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6041:6:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6049:6:20",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6057:6:20",
                "type": ""
              }
            ],
            "src": "5931:807:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6827:263:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6873:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6882:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6885:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6875:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6875:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6875:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6848:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6857:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6844:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6844:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6869:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6840:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "6837:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6898:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6927:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6908:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6908:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6898:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6946:45:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6976:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6987:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6972:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6972:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6959:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6959:32:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6950:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7044:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7053:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7056:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7046:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7046:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7046:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7013:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7034:5:20"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7027:6:20"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7027:13:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7020:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7020:21:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7010:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7010:32:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7003:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7003:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7000:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7069:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7079:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7069:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6785:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6796:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6808:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6816:6:20",
                "type": ""
              }
            ],
            "src": "6743:347:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7246:530:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7256:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7266:2:20",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7260:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7277:32:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7295:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7306:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7291:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7291:18:20"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "7281:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7325:9:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7336:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7318:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7318:21:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7348:17:20",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "7359:6:20"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "7352:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7374:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7394:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7388:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7388:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7378:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7417:6:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7425:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7410:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:22:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7410:22:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7441:25:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7452:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7463:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7448:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7448:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7441:3:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7475:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7493:6:20"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7501:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7489:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7489:15:20"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "7479:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7513:10:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7522:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7517:1:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7581:169:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7602:3:20"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "7617:6:20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "7611:5:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7611:13:20"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7626:42:20",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "7607:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7607:62:20"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7595:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7595:75:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7595:75:20"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7683:19:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7694:3:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7699:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7690:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7690:12:20"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7683:3:20"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7715:25:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7729:6:20"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "7737:2:20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7725:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7725:15:20"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7715:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7543:1:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7546:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7540:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7540:13:20"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7554:18:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7556:14:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7565:1:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7568:1:20",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7561:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7561:9:20"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7556:1:20"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7536:3:20",
                    "statements": []
                  },
                  "src": "7532:218:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7759:11:20",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7767:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7759:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7215:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7226:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7237:4:20",
                "type": ""
              }
            ],
            "src": "7095:681:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7868:173:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7914:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7923:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7926:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7916:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7916:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7916:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7889:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7898:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7885:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7885:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7910:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7881:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7881:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "7878:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7939:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7968:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7949:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7949:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7939:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7987:48:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8020:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8031:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8016:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8016:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7997:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:38:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7987:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7826:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7837:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7849:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7857:6:20",
                "type": ""
              }
            ],
            "src": "7781:260:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:218:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8196:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8205:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8208:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8198:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8198:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8198:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8171:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8180:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8167:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8167:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8192:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8163:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8163:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "8160:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8221:39:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8250:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8231:18:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8231:29:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8221:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8269:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8296:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8307:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8292:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8292:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8279:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8279:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8269:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8320:42:20",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8347:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8358:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8343:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8343:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8330:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8330:32:20"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8320:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8100:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8111:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8123:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8131:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8139:6:20",
                "type": ""
              }
            ],
            "src": "8046:322:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8428:382:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8438:22:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8452:1:20",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8455:4:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "8448:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8448:12:20"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8438:6:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8469:38:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8499:4:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8505:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8495:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:12:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8473:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8546:31:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8548:27:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8562:6:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8570:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8558:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8558:17:20"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8548:6:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8526:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8519:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8519:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "8516:61:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8636:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8657:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8660:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8650:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8650:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8650:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8758:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8761:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8751:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8751:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8751:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8786:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8789:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8779:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8779:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8779:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8592:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8615:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8623:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8612:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8612:14:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8589:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8589:38:20"
                  },
                  "nodeType": "YulIf",
                  "src": "8586:218:20"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8408:4:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8417:6:20",
                "type": ""
              }
            ],
            "src": "8373:437:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8989:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9006:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9017:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8999:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8999:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8999:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9040:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9051:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9036:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9036:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9056:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9029:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9029:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9029:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9079:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9090:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9075:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9075:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20646f6573206e6f742065786973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9095:34:20",
                        "type": "",
                        "value": "ERC1190: The token does not exis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9068:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9068:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9068:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9150:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9161:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9146:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9146:18:20"
                      },
                      {
                        "hexValue": "742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9166:4:20",
                        "type": "",
                        "value": "t."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9139:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9139:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9139:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9180:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9192:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9203:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9188:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9188:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9180:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8966:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8980:4:20",
                "type": ""
              }
            ],
            "src": "8815:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9392:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9409:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9420:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9402:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9402:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9402:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9443:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9454:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9439:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9439:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9459:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9432:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9432:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9482:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9493:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9478:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9478:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9498:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9471:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9471:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9553:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9564:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9549:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9549:18:20"
                      },
                      {
                        "hexValue": "656e74206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9569:12:20",
                        "type": "",
                        "value": "ent owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9542:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9542:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9542:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9591:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9603:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9614:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9599:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9599:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9591:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9369:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9383:4:20",
                "type": ""
              }
            ],
            "src": "9218:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9803:241:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9820:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9831:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9813:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9813:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9813:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9854:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9865:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9850:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9850:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9870:2:20",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9843:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9843:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9843:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9893:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9904:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9889:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9889:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f7420617070726f7665207468652063757272",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9909:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot approve the curr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9882:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9882:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9882:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9964:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9975:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9960:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9960:18:20"
                      },
                      {
                        "hexValue": "656e74206372656174697665206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9980:21:20",
                        "type": "",
                        "value": "ent creative owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9953:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9953:49:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9953:49:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10011:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10023:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10034:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10019:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10019:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10011:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe8c7dd15717b57b6e8bc8026ad82732e0aecd45fba1c522abf8cccd0cfa50f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9780:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9794:4:20",
                "type": ""
              }
            ],
            "src": "9629:415:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10223:321:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10240:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10251:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10233:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10233:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10233:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10274:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10285:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10270:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10270:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10290:2:20",
                        "type": "",
                        "value": "91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10263:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10263:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10263:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10313:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10324:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10309:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10309:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10329:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10302:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10302:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10302:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10384:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10395:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10380:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10380:18:20"
                      },
                      {
                        "hexValue": "68652028637265617469766529206f776e6572206f662074686520746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10400:34:20",
                        "type": "",
                        "value": "he (creative) owner of the token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10373:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10373:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10455:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10466:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10451:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10451:19:20"
                      },
                      {
                        "hexValue": "206e6f7220617070726f76656420746f206d616e6167652069742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10472:29:20",
                        "type": "",
                        "value": " nor approved to manage it."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10444:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10444:58:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10444:58:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10511:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10523:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10534:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10519:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10519:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10511:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9b32d7df821f88f28ae53321015ec4ac9e68ab5a73ee407e87b8c3426f268d1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10200:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10214:4:20",
                "type": ""
              }
            ],
            "src": "10049:495:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10723:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10740:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10751:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10733:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10774:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10785:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10770:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10770:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10790:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10763:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10763:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10813:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10824:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10809:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10809:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10829:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10802:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10802:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10802:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10884:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10895:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10880:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10880:18:20"
                      },
                      {
                        "hexValue": "6865206f776e6572206e6f7220617070726f76656420746f206d616e61676520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10900:34:20",
                        "type": "",
                        "value": "he owner nor approved to manage "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10873:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10873:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10873:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10955:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10966:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10951:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10951:19:20"
                      },
                      {
                        "hexValue": "74686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10972:12:20",
                        "type": "",
                        "value": "the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10944:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10944:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10944:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10994:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11006:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11017:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11002:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11002:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10994:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10700:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10714:4:20",
                "type": ""
              }
            ],
            "src": "10549:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11206:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11223:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11234:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11216:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11216:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11216:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11257:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11268:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11253:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11253:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11273:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11246:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11246:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11246:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11296:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11307:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11292:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11292:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f657320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11312:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The token does "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11285:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11285:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11285:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11367:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11378:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11363:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11363:18:20"
                      },
                      {
                        "hexValue": "6e6f742065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11383:12:20",
                        "type": "",
                        "value": "not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11356:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11356:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11356:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11405:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11417:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11428:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11413:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11413:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11405:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11183:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11197:4:20",
                "type": ""
              }
            ],
            "src": "11032:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11617:295:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11634:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11645:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11627:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11627:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11627:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11668:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11679:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11664:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11664:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11684:2:20",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11657:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11657:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11657:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11707:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11718:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11703:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11703:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11723:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The asset relat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11696:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11696:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11696:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11778:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11789:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11774:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11774:18:20"
                      },
                      {
                        "hexValue": "656420746f207468697320746f6b656e206973206e6f742072656e7461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11794:34:20",
                        "type": "",
                        "value": "ed to this token is not rentable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11767:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11767:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11767:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11849:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11860:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11845:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11845:19:20"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11866:3:20",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11838:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11838:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11838:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11879:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11891:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11902:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11887:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11887:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11879:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11594:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11608:4:20",
                "type": ""
              }
            ],
            "src": "11443:469:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11949:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11966:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11969:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11959:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11959:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11959:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12063:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12066:4:20",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12056:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12056:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12056:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12087:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12090:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12080:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12080:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12080:15:20"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11917:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12155:76:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12177:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12179:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12179:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12179:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12171:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12174:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12168:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:8:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12165:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12208:17:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12220:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12223:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12216:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12216:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12208:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12137:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12140:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12146:4:20",
                "type": ""
              }
            ],
            "src": "12106:125:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12282:228:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12313:168:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12334:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12337:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12327:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12327:88:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12327:88:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12435:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12438:4:20",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12428:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12428:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12428:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12463:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12466:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12456:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12456:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12456:15:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12302:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12295:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12295:9:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12292:189:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12490:14:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12499:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12502:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12495:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12495:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12490:1:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12267:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12270:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12276:1:20",
                "type": ""
              }
            ],
            "src": "12236:274:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12689:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12706:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12717:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12699:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12699:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12699:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12740:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12751:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12736:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12736:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12756:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12729:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12729:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12729:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12779:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12790:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12775:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12775:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12795:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12768:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12768:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12768:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12850:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12861:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12846:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12846:18:20"
                      },
                      {
                        "hexValue": "206d75737420626520706f7369746976652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12866:20:20",
                        "type": "",
                        "value": " must be positive."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12839:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12839:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12839:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12896:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12908:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12919:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12904:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12904:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12896:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12666:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12680:4:20",
                "type": ""
              }
            ],
            "src": "12515:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12986:176:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13105:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13107:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13107:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13107:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13017:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13010:6:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13010:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13003:6:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13003:17:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13025:1:20"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13032:66:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13100:1:20"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13028:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13028:74:20"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13022:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13022:81:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12999:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12999:105:20"
                  },
                  "nodeType": "YulIf",
                  "src": "12996:131:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13136:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13151:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13154:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13147:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13147:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13136:7:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12965:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12968:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12974:7:20",
                "type": ""
              }
            ],
            "src": "12934:228:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13341:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13358:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13369:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13351:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13351:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13351:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13392:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13403:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13388:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13388:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13408:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13381:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13381:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13381:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13431:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13442:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13427:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13427:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13447:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13420:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13420:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13420:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13502:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13513:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13498:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13498:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420746f20636f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13518:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient to cov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13491:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13491:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13491:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13573:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13584:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13569:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13569:19:20"
                      },
                      {
                        "hexValue": "6572207468652072656e7420657870656e7365732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13590:23:20",
                        "type": "",
                        "value": "er the rent expenses."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13562:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13562:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13562:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13623:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13635:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13646:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13631:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13631:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13623:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13318:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13332:4:20",
                "type": ""
              }
            ],
            "src": "13167:489:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13708:148:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13718:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13733:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13736:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13729:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13729:12:20"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "13722:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13750:23:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13765:1:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13768:4:20",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13761:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13761:12:20"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "13754:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13798:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13800:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13800:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13800:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "13788:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "13793:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13785:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13785:12:20"
                  },
                  "nodeType": "YulIf",
                  "src": "13782:38:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13829:21:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "13841:3:20"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "13846:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13837:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13837:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13829:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13690:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13693:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13699:4:20",
                "type": ""
              }
            ],
            "src": "13661:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14035:242:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14052:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14063:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14045:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14045:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14045:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14086:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14097:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14082:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14082:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14102:2:20",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14075:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14075:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14075:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14125:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14136:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14121:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14121:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206372656174697665206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14141:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has creative own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14114:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14114:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14114:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14196:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14207:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14192:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14192:18:20"
                      },
                      {
                        "hexValue": "657273686970206f76657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14212:22:20",
                        "type": "",
                        "value": "ership over tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14185:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14185:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14185:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14244:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14256:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14267:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14252:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14252:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14244:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14012:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14026:4:20",
                "type": ""
              }
            ],
            "src": "13861:416:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14456:313:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14473:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14484:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14466:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14466:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14466:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14507:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14518:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14503:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14503:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14523:2:20",
                        "type": "",
                        "value": "83"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14496:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14496:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14496:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14546:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14557:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14542:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14542:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652073656e646572206973206e6569746865722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14562:34:20",
                        "type": "",
                        "value": "ERC1190: The sender is neither t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14535:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14535:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14535:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14617:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14628:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14613:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14613:18:20"
                      },
                      {
                        "hexValue": "6865206372656174697665206f776e6572206e6f7220617070726f7665642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14633:34:20",
                        "type": "",
                        "value": "he creative owner nor approved t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14606:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14606:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14606:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14688:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14699:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14684:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14684:19:20"
                      },
                      {
                        "hexValue": "6f206d616e6167652074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14705:21:20",
                        "type": "",
                        "value": "o manage the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14677:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14677:50:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14677:50:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14736:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14748:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14759:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14744:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14744:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14736:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14433:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14447:4:20",
                "type": ""
              }
            ],
            "src": "14282:487:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14948:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14965:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14976:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14958:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14958:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14958:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14999:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15010:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14995:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14995:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15015:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14988:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14988:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14988:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15038:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15049:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15034:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15034:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2072656e7465722063616e6e6f7420626520746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15054:34:20",
                        "type": "",
                        "value": "ERC1190: renter cannot be the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15027:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15027:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15027:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15109:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15120:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15105:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15105:18:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15125:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15098:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15098:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15098:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15148:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15160:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15171:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15156:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15156:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15148:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14925:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14939:4:20",
                "type": ""
              }
            ],
            "src": "14774:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15360:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15377:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15388:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15370:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15370:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15370:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15411:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15422:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15407:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15407:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15427:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15400:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15400:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15400:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15450:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15461:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15446:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15446:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205468652072656e74657220686173206e6f742072656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15466:34:20",
                        "type": "",
                        "value": "ERC1190: The renter has not rent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15439:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15439:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15439:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15521:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15532:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15517:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15517:18:20"
                      },
                      {
                        "hexValue": "65642074686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15537:15:20",
                        "type": "",
                        "value": "ed the token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15510:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15510:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15510:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15562:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15574:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15585:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15570:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15570:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15562:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15337:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15351:4:20",
                "type": ""
              }
            ],
            "src": "15186:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15632:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15649:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15652:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15642:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15642:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15642:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15746:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15749:4:20",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15739:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15739:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15739:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15770:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15773:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15763:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15763:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15763:15:20"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "15600:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15821:152:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15838:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15841:77:20",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15831:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15831:88:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15831:88:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15935:1:20",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15938:4:20",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15928:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15928:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15928:15:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15959:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15962:4:20",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15952:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15952:15:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15952:15:20"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "15789:184:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16025:148:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16116:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16118:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16118:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16118:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16041:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16048:66:20",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "16038:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16038:77:20"
                  },
                  "nodeType": "YulIf",
                  "src": "16035:103:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16147:20:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16158:5:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16165:1:20",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16154:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16154:13:20"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "16147:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16007:5:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "16017:3:20",
                "type": ""
              }
            ],
            "src": "15978:195:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16352:240:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16369:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16380:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16362:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16362:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16362:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16403:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16414:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16399:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16399:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16419:2:20",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16392:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16392:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16392:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16442:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16453:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16438:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16438:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2063726561746976654f776e65722063616e6e6f74206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16458:34:20",
                        "type": "",
                        "value": "ERC1190: creativeOwner cannot be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16431:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16431:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16431:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16513:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16524:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16509:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16509:18:20"
                      },
                      {
                        "hexValue": "20746865207a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16529:20:20",
                        "type": "",
                        "value": " the zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16502:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16502:48:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16502:48:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16559:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16571:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16582:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16567:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16567:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16559:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16329:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16343:4:20",
                "type": ""
              }
            ],
            "src": "16178:414:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16771:233:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16788:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16799:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16781:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16781:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16781:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16822:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16833:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16818:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16818:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16838:2:20",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16811:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16811:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16811:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16861:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16872:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16857:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16857:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f626f647920686173206f776e657273686970206f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16877:34:20",
                        "type": "",
                        "value": "ERC1190: Nobody has ownership ov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16850:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16850:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16850:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16932:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16943:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16928:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16928:18:20"
                      },
                      {
                        "hexValue": "657220746f6b656e49642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16948:13:20",
                        "type": "",
                        "value": "er tokenId."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16921:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16921:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16921:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16971:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16983:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16994:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16979:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16979:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16971:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16748:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16762:4:20",
                "type": ""
              }
            ],
            "src": "16597:407:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17183:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17200:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17211:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17193:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17193:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17193:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17234:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17245:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17230:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17230:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17250:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17223:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17223:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17223:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17273:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17284:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17269:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17269:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17289:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17262:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17262:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17262:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17344:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17355:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17340:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17340:18:20"
                      },
                      {
                        "hexValue": "20746865206372656174697665206c6963656e736520746f20746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17360:34:20",
                        "type": "",
                        "value": " the creative license to the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17333:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17333:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17333:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17415:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17426:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17411:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17411:19:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17432:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17404:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17404:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17404:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17454:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17466:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17477:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17462:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17462:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17454:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17160:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17174:4:20",
                "type": ""
              }
            ],
            "src": "17009:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17666:252:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17683:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17694:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17676:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17676:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17676:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17717:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17728:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17713:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17713:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17733:2:20",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17706:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17706:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17706:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17756:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17767:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17752:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17752:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17772:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17745:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17745:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17745:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17827:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17838:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17823:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17823:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17843:32:20",
                        "type": "",
                        "value": " not own the creative license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17816:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17816:60:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17816:60:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17885:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17897:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17908:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17893:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17893:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17885:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17643:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17657:4:20",
                "type": ""
              }
            ],
            "src": "17492:426:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18097:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18114:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18125:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18107:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18107:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18107:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18148:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18159:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18144:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18144:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18164:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18137:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18137:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18137:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18187:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18198:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18183:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18183:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18203:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18176:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18176:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18176:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18247:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18259:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18270:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18255:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18255:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18247:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18074:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18088:4:20",
                "type": ""
              }
            ],
            "src": "17923:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18458:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18475:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18486:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18468:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18468:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18468:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18509:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18520:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18505:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18505:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18525:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18498:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18498:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18498:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18548:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18559:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18544:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18544:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18564:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18537:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18537:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18537:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18619:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18630:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18615:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18615:18:20"
                      },
                      {
                        "hexValue": "6963656e736520636f7374206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18635:34:20",
                        "type": "",
                        "value": "icense cost must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18608:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18608:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18608:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18690:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18701:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18686:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18686:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18707:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18679:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18679:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18679:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18722:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18734:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18745:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18730:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18730:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18722:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18435:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18449:4:20",
                "type": ""
              }
            ],
            "src": "18284:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18934:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18951:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18962:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18944:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18944:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18944:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18985:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18996:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18981:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18981:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19001:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18974:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18974:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18974:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19024:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19035:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19020:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19020:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e73666572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19040:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: Cannot transfer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19013:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19013:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19013:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19095:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19106:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19091:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19091:18:20"
                      },
                      {
                        "hexValue": "20746865206f776e657273686970206c6963656e736520746f20746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19111:34:20",
                        "type": "",
                        "value": " the ownership license to the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19084:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19084:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19084:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19166:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19177:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19162:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19162:19:20"
                      },
                      {
                        "hexValue": "726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19183:13:20",
                        "type": "",
                        "value": "ro address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19155:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19155:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19155:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19206:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19218:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19229:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19214:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19214:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19206:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18911:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18925:4:20",
                "type": ""
              }
            ],
            "src": "18760:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19418:253:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19435:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19446:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19428:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19428:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19428:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19469:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19480:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19465:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19465:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19485:2:20",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19458:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19458:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19458:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19508:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19519:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19504:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19504:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19524:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The sender does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19497:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19497:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19497:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19579:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19590:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19575:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19575:18:20"
                      },
                      {
                        "hexValue": "206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19595:33:20",
                        "type": "",
                        "value": " not own the ownership license."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19568:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19568:61:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19568:61:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19638:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19650:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19661:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19646:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19646:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19638:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19395:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19409:4:20",
                "type": ""
              }
            ],
            "src": "19244:427:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19853:277:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19863:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19875:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19886:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19871:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19871:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19863:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19906:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19921:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19929:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19917:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19917:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19899:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19899:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19899:74:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19993:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20004:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19989:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19989:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20013:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20021:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20009:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20009:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19982:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19982:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19982:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20047:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20058:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20043:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20043:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "20067:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20075:4:20",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20063:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20063:17:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20036:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20036:45:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20036:45:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20101:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20112:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20097:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20097:18:20"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "20117:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20090:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20090:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20090:34:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19798:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19809:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19817:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19825:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19833:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19844:4:20",
                "type": ""
              }
            ],
            "src": "19676:454:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20309:304:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20326:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20337:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20319:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20319:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20319:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20360:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20371:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20356:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20356:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20376:2:20",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20349:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20349:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20349:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20399:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20410:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20395:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20395:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20415:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20388:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20388:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20388:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20470:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20481:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20466:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20466:18:20"
                      },
                      {
                        "hexValue": "63656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20486:34:20",
                        "type": "",
                        "value": "cense of this token cannot be tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20459:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20459:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20459:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20541:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20552:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20537:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20537:19:20"
                      },
                      {
                        "hexValue": "616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20558:12:20",
                        "type": "",
                        "value": "ansferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20530:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20530:41:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20530:41:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20580:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20592:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20603:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20588:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20588:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20580:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20286:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20300:4:20",
                "type": ""
              }
            ],
            "src": "20135:478:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20792:378:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20809:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20820:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20802:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20802:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20802:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20843:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20854:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20839:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20839:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20859:3:20",
                        "type": "",
                        "value": "107"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20832:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20832:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20832:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20883:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20894:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20879:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20879:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20899:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20872:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20872:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20872:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20954:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20965:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20950:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20950:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20970:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20943:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20943:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20943:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21025:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21036:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21021:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21021:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206372656174697665206c6963656e7365206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21042:34:20",
                        "type": "",
                        "value": "taining the creative license of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21014:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21014:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21014:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21097:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21108:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21093:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21093:19:20"
                      },
                      {
                        "hexValue": "7468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21114:13:20",
                        "type": "",
                        "value": "this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21086:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21086:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21086:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21137:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21149:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21160:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21145:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21145:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21137:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20769:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20783:4:20",
                "type": ""
              }
            ],
            "src": "20618:552:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21349:232:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21366:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21377:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21359:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21359:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21359:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21400:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21411:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21396:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21396:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21416:2:20",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21389:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21389:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21389:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21439:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21450:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21435:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21435:18:20"
                      },
                      {
                        "hexValue": "455243313139303a206f776e65722063616e6e6f7420626520746865207a6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21455:34:20",
                        "type": "",
                        "value": "ERC1190: owner cannot be the zer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21428:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21428:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21428:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21510:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21521:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21506:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21506:18:20"
                      },
                      {
                        "hexValue": "6f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21526:12:20",
                        "type": "",
                        "value": "o address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21499:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21499:40:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21499:40:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21548:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21560:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21571:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21556:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21556:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21548:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21326:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21340:4:20",
                "type": ""
              }
            ],
            "src": "21175:406:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21760:231:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21777:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21788:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21770:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21770:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21770:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21811:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21822:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21807:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21807:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21827:2:20",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21800:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21800:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21800:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21850:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21861:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21846:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21846:18:20"
                      },
                      {
                        "hexValue": "455243313139303a204e6f2066696c65206173736f63696174656420746f2074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21866:34:20",
                        "type": "",
                        "value": "ERC1190: No file associated to t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21839:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21839:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21839:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21921:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21932:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21917:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21917:18:20"
                      },
                      {
                        "hexValue": "686520746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21937:11:20",
                        "type": "",
                        "value": "he token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21910:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21910:39:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21910:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21958:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21970:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21981:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21966:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21966:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21958:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21737:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21751:4:20",
                "type": ""
              }
            ],
            "src": "21586:405:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22052:65:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22069:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "22072:3:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22062:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22062:14:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22062:14:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22085:26:20",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22103:1:20",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22106:4:20",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "22093:9:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22093:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "22085:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "22035:3:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "22043:4:20",
                "type": ""
              }
            ],
            "src": "21996:121:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22306:1266:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22316:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22336:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22330:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22330:13:20"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "22320:6:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22352:14:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22362:4:20",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "22356:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22401:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22409:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22397:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22397:15:20"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22414:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22419:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22375:21:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22375:51:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22375:51:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22435:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22452:3:20"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22457:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22448:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22448:16:20"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "22439:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22473:12:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22484:1:20",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "ret",
                      "nodeType": "YulTypedName",
                      "src": "22477:3:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22494:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22517:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "22511:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22511:13:20"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "22498:9:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22533:19:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "22549:3:20"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "22537:8:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22561:11:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "22571:1:20",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "22565:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22581:30:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "22597:2:20"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "22601:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "22593:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22593:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "length_1",
                      "nodeType": "YulIdentifier",
                      "src": "22581:8:20"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22620:44:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "22650:9:20"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "22661:2:20"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "22646:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22646:18:20"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "22624:18:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22711:55:20",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "22725:31:20",
                        "value": {
                          "arguments": [
                            {
                              "name": "length_1",
                              "nodeType": "YulIdentifier",
                              "src": "22741:8:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22751:4:20",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "22737:3:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22737:19:20"
                        },
                        "variableNames": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "22725:8:20"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "22683:18:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22676:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22676:26:20"
                  },
                  "nodeType": "YulIf",
                  "src": "22673:93:20"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22827:172:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22848:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22853:77:20",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22841:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22841:90:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22841:90:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22951:1:20",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22954:4:20",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22944:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22944:15:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22944:15:20"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "22979:3:20"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22984:4:20",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "22972:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22972:17:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22972:17:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "22781:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "22804:8:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "22814:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "22801:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22801:16:20"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "22778:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22778:40:20"
                  },
                  "nodeType": "YulIf",
                  "src": "22775:224:20"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "23049:161:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23070:5:20"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "23081:9:20"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23092:66:20",
                                      "type": "",
                                      "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "23077:3:20"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "23077:82:20"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "23063:6:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23063:97:20"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "23063:97:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "23173:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23184:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23191:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "23180:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23180:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "23173:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "23042:168:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23047:1:20",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "23226:321:20",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "23240:52:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23285:6:20"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "23255:29:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23255:37:20"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "23244:7:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "23305:10:20",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23314:1:20",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "23309:1:20",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "23384:113:20",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "end_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "23413:5:20"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "23420:1:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "23409:3:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23409:13:20"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "23430:7:20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "23424:5:20"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23424:14:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "23402:6:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23402:37:20"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "23402:37:20"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "23456:27:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "23471:7:20"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "23480:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23467:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23467:16:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "23456:7:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "23339:1:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23342:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "23336:2:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23336:15:20"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "23352:19:20",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "23354:15:20",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "23363:1:20"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "23366:2:20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23359:3:20"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23359:10:20"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "23354:1:20"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "23332:3:20",
                              "statements": []
                            },
                            "src": "23328:169:20"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "23510:27:20",
                            "value": {
                              "arguments": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23521:5:20"
                                },
                                {
                                  "name": "length_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "23528:8:20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "23517:3:20"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "23517:20:20"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "23510:3:20"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "23219:328:20",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23224:1:20",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "23015:18:20"
                  },
                  "nodeType": "YulSwitch",
                  "src": "23008:539:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23556:10:20",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "23563:3:20"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23556:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22274:3:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22279:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22287:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22298:3:20",
                "type": ""
              }
            ],
            "src": "22122:1450:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23751:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23768:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23779:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23761:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23761:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23761:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23802:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23813:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23798:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23798:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23818:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23791:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23791:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23791:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23841:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23852:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23837:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23837:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23857:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The creative li"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23830:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23830:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23830:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23912:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23923:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23908:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23908:18:20"
                      },
                      {
                        "hexValue": "63656e736520636f7374206d7573742062652067726561746572207468616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23928:34:20",
                        "type": "",
                        "value": "cense cost must be greater than "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23901:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23901:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23901:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23983:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23994:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23979:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23979:19:20"
                      },
                      {
                        "hexValue": "302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24000:4:20",
                        "type": "",
                        "value": "0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23972:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23972:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23972:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24014:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24026:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24037:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24022:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24022:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24014:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23728:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23742:4:20",
                "type": ""
              }
            ],
            "src": "23577:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24226:297:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24243:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24254:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24236:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24236:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24236:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24277:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24288:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24273:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24273:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24293:2:20",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24266:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24266:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24266:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24316:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24327:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24312:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24312:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f7374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24332:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The rental cost"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24305:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24305:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24305:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24387:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24398:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24383:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24383:18:20"
                      },
                      {
                        "hexValue": "20706572207365636f6e64206d7573742062652067726561746572207468616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24403:34:20",
                        "type": "",
                        "value": " per second must be greater than"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24376:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24376:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24376:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24458:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24469:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24454:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24454:19:20"
                      },
                      {
                        "hexValue": "20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24475:5:20",
                        "type": "",
                        "value": " 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24447:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24447:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24447:34:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24490:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24502:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24513:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24498:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24498:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24490:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24203:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24217:4:20",
                "type": ""
              }
            ],
            "src": "24052:471:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24702:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24719:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24730:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24712:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24712:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24712:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24753:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24764:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24749:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24749:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24769:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24742:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24742:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24742:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24792:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24803:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24788:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24788:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24808:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24781:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24781:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24781:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24863:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24874:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24859:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24859:18:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24879:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24852:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24852:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24852:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24897:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24909:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24920:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24905:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24905:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24897:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24679:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24693:4:20",
                "type": ""
              }
            ],
            "src": "24528:402:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25109:305:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25126:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25137:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25119:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25119:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25119:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25160:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25171:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25156:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25156:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25176:2:20",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25149:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25149:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25149:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25199:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25210:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25195:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25195:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25215:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The ownership l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25188:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25188:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25188:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25270:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25281:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25266:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25266:18:20"
                      },
                      {
                        "hexValue": "6963656e7365206f66207468697320746f6b656e2063616e6e6f742062652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25286:34:20",
                        "type": "",
                        "value": "icense of this token cannot be t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25259:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25259:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25259:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25341:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25352:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25337:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25337:19:20"
                      },
                      {
                        "hexValue": "72616e736665727265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25358:13:20",
                        "type": "",
                        "value": "ransferred."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25330:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25330:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25330:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25381:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25393:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25404:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25389:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25389:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25381:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25086:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25100:4:20",
                "type": ""
              }
            ],
            "src": "24935:479:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25593:379:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25610:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25621:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25603:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25603:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25603:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25644:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25655:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25640:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25640:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25660:3:20",
                        "type": "",
                        "value": "108"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25633:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25633:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25633:31:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25684:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25695:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25680:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25680:18:20"
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f662077",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25700:34:20",
                        "type": "",
                        "value": "ERC1190Tradable: The amount of w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25673:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25673:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25673:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25755:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25766:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25751:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25751:18:20"
                      },
                      {
                        "hexValue": "65692073656e74206973206e6f742073756666696369656e7420666f72206f62",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25771:34:20",
                        "type": "",
                        "value": "ei sent is not sufficient for ob"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25744:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25744:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25744:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25826:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25837:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25822:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25822:19:20"
                      },
                      {
                        "hexValue": "7461696e696e6720746865206f776e657273686970206c6963656e7365206f66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25843:34:20",
                        "type": "",
                        "value": "taining the ownership license of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25815:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25815:63:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25815:63:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25898:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25909:3:20",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25894:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25894:19:20"
                      },
                      {
                        "hexValue": "207468697320746f6b656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25915:14:20",
                        "type": "",
                        "value": " this token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25887:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25887:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25887:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25939:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25951:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25962:3:20",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25947:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25947:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25939:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25570:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25584:4:20",
                "type": ""
              }
            ],
            "src": "25419:553:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26151:254:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26168:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26179:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26161:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26161:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26161:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26202:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26213:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26198:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26198:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26218:2:20",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26191:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26191:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26191:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26241:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26252:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26237:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26237:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472616e7366657220746f20636f6e7472616374206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26257:34:20",
                        "type": "",
                        "value": "ERC1190: Transfer to contract no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26230:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26230:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26230:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26312:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26323:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26308:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26308:18:20"
                      },
                      {
                        "hexValue": "7420696d706c656d656e74696e6720494552433131393052656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26328:34:20",
                        "type": "",
                        "value": "t implementing IERC1190Receiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26301:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26301:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26301:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26372:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26384:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26395:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26380:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26380:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26372:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26128:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26142:4:20",
                "type": ""
              }
            ],
            "src": "25977:428:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26584:296:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26601:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26612:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26594:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26594:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26594:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26635:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26646:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26631:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26631:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26651:2:20",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26624:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26624:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26624:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26674:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26685:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26670:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26670:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746865206f776e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26690:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer the own"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26663:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26663:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26663:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26745:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26756:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26741:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26741:18:20"
                      },
                      {
                        "hexValue": "657273686970206c6963656e7365206966206974206973206e6f74206f776e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26761:34:20",
                        "type": "",
                        "value": "ership license if it is not owne"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26734:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26734:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26734:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26816:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26827:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26812:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26812:19:20"
                      },
                      {
                        "hexValue": "642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26833:4:20",
                        "type": "",
                        "value": "d."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26805:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26805:33:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26805:33:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26847:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26859:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26870:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26855:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26855:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26847:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26561:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26575:4:20",
                "type": ""
              }
            ],
            "src": "26410:470:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27059:235:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27076:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27087:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27069:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27069:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27069:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27110:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27121:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27106:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27106:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27126:2:20",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27099:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27099:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27099:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27149:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27160:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27145:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27145:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2043616e6e6f74207472616e7366657220746f2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27165:34:20",
                        "type": "",
                        "value": "ERC1190: Cannot transfer to the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27138:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27138:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27138:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27220:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27231:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27216:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27216:18:20"
                      },
                      {
                        "hexValue": "7a65726f20616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27236:15:20",
                        "type": "",
                        "value": "zero address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27209:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27209:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27209:43:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27261:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27273:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27284:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27269:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27269:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27261:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27036:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27050:4:20",
                "type": ""
              }
            ],
            "src": "26885:409:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27347:80:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "27374:22:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "27376:16:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "27376:18:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "27376:18:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "27363:1:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "27370:1:20"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "27366:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27366:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "27360:2:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27360:13:20"
                  },
                  "nodeType": "YulIf",
                  "src": "27357:39:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27405:16:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "27416:1:20"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "27419:1:20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27412:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27412:9:20"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "27405:3:20"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "27330:1:20",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "27333:1:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "27339:3:20",
                "type": ""
              }
            ],
            "src": "27299:128:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27606:229:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27623:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27634:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27616:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27616:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27616:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27657:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27668:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27653:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27653:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27673:2:20",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27646:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27646:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27646:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27696:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27707:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27692:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27692:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20746f2063616e6e6f7420626520746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27712:34:20",
                        "type": "",
                        "value": "ERC1190: to cannot be the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27685:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27685:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27685:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27767:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27778:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27763:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27763:18:20"
                      },
                      {
                        "hexValue": "6464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27783:9:20",
                        "type": "",
                        "value": "ddress."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27756:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27756:37:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27756:37:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27802:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27814:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27825:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27810:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27810:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27802:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27583:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27597:4:20",
                "type": ""
              }
            ],
            "src": "27432:403:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28014:224:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28031:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28042:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28024:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28024:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28024:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28065:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28076:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28061:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28061:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28081:2:20",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28054:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28054:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28054:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28104:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28115:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28100:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28100:18:20"
                      },
                      {
                        "hexValue": "455243313139303a2054686520746f6b656e20616c7265616479206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28120:34:20",
                        "type": "",
                        "value": "ERC1190: The token already exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28093:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28093:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28093:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28175:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28186:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28171:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28171:18:20"
                      },
                      {
                        "hexValue": "732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28191:4:20",
                        "type": "",
                        "value": "s."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28164:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28164:32:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28164:32:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28205:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28217:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28228:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28213:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28213:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28205:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27991:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28005:4:20",
                "type": ""
              }
            ],
            "src": "27840:398:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28417:239:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28434:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28445:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28427:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28427:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28427:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28468:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28479:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28464:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28464:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28484:2:20",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28457:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28457:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28457:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28507:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28518:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28503:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28503:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f722072656e74616c206f757420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28523:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for rental out "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28496:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28496:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28496:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28578:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28589:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28574:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28574:18:20"
                      },
                      {
                        "hexValue": "6f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28594:19:20",
                        "type": "",
                        "value": "of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28567:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28567:47:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28567:47:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28623:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28635:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28646:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28631:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28631:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28623:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28394:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28408:4:20",
                "type": ""
              }
            ],
            "src": "28243:413:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28835:251:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28852:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28863:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28845:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28845:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28845:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28886:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28897:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28882:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28882:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28902:2:20",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28875:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28875:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28875:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28925:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28936:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28921:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28921:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20526f79616c747920666f72206f776e6572736869702074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28941:34:20",
                        "type": "",
                        "value": "ERC1190: Royalty for ownership t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28914:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28914:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28914:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28996:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29007:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28992:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28992:18:20"
                      },
                      {
                        "hexValue": "72616e73666572206f7574206f662072616e6765205b302c3130305d2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29012:31:20",
                        "type": "",
                        "value": "ransfer out of range [0,100]."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28985:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28985:59:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28985:59:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29053:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29065:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29076:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29061:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29061:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29053:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28812:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28826:4:20",
                "type": ""
              }
            ],
            "src": "28661:425:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29265:234:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29282:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29293:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29275:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29275:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29275:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29316:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29327:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29312:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29312:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29332:2:20",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29305:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29305:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29305:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29355:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29366:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29351:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29351:18:20"
                      },
                      {
                        "hexValue": "455243313139303a20546865206f776e65722063616e6e6f7420617070726f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29371:34:20",
                        "type": "",
                        "value": "ERC1190: The owner cannot approv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29344:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29344:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29344:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29426:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29437:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29422:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29422:18:20"
                      },
                      {
                        "hexValue": "6520746865697273656c662e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29442:14:20",
                        "type": "",
                        "value": "e theirself."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29415:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29415:42:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29415:42:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29466:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29478:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29489:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29474:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29474:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29466:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29242:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29256:4:20",
                "type": ""
              }
            ],
            "src": "29091:408:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29707:309:20",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "29717:52:20",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "29727:42:20",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "29721:2:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29785:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "29800:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29808:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29796:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29796:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29778:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29778:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29778:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29832:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29843:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29828:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29828:18:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "29852:6:20"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "29860:2:20"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "29848:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29848:15:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29821:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29821:43:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29821:43:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29884:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29895:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29880:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29880:18:20"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "29900:6:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29873:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29873:34:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29873:34:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29927:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29938:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29923:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29923:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29943:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29916:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29916:31:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29916:31:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29956:54:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "29982:6:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29994:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30005:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29990:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29990:19:20"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "29964:17:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29964:46:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29956:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29652:9:20",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "29663:6:20",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "29671:6:20",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "29679:6:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "29687:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29698:4:20",
                "type": ""
              }
            ],
            "src": "29504:512:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30101:169:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30147:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30156:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "30159:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "30149:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30149:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30149:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "30122:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30131:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "30118:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30118:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30143:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "30114:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30114:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "30111:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "30172:29:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30191:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "30185:5:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30185:16:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "30176:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30234:5:20"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "30210:23:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30210:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30210:30:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30249:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "30259:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "30249:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30067:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "30078:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "30090:6:20",
                "type": ""
              }
            ],
            "src": "30021:249:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30449:315:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30466:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30477:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30459:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30459:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30459:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30500:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30511:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30496:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30496:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30516:2:20",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30489:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30489:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30489:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30539:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30550:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30535:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30535:18:20"
                      },
                      {
                        "hexValue": "455243313139303a205472696564207472616e7366657220746f20636f6e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30555:34:20",
                        "type": "",
                        "value": "ERC1190: Tried transfer to contr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30528:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30528:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30528:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30610:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30621:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30606:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30606:18:20"
                      },
                      {
                        "hexValue": "616374206e6f7420696d706c656d656e74696e67204945524331313930437265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30626:34:20",
                        "type": "",
                        "value": "act not implementing IERC1190Cre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30599:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30599:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30599:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30681:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30692:3:20",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30677:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30677:19:20"
                      },
                      {
                        "hexValue": "61746976654c6963656e736552656365697665722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30698:23:20",
                        "type": "",
                        "value": "ativeLicenseReceiver."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30670:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30670:52:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30670:52:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30731:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30743:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30754:3:20",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30739:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30739:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30731:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30426:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30440:4:20",
                "type": ""
              }
            ],
            "src": "30275:489:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := abi_decode_uint8(add(headStart, 64))\n        value4 := abi_decode_uint8(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_e93d2c1f528ea9fb32625c26c0cf9264f726360f133fc66a8f05e49a0a803f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token does not exis\")\n        mstore(add(headStart, 96), \"t.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5d577f36245d5fcedc371f8c418f65103cad4f47f39566f65e89b4437b4bc82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fe8c7dd15717b57b6e8bc8026ad82732e0aecd45fba1c522abf8cccd0cfa50f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ERC1190: Cannot approve the curr\")\n        mstore(add(headStart, 96), \"ent creative owner.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c9b32d7df821f88f28ae53321015ec4ac9e68ab5a73ee407e87b8c3426f268d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 91)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he (creative) owner of the token\")\n        mstore(add(headStart, 128), \" nor approved to manage it.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_85651c43fe622fff9ebcfc1751cf8fb3b20c90af5ca36201711955f77c76f5a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he owner nor approved to manage \")\n        mstore(add(headStart, 128), \"the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The token does \")\n        mstore(add(headStart, 96), \"not exist.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The asset relat\")\n        mstore(add(headStart, 96), \"ed to this token is not rentable\")\n        mstore(add(headStart, 128), \".\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental time\")\n        mstore(add(headStart, 96), \" must be positive.\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient to cov\")\n        mstore(add(headStart, 128), \"er the rent expenses.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_687bdd8c55ff44370886ee20dae8514a825a644e3ad09a7590fdc4c5440307b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has creative own\")\n        mstore(add(headStart, 96), \"ership over tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8c528e1cbb7140f8b9b451aa3a9711dbd562b77d533af91bf3e51104a16402c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"ERC1190: The sender is neither t\")\n        mstore(add(headStart, 96), \"he creative owner nor approved t\")\n        mstore(add(headStart, 128), \"o manage the token.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ab847d4ea204c10025c399c271a4631eb38915931adbf668889b0ea15ab15b55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: renter cannot be the ze\")\n        mstore(add(headStart, 96), \"ro address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc88e5d5293f15f49d607dccb095a3885b72640c283fbcfbfd73ea2dd34917ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: The renter has not rent\")\n        mstore(add(headStart, 96), \"ed the token.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_0c3e4427acbf39c235a135b1897f506f567d50bd99e61589be15769a151bbff1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1190: creativeOwner cannot be\")\n        mstore(add(headStart, 96), \" the zero address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52cc25a0ffe3911ca80c04d179d2e8533be805d0a4291af4170c7b3251b2625a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1190: Nobody has ownership ov\")\n        mstore(add(headStart, 96), \"er tokenId.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the creative license to the zer\")\n        mstore(add(headStart, 128), \"o address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the creative license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense cost must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: Cannot transfer\")\n        mstore(add(headStart, 96), \" the ownership license to the ze\")\n        mstore(add(headStart, 128), \"ro address.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The sender does\")\n        mstore(add(headStart, 96), \" not own the ownership license.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint8_t_uint8_t_uint256__to_t_address_t_uint8_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense of this token cannot be tr\")\n        mstore(add(headStart, 128), \"ansferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 107)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the creative license of \")\n        mstore(add(headStart, 160), \"this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_786c9d9edd067fa4225d8ff3ab3a91cc4ba2cebfa199faf249f671a8d7883ad1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1190: owner cannot be the zer\")\n        mstore(add(headStart, 96), \"o address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_63df593e584b91b10aab1f133a2591394f2039ac044bb1a4cd912f2bcc19b441__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1190: No file associated to t\")\n        mstore(add(headStart, 96), \"he token.\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let ret := 0\n        let slotValue := sload(value1)\n        let length_1 := ret\n        let _2 := 1\n        length_1 := shr(_2, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _2)\n        if iszero(outOfPlaceEncoding)\n        {\n            length_1 := and(length_1, 0x7f)\n        }\n        if eq(outOfPlaceEncoding, lt(length_1, _1))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(end_1, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(end_1, length_1)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value1)\n            let i := 0\n            for { } lt(i, length_1) { i := add(i, _1) }\n            {\n                mstore(add(end_1, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_1, length_1)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The creative li\")\n        mstore(add(headStart, 96), \"cense cost must be greater than \")\n        mstore(add(headStart, 128), \"0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The rental cost\")\n        mstore(add(headStart, 96), \" per second must be greater than\")\n        mstore(add(headStart, 128), \" 0.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The ownership l\")\n        mstore(add(headStart, 96), \"icense of this token cannot be t\")\n        mstore(add(headStart, 128), \"ransferred.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 108)\n        mstore(add(headStart, 64), \"ERC1190Tradable: The amount of w\")\n        mstore(add(headStart, 96), \"ei sent is not sufficient for ob\")\n        mstore(add(headStart, 128), \"taining the ownership license of\")\n        mstore(add(headStart, 160), \" this token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_ab41e8441ded30b2a98d61c22fd580309a3ac0dac62cfebe723321c3fb2fa654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"ERC1190: Transfer to contract no\")\n        mstore(add(headStart, 96), \"t implementing IERC1190Receiver.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9334f79209549c3c5f8bb87ef3d33f51c223efa460c69b055d9cf7566aec5e39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer the own\")\n        mstore(add(headStart, 96), \"ership license if it is not owne\")\n        mstore(add(headStart, 128), \"d.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5781ba3fda801b0016f4de2836b66eb018a8842cbec7395a704e9b2724cc9180__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1190: Cannot transfer to the \")\n        mstore(add(headStart, 96), \"zero address.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6dce100e4625c0077c5621ac9c36f1b5197feb2b95ff6e3c31eeecff5103486c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC1190: to cannot be the zero a\")\n        mstore(add(headStart, 96), \"ddress.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53475461563bdba041930cfa68d356abdee62a228109a52041a7ae4937164c35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC1190: The token already exist\")\n        mstore(add(headStart, 96), \"s.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_08af2b6b40f445445c65009c1bb3ccb0bf6cb31a4493a17ceee62279fc5fb985__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for rental out \")\n        mstore(add(headStart, 96), \"of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0204e991fd223feed074eb1b9a81d0e9eee567324f1b57892e5f574d0356d375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC1190: Royalty for ownership t\")\n        mstore(add(headStart, 96), \"ransfer out of range [0,100].\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aa669ccb2d3d5908e209836766b77b78e60b40653e548da6cfc65cc915fc8c90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC1190: The owner cannot approv\")\n        mstore(add(headStart, 96), \"e theirself.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0fb3adb5e7d4e2ca62cef86d2e1db739c67ca84e9ae5f77a68f0648a82b4fc11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"ERC1190: Tried transfer to contr\")\n        mstore(add(headStart, 96), \"act not implementing IERC1190Cre\")\n        mstore(add(headStart, 128), \"ativeLicenseReceiver.\")\n        tail := add(headStart, 160)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "261:10983:8:-:0;;;998:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2320:17:7;;1128:9:8;;1139:11;;2320:17:7;;:5;;:17;;;;;:::i;:::-;-1:-1:-1;2348:21:7;;;;:7;;:21;;;;;:::i;:::-;;2245:132;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1162:20:8;;::::1;::::0;:5:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;998:191:::0;;;261:10983;;640:96:2;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;261:10983:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:10983:8;;;-1:-1:-1;261:10983:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:20;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:20;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:20;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:20:o;1036:766::-;1154:6;1162;1170;1223:2;1211:9;1202:7;1198:23;1194:32;1191:52;;;1239:1;1236;1229:12;1191:52;1266:16;;-1:-1:-1;;;;;1331:14:20;;;1328:34;;;1358:1;1355;1348:12;1328:34;1381:61;1434:7;1425:6;1414:9;1410:22;1381:61;:::i;:::-;1371:71;;1488:2;1477:9;1473:18;1467:25;1451:41;;1517:2;1507:8;1504:16;1501:36;;;1533:1;1530;1523:12;1501:36;1556:63;1611:7;1600:8;1589:9;1585:24;1556:63;:::i;:::-;1546:73;;1665:2;1654:9;1650:18;1644:25;1628:41;;1694:2;1684:8;1681:16;1678:36;;;1710:1;1707;1700:12;1678:36;;1733:63;1788:7;1777:8;1766:9;1762:24;1733:63;:::i;:::-;1723:73;;;1036:766;;;;;:::o;1807:380::-;1886:1;1882:12;;;;1929;;;1950:61;;2004:4;1996:6;1992:17;1982:27;;1950:61;2057:2;2049:6;2046:14;2026:18;2023:38;2020:161;;;2103:10;2098:3;2094:20;2091:1;2084:31;2138:4;2135:1;2128:15;2166:4;2163:1;2156:15;2020:161;;1807:380;;;:::o;:::-;261:10983:8;;;;;;",
  "deployedSourceMap": "261:10983:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:357:7;;;;;;;;;;-1:-1:-1;2449:357:7;;;;;:::i;:::-;;:::i;:::-;;;611:14:20;;604:22;586:41;;574:2;559:18;2449:357:7;;;;;;;;5165:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8098:261::-;;;;;;;;;;-1:-1:-1;8098:261:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1797:55:20;;;1779:74;;1767:2;1752:18;8098:261:7;1633:226:20;6911:794:7;;;;;;;;;;-1:-1:-1;6911:794:7;;;;;:::i;:::-;;:::i;:::-;;12233:418;;;;;;;;;;-1:-1:-1;12233:418:7;;;;;:::i;:::-;;:::i;5254:1474:8:-;;;;;;:::i;:::-;;:::i;4464:379:7:-;;;;;;;;;;-1:-1:-1;4464:379:7;;;;;:::i;:::-;;:::i;19720:198::-;;;;;;;;;;-1:-1:-1;19720:198:7;;;;;:::i;:::-;;:::i;:::-;;;4208:4:20;4196:17;;;4178:36;;4166:2;4151:18;19720:198:7;4036:184:20;14534:207:7;;;;;;;;;;-1:-1:-1;14534:207:7;;;;;:::i;:::-;;:::i;14824:433::-;;;;;;;;;;-1:-1:-1;14824:433:7;;;;;:::i;:::-;;:::i;21193:1443::-;;;;;;;;;;-1:-1:-1;21193:1443:7;;;;;:::i;:::-;;:::i;:::-;;;5031:25:20;;;5019:2;5004:18;21193:1443:7;4885:177:20;10693:376:7;;;;;;;;;;-1:-1:-1;10693:376:7;;;;;:::i;:::-;;:::i;3261:355::-;;;;;;;;;;-1:-1:-1;3261:355:7;;;;;:::i;:::-;;:::i;4063:330::-;;;;;;;;;;-1:-1:-1;4063:330:7;;;;;:::i;:::-;;:::i;1195:102:8:-;;;;;;;;;;;;;:::i;9417:513::-;;;;;;;;;;-1:-1:-1;9417:513:8;;;;;:::i;:::-;;:::i;1514:220::-;;;;;;;;;;-1:-1:-1;1514:220:8;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;3144:407:8:-;;;;;;;;;;-1:-1:-1;3144:407:8;;;;;:::i;:::-;;:::i;22705:406:7:-;;;;;;;;;;-1:-1:-1;22705:406:7;;;;;:::i;:::-;;:::i;11940:209::-;;;;;;;;;;-1:-1:-1;11940:209:7;;;;;:::i;:::-;;:::i;7023:485:8:-;;;;;;;;;;-1:-1:-1;7023:485:8;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;5337:106:7;;;;;;;;;;;;;:::i;2309:599:8:-;;;;;;;;;;-1:-1:-1;2309:599:8;;;;;:::i;:::-;;:::i;13220:391:7:-;;;;;;;;;;-1:-1:-1;13220:391:7;;;;;:::i;:::-;;:::i;8432:187::-;;;;;;;;;;-1:-1:-1;8432:187:7;;;;;:::i;:::-;;:::i;4908:189::-;;;;;;;;;;-1:-1:-1;4908:189:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3687:313::-;;;;;;;;;;-1:-1:-1;3687:313:7;;;;;:::i;:::-;;:::i;10269:973:8:-;;;;;;:::i;:::-;;:::i;1740:207::-;;;;;;;;;;-1:-1:-1;1740:207:8;;;;;:::i;:::-;;:::i;19272:176:7:-;;;;;;;;;;-1:-1:-1;19272:176:7;;;;;:::i;:::-;;:::i;2876:307::-;;;;;;;;;;-1:-1:-1;2876:307:7;;;;;:::i;:::-;;:::i;5954:552::-;;;;;;;;;;-1:-1:-1;5954:552:7;;;;;:::i;:::-;;:::i;3786:404:8:-;;;;;;;;;;-1:-1:-1;3786:404:8;;;;;:::i;:::-;;:::i;9209:214:7:-;;;;;;;;;;-1:-1:-1;9209:214:7;;;;;:::i;:::-;-1:-1:-1;;;;;9380:25:7;;;9351:4;9380:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;9209:214;4387:382:8;;;;;;;;;;-1:-1:-1;4387:382:8;;;;;:::i;:::-;;:::i;1303:205::-;;;;;;;;;;-1:-1:-1;1303:205:8;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;20269:220:7:-;;;;;;;;;;-1:-1:-1;20269:220:7;;;;;:::i;:::-;;:::i;7850:1255:8:-;;;;;;:::i;:::-;;:::i;2449:357:7:-;2596:4;2638:41;;;;;:107;;-1:-1:-1;2696:49:7;;;2711:34;2696:49;2638:107;:160;;;-1:-1:-1;952:25:5;937:40;;;;2762:36:7;2618:180;2449:357;-1:-1:-1;;2449:357:7:o;5165:102::-;5221:13;5254:5;5247:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5165:102;:::o;8098:261::-;8219:7;8252:16;8260:7;8252;:16::i;:::-;8244:63;;;;-1:-1:-1;;;8244:63:7;;9017:2:20;8244:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;8244:63:7;;;;;;;;;-1:-1:-1;8327:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;8327:24:7;;8098:261::o;6911:794::-;6992:13;7008:24;7024:7;7008:15;:24::i;:::-;6992:40;;7043:21;7067:32;7091:7;7067:23;:32::i;:::-;7043:56;;7124:5;-1:-1:-1;;;;;7118:11:7;:2;-1:-1:-1;;;;;7118:11:7;;;7110:66;;;;-1:-1:-1;;;7110:66:7;;9420:2:20;7110:66:7;;;9402:21:20;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;9569:12;9549:18;;;9542:40;9599:19;;7110:66:7;9218:406:20;7110:66:7;7215:13;-1:-1:-1;;;;;7209:19:7;:2;-1:-1:-1;;;;;7209:19:7;;;7187:120;;;;-1:-1:-1;;;7187:120:7;;9831:2:20;7187:120:7;;;9813:21:20;9870:2;9850:18;;;9843:30;9909:34;9889:18;;;9882:62;9980:21;9960:18;;;9953:49;10019:19;;7187:120:7;9629:415:20;7187:120:7;719:10:2;-1:-1:-1;;;;;7342:21:7;;;;:71;;-1:-1:-1;719:10:2;-1:-1:-1;;;;;7384:29:7;;;7342:71;:129;;;-1:-1:-1;7434:37:7;7451:5;719:10:2;9209:214:7;:::i;7434:37::-;7342:195;;;-1:-1:-1;7492:45:7;7509:13;719:10:2;9209:214:7;:::i;7492:45::-;7320:336;;;;-1:-1:-1;;;7320:336:7;;10251:2:20;7320:336:7;;;10233:21:20;10290:2;10270:18;;;10263:30;10329:34;10309:18;;;10302:62;10400:34;10380:18;;;10373:62;10472:29;10451:19;;;10444:58;10519:19;;7320:336:7;10049:495:20;7320:336:7;7669:28;7678:5;7685:2;7689:7;7669:8;:28::i;:::-;6981:724;;6911:794;;:::o;12233:418::-;12433:41;719:10:2;12466:7:7;12433:18;:41::i;:::-;12411:165;;;;-1:-1:-1;;;12411:165:7;;10751:2:20;12411:165:7;;;10733:21:20;10790:2;10770:18;;;10763:30;10829:34;10809:18;;;10802:62;10900:34;10880:18;;;10873:62;10972:12;10951:19;;;10944:41;11002:19;;12411:165:7;10549:478:20;12411:165:7;12589:54;12619:4;12625:2;12629:7;12638:4;12589:29;:54::i;5254:1474:8:-;5428:22;5442:7;5428:13;:22::i;:::-;5407:111;;;;-1:-1:-1;;;5407:111:8;;11234:2:20;5407:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;5407:111:8;11032:406:20;5407:111:8;5574:1;5550:21;;;:12;:21;;;;;;5529:137;;;;-1:-1:-1;;;5529:137:8;;11645:2:20;5529:137:8;;;11627:21:20;11684:2;11664:18;;;11657:30;11723:34;11703:18;;;11696:62;11794:34;11774:18;;;11767:62;11866:3;11845:19;;;11838:32;11887:19;;5529:137:8;11443:469:20;5529:137:8;5677:25;5763:4;5706:53;5735:24;5706:26;:53;:::i;:::-;5705:62;;;;:::i;:::-;5677:90;;5819:1;5799:17;:21;5778:118;;;;-1:-1:-1;;;5778:118:8;;12717:2:20;5778:118:8;;;12699:21:20;12756:2;12736:18;;;12729:30;12795:34;12775:18;;;12768:62;12866:20;12846:18;;;12839:48;12904:19;;5778:118:8;12515:414:20;5778:118:8;5907:24;5954:21;;;:12;:21;;;;;;5934:41;;:17;:41;:::i;:::-;5907:68;;6020:16;6007:9;:29;;5986:161;;;;-1:-1:-1;;;5986:161:8;;13369:2:20;5986:161:8;;;13351:21:20;13408:2;13388:18;;;13381:30;13447:34;13427:18;;;13420:62;13518:34;13498:18;;;13491:62;13590:23;13569:19;;;13562:52;13631:19;;5986:161:8;13167:489:20;5986:161:8;6158:21;6190:22;6204:7;6190:13;:22::i;:::-;6158:55;;6223:29;6263:30;6285:7;6263:21;:30::i;:::-;6223:71;-1:-1:-1;6305:118:8;719:10:2;6366:7:8;6387:26;6305:15;:118::i;:::-;6447:13;-1:-1:-1;;;;;6438:22:8;:5;-1:-1:-1;;;;;6438:22:8;;6434:288;;;6476:25;;-1:-1:-1;;;;;6476:14:8;;;6491:9;6476:25;;;;;;;;;6491:9;6476:14;:25;;;;;;;;;;;;;;;;;;;;;6434:288;;;6532:13;6548:32;6572:7;6548:23;:32::i;:::-;6532:48;-1:-1:-1;;;;;;6595:14:8;;:51;6642:3;6624:13;6532:48;6642:3;6624:13;:::i;:::-;6611:27;;;;:9;:27;:::i;:::-;6610:35;;;;:::i;:::-;6595:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6660:22:8;;:51;6707:3;6684:19;;;;:9;:19;:::i;:::-;6683:27;;;;:::i;:::-;6660:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6518:204;6434:288;5397:1331;;;;5254:1474;;;:::o;4464:379:7:-;4589:7;4638:24;;;:15;:24;;;;;;-1:-1:-1;;;;;4638:24:7;4695:27;4673:129;;;;-1:-1:-1;;;4673:129:7;;14063:2:20;4673:129:7;;;14045:21:20;14102:2;14082:18;;;14075:30;14141:34;14121:18;;;14114:62;14212:22;14192:18;;;14185:50;14252:19;;4673:129:7;13861:416:20;19720:198:7;19842:5;19872:38;19901:8;19872:28;:38::i;14534:207::-;14683:50;14711:4;14717:2;14721:7;14683:50;;;;;;;;;;;;:27;:50::i;:::-;14534:207;;;:::o;14824:433::-;15023:49;719:10:2;15064:7:7;15023:26;:49::i;:::-;15001:182;;;;-1:-1:-1;;;15001:182:7;;14484:2:20;15001:182:7;;;14466:21:20;14523:2;14503:18;;;14496:30;14562:34;14542:18;;;14535:62;14633:34;14613:18;;;14606:62;14705:21;14684:19;;;14677:50;14744:19;;15001:182:7;14282:487:20;15001:182:7;15196:53;15225:4;15231:2;15235:7;15244:4;15196:28;:53::i;21193:1443::-;21345:7;21378:16;21386:7;21378;:16::i;:::-;21370:63;;;;-1:-1:-1;;;21370:63:7;;9017:2:20;21370:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;21370:63:7;8815:398:20;21370:63:7;-1:-1:-1;;;;;21468:20:7;;21446:113;;;;-1:-1:-1;;;21446:113:7;;14976:2:20;21446:113:7;;;14958:21:20;15015:2;14995:18;;;14988:30;15054:34;15034:18;;;15027:62;-1:-1:-1;;;15105:18:20;;;15098:41;15156:19;;21446:113:7;14774:407:20;21446:113:7;21594:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21594:25:7;;;;;;;;;;21572:125;;;;-1:-1:-1;;;21572:125:7;;15388:2:20;21572:125:7;;;15370:21:20;15427:2;15407:18;;;15400:30;15466:34;15446:18;;;15439:62;15537:15;15517:18;;;15510:43;15570:19;;21572:125:7;15186:409:20;21572:125:7;21710:18;21731:17;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21731:25:7;;;;;;;;;;21773:24;;;21769:815;;;21883:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;21883:25:7;;;;;;;;;21876:32;;;21883:17;21955:575;22014:21;;;;:12;:21;;;;;:28;22010:32;;:41;;;;;22047:4;22046:5;22010:41;21955:575;;;22112:21;;;;:12;:21;;;;;:24;;-1:-1:-1;;;;;22112:34:7;;;:21;22134:1;;22112:24;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;22112:24:7;:34;22108:407;;;22308:21;;;;:12;:21;;;;;22356:28;;:32;;22387:1;;22356:32;:::i;:::-;22308:103;;;;;;;;:::i;:::-;;;;;;;;;;;;;22281:21;;;:12;:21;;;;;;;:24;;-1:-1:-1;;;;;22308:103:7;;;;22303:1;;22281:24;;;;;;:::i;:::-;;;;;;;;;;;;;:130;;-1:-1:-1;;22281:130:7;-1:-1:-1;;;;;22281:130:7;;;;;;;;;;;22434:21;;;:12;:21;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;22434:27:7;;;;;-1:-1:-1;;22434:27:7;;;;;;;;-1:-1:-1;22108:407:7;22070:3;;;;:::i;:::-;;;;21955:575;;;-1:-1:-1;;;;;;22544:23:7;;;;;;:15;:23;;;;;:28;;22571:1;;22544:23;:28;;22571:1;;22544:28;:::i;:::-;;;;-1:-1:-1;;;21769:815:7;-1:-1:-1;;22603:17:7;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;22603:25:7;;;;;;;;;;21193:1443;;;;;:::o;10693:376::-;10861:41;719:10:2;10894:7:7;10861:18;:41::i;:::-;10839:165;;;;-1:-1:-1;;;10839:165:7;;10751:2:20;10839:165:7;;;10733:21:20;10790:2;10770:18;;;10763:30;10829:34;10809:18;;;10802:62;10900:34;10880:18;;;10873:62;10972:12;10951:19;;;10944:41;11002:19;;10839:165:7;10549:478:20;10839:165:7;11017:44;11043:4;11049:2;11053:7;11017:25;:44::i;3261:355::-;3399:7;-1:-1:-1;;;;;3446:27:7;;3424:127;;;;-1:-1:-1;;;3424:127:7;;16380:2:20;3424:127:7;;;16362:21:20;16419:2;16399:18;;;16392:30;16458:34;16438:18;;;16431:62;16529:20;16509:18;;;16502:48;16567:19;;3424:127:7;16178:414:20;3424:127:7;-1:-1:-1;;;;;;3571:37:7;;;;;:22;:37;;;;;;;3261:355::o;4063:330::-;4180:7;4221:16;;;:7;:16;;;;;;-1:-1:-1;;;;;4221:16:7;4270:19;4248:112;;;;-1:-1:-1;;;4248:112:7;;16799:2:20;4248:112:7;;;16781:21:20;16838:2;16818:18;;;16811:30;16877:34;16857:18;;;16850:62;16948:13;16928:18;;;16921:41;16979:19;;4248:112:7;16597:407:20;1195:102:8;1245:7;1271:19;:9;918:14:3;;827:112;1271:19:8;1264:26;;1195:102;:::o;9417:513::-;-1:-1:-1;;;;;9519:16:8;;9498:137;;;;-1:-1:-1;;;9498:137:8;;17211:2:20;9498:137:8;;;17193:21:20;17250:2;17230:18;;;17223:30;17289:34;17269:18;;;17262:62;17360:34;17340:18;;;17333:62;17432:12;17411:19;;;17404:41;17462:19;;9498:137:8;17009:478:20;9498:137:8;9646:21;9670:30;9692:7;9670:21;:30::i;:::-;9646:54;-1:-1:-1;719:10:2;-1:-1:-1;;;;;9732:35:8;;;9711:144;;;;-1:-1:-1;;;9711:144:8;;17694:2:20;9711:144:8;;;17676:21:20;17733:2;17713:18;;;17706:30;17772:34;17752:18;;;17745:62;17843:32;17823:18;;;17816:60;17893:19;;9711:144:8;17492:426:20;9711:144:8;9866:57;9896:13;9911:2;9915:7;9866:29;:57::i;1514:220::-;1588:7;1615:16;1623:7;1615;:16::i;:::-;1607:71;;;;-1:-1:-1;;;1607:71:8;;11234:2:20;1607:71:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;1607:71:8;11032:406:20;1607:71:8;-1:-1:-1;1704:23:8;;;;:14;:23;;;;;;;1514:220::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;18125:2:20;1240:68:0;;;18107:21:20;;;18144:18;;;18137:30;18203:34;18183:18;;;18176:62;18255:18;;1240:68:0;17923:356:20;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3144:407:8:-;3267:22;3281:7;3267:13;:22::i;:::-;3246:111;;;;-1:-1:-1;;;3246:111:8;;11234:2:20;3246:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;3246:111:8;11032:406:20;3246:111:8;3402:1;3389:10;:14;3368:128;;;;-1:-1:-1;;;3368:128:8;;18486:2:20;3368:128:8;;;18468:21:20;18525:2;18505:18;;;18498:30;18564:34;18544:18;;;18537:62;18635:34;18615:18;;;18608:62;18707:5;18686:19;;;18679:34;18730:19;;3368:128:8;18284:471:20;3368:128:8;3507:24;;;;:15;:24;;;;;;:37;3144:407::o;22705:406:7:-;22844:7;22877:16;22885:7;22877;:16::i;:::-;22869:63;;;;-1:-1:-1;;;22869:63:7;;9017:2:20;22869:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;22869:63:7;8815:398:20;22869:63:7;-1:-1:-1;;;;;22967:20:7;;22945:113;;;;-1:-1:-1;;;22945:113:7;;14976:2:20;22945:113:7;;;14958:21:20;15015:2;14995:18;;;14988:30;15054:34;15034:18;;;15027:62;-1:-1:-1;;;15105:18:20;;;15098:41;15156:19;;22945:113:7;14774:407:20;22945:113:7;-1:-1:-1;23078:17:7;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;23078:25:7;;;;;;;;;;;;;22705:406::o;11940:209::-;12090:51;12119:4;12125:2;12129:7;12090:51;;;;;;;;;;;;:28;:51::i;7023:485:8:-;-1:-1:-1;;;;;7126:16:8;;7105:138;;;;-1:-1:-1;;;7105:138:8;;18962:2:20;7105:138:8;;;18944:21:20;19001:2;18981:18;;;18974:30;19040:34;19020:18;;;19013:62;19111:34;19091:18;;;19084:62;-1:-1:-1;;;19162:19:20;;;19155:42;19214:19;;7105:138:8;18760:479:20;7105:138:8;7254:13;7270:22;7284:7;7270:13;:22::i;:::-;7254:38;-1:-1:-1;719:10:2;-1:-1:-1;;;;;7324:27:8;;;7303:137;;;;-1:-1:-1;;;7303:137:8;;19446:2:20;7303:137:8;;;19428:21:20;19485:2;19465:18;;;19458:30;19524:34;19504:18;;;19497:62;19595:33;19575:18;;;19568:61;19646:19;;7303:137:8;19244:427:20;7303:137:8;7451:50;7482:5;7489:2;7493:7;7451:30;:50::i;5337:106:7:-;5395:13;5428:7;5421:14;;;;;:::i;2309:599:8:-;1108:6:0;;2481:7:8;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;18125:2:20;1240:68:0;;;18107:21:20;;;18144:18;;;18137:30;18203:34;18183:18;;;18176:62;18255:18;;1240:68:0;17923:356:20;1240:68:0;2500:21:8::1;:9;1032:19:3::0;;1050:1;1032:19;;;945:123;2500:21:8::1;2532:17;2552:19;:9;918:14:3::0;;827:112;2552:19:8::1;2532:39;;2581:31;2593:7;2602:9;2581:11;:31::i;:::-;2622:37;2643:9;2654:4;;2622:20;:37::i;:::-;2669:117;2702:9;2725:13;2752:24;2669:19;:117::i;:::-;2802:72;::::0;;-1:-1:-1;;;;;19917:55:20;;19899:74;;20021:4;20009:17;;;20004:2;19989:18;;19982:45;20063:17;;20043:18;;;20036:45;20112:2;20097:18;;20090:34;;;2802:72:8;;::::1;::::0;;;;19886:3:20;2802:72:8;;::::1;2892:9:::0;2309:599;-1:-1:-1;;;;;;2309:599:8:o;13220:391:7:-;13387:49;719:10:2;13428:7:7;13387:26;:49::i;:::-;13365:182;;;;-1:-1:-1;;;13365:182:7;;14484:2:20;13365:182:7;;;14466:21:20;14523:2;14503:18;;;14496:30;14562:34;14542:18;;;14535:62;14633:34;14613:18;;;14606:62;14705:21;14684:19;;;14677:50;14744:19;;13365:182:7;14282:487:20;13365:182:7;13560:43;13585:4;13591:2;13595:7;13560:24;:43::i;8432:187::-;8559:52;719:10:2;8592:8:7;8602;8559:18;:52::i;:::-;8432:187;;:::o;4908:189::-;5068:21;;;;:12;:21;;;;;;;;;5061:28;;;;;;;;;;;;;;;;;5027:16;;5061:28;;;5068:21;5061:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5061:28:7;;;;;;;;;;;;;;;;;;;;;;;4908:189;;;:::o;3687:313::-;3811:7;-1:-1:-1;;;;;3858:20:7;;3836:113;;;;-1:-1:-1;;;3836:113:7;;14976:2:20;3836:113:7;;;14958:21:20;15015:2;14995:18;;;14988:30;15054:34;15034:18;;;15027:62;-1:-1:-1;;;15105:18:20;;;15098:41;15156:19;;3836:113:7;14774:407:20;3836:113:7;-1:-1:-1;;;;;;3969:23:7;;;;;:15;:23;;;;;;;3687:313::o;10269:973:8:-;10365:22;10379:7;10365:13;:22::i;:::-;10344:111;;;;-1:-1:-1;;;10344:111:8;;11234:2:20;10344:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;10344:111:8;11032:406:20;10344:111:8;10513:1;10487:23;;;:14;:23;;;;;;10466:148;;;;-1:-1:-1;;;10466:148:8;;20337:2:20;10466:148:8;;;20319:21:20;20376:2;20356:18;;;20349:30;20415:34;20395:18;;;20388:62;20486:34;20466:18;;;20459:62;20558:12;20537:19;;;20530:41;20588:19;;10466:148:8;20135:478:20;10466:148:8;10659:23;;;;:14;:23;;;;;;10646:9;:36;;10625:190;;;;-1:-1:-1;;;10625:190:8;;20820:2:20;10625:190:8;;;20802:21:20;20859:3;20839:18;;;20832:31;20899:34;20879:18;;;20872:62;20970:34;20950:18;;;20943:62;21042:34;21021:19;;;21014:63;21114:13;21093:19;;;21086:42;21145:19;;10625:190:8;20618:552:20;10625:190:8;719:10:2;10826:153:8;;;;-1:-1:-1;;;10826:153:8;;17211:2:20;10826:153:8;;;17193:21:20;17250:2;17230:18;;;17223:30;17289:34;17269:18;;;17262:62;17360:34;17340:18;;;17333:62;17432:12;17411:19;;;17404:41;17462:19;;10826:153:8;17009:478:20;10826:153:8;10990:29;11030:30;11052:7;11030:21;:30::i;:::-;10990:71;-1:-1:-1;11072:119:8;10990:71;719:10:2;11174:7:8;11072:29;:119::i;:::-;11202:33;;-1:-1:-1;;;;;11202:22:8;;;11225:9;11202:33;;;;;;;;;11225:9;11202:22;:33;;;;;;;;;;;;;;;;;;;1740:207;1803:7;1830:16;1838:7;1830;:16::i;:::-;1822:71;;;;-1:-1:-1;;;1822:71:8;;11234:2:20;1822:71:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;1822:71:8;11032:406:20;1822:71:8;-1:-1:-1;1919:21:8;;;;:12;:21;;;;;;;1740:207::o;19272:176:7:-;19383:5;19413:27;19431:8;19413:17;:27::i;2876:307::-;2998:7;-1:-1:-1;;;;;3045:19:7;;3023:111;;;;-1:-1:-1;;;3023:111:7;;21377:2:20;3023:111:7;;;21359:21:20;21416:2;21396:18;;;21389:30;21455:34;21435:18;;;21428:62;21526:12;21506:18;;;21499:40;21556:19;;3023:111:7;21175:406:20;3023:111:7;-1:-1:-1;;;;;;3154:21:7;;;;;:14;:21;;;;;;;2876:307::o;5954:552::-;6074:13;6113:16;6121:7;6113;:16::i;:::-;6105:63;;;;-1:-1:-1;;;6105:63:7;;9017:2:20;6105:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;6105:63:7;8815:398:20;6105:63:7;6233:1;6207:15;;;:6;:15;;;;;6201:29;;;;;:::i;:::-;;;:33;6179:124;;;;-1:-1:-1;;;6179:124:7;;21788:2:20;6179:124:7;;;21770:21:20;21827:2;21807:18;;;21800:30;21866:34;21846:18;;;21839:62;21937:11;21917:18;;;21910:39;21966:19;;6179:124:7;21586:405:20;6179:124:7;6316:21;6340:10;:8;:10::i;:::-;6316:34;;6405:1;6387:7;6381:21;:25;:117;;;;;;;;;;;;;;;;;6450:7;6459:6;:15;6466:7;6459:15;;;;;;;;;;;6433:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6381:117;6361:137;5954:552;-1:-1:-1;;;5954:552:7:o;3786:404:8:-;3908:22;3922:7;3908:13;:22::i;:::-;3887:111;;;;-1:-1:-1;;;3887:111:8;;11234:2:20;3887:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;3887:111:8;11032:406:20;3887:111:8;4043:1;4030:10;:14;4009:127;;;;-1:-1:-1;;;4009:127:8;;23779:2:20;4009:127:8;;;23761:21:20;23818:2;23798:18;;;23791:30;23857:34;23837:18;;;23830:62;23928:34;23908:18;;;23901:62;24000:4;23979:19;;;23972:33;24022:19;;4009:127:8;23577:470:20;4009:127:8;4147:23;;;;:14;:23;;;;;;:36;3786:404::o;4387:382::-;4488:22;4502:7;4488:13;:22::i;:::-;4467:111;;;;-1:-1:-1;;;4467:111:8;;11234:2:20;4467:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;4467:111:8;11032:406:20;4467:111:8;4623:1;4610:10;:14;4589:128;;;;-1:-1:-1;;;4589:128:8;;24254:2:20;4589:128:8;;;24236:21:20;24293:2;24273:18;;;24266:30;24332:34;24312:18;;;24305:62;24403:34;24383:18;;;24376:62;24475:5;24454:19;;;24447:34;24498:19;;4589:128:8;24052:471:20;4589:128:8;4728:21;;;;:12;:21;;;;;;:34;4387:382::o;1303:205::-;1369:7;1396:16;1404:7;1396;:16::i;:::-;1388:71;;;;-1:-1:-1;;;1388:71:8;;11234:2:20;1388:71:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;1388:71:8;11032:406:20;1388:71:8;-1:-1:-1;1477:24:8;;;;:15;:24;;;;;;;1303:205::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;18125:2:20;1240:68:0;;;18107:21:20;;;18144:18;;;18137:30;18203:34;18183:18;;;18176:62;18255:18;;1240:68:0;17923:356:20;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;24730:2:20;1998:73:0::1;::::0;::::1;24712:21:20::0;24769:2;24749:18;;;24742:30;24808:34;24788:18;;;24781:62;24879:8;24859:18;;;24852:36;24905:19;;1998:73:0::1;24528:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;20269:220:7:-;20426:55;20437:6;20445:7;20454:26;20426:10;:55::i;7850:1255:8:-;7947:22;7961:7;7947:13;:22::i;:::-;7926:111;;;;-1:-1:-1;;;7926:111:8;;11234:2:20;7926:111:8;;;11216:21:20;11273:2;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;-1:-1:-1;;;11363:18:20;;;11356:40;11413:19;;7926:111:8;11032:406:20;7926:111:8;8096:1;8069:24;;;:15;:24;;;;;;8048:150;;;;-1:-1:-1;;;8048:150:8;;25137:2:20;8048:150:8;;;25119:21:20;25176:2;25156:18;;;25149:30;25215:34;25195:18;;;25188:62;25286:34;25266:18;;;25259:62;25358:13;25337:19;;;25330:42;25389:19;;8048:150:8;24935:479:20;8048:150:8;8243:24;;;;:15;:24;;;;;;8230:9;:37;;8209:192;;;;-1:-1:-1;;;8209:192:8;;25621:2:20;8209:192:8;;;25603:21:20;25660:3;25640:18;;;25633:31;25700:34;25680:18;;;25673:62;25771:34;25751:18;;;25744:62;25843:34;25822:19;;;25815:63;25915:14;25894:19;;;25887:43;25947:19;;8209:192:8;25419:553:20;8209:192:8;719:10:2;8412:154:8;;;;-1:-1:-1;;;8412:154:8;;18962:2:20;8412:154:8;;;18944:21:20;19001:2;18981:18;;;18974:30;19040:34;19020:18;;;19013:62;19111:34;19091:18;;;19084:62;-1:-1:-1;;;19162:19:20;;;19155:42;19214:19;;8412:154:8;18760:479:20;8412:154:8;8577:21;8609:22;8623:7;8609:13;:22::i;:::-;8577:55;;8642:29;8682:30;8704:7;8682:21;:30::i;:::-;8642:71;-1:-1:-1;8724:66:8;8755:5;719:10:2;8782:7:8;8724:30;:66::i;:::-;8814:13;-1:-1:-1;;;;;8805:22:8;:5;-1:-1:-1;;;;;8805:22:8;;8801:298;;;8843:25;;-1:-1:-1;;;;;8843:14:8;;;8858:9;8843:25;;;;;;;;;8858:9;8843:14;:25;;;;;;;;;;;;;;;;;;;8801:298;8899:13;8915:43;8950:7;8915:34;:43::i;:::-;8899:59;-1:-1:-1;;;;;;8972:14:8;;:51;9019:3;9001:13;8899:59;9019:3;9001:13;:::i;:::-;8988:27;;;;:9;:27;:::i;:::-;8987:35;;;;:::i;:::-;8972:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9037:22:8;;:51;9084:3;9061:19;;;;:9;:19;:::i;:::-;9060:27;;;;:::i;:::-;9037:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8885:214;7916:1189;;7850:1255;:::o;5698:184:7:-;5763:4;5788:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5788:16:7;:30;;;;:85;;-1:-1:-1;;5871:1:7;5835:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5835:24:7;:38;;;5698:184::o;7824:207::-;7948:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;7948:29:7;-1:-1:-1;;;;;7948:29:7;;;;;;;;;7995:28;;7948:24;;7995:28;;;;;;;7824:207;;;:::o;9590:408::-;9719:4;9749:16;9757:7;9749;:16::i;:::-;9741:63;;;;-1:-1:-1;;;9741:63:7;;9017:2:20;9741:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;9741:63:7;8815:398:20;9741:63:7;9815:13;9831:24;9847:7;9831:15;:24::i;:::-;9815:40;;9887:5;-1:-1:-1;;;;;9876:16:7;:7;-1:-1:-1;;;;;9876:16:7;;:64;;;;9933:7;-1:-1:-1;;;;;9909:31:7;:20;9921:7;9909:11;:20::i;:::-;-1:-1:-1;;;;;9909:31:7;;9876:64;:113;;;-1:-1:-1;;;;;;9380:25:7;;;9351:4;9380:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9957:32;9868:122;9590:408;-1:-1:-1;;;;9590:408:7:o;12726:415::-;12898:44;12924:4;12930:2;12934:7;12898:25;:44::i;:::-;12977:64;13017:4;13023:2;13027:7;13036:4;12977:39;:64::i;:::-;12955:178;;;;;-1:-1:-1;;;12955:178:7;;26179:2:20;12955:178:7;;;26161:21:20;26198:18;;;26191:30;;;;26257:34;26237:18;;;26230:62;26328:34;26308:18;;;26301:62;26380:19;;12955:178:7;25977:428:20;19456:256:7;19568:5;19599:17;19607:8;19599:7;:17::i;:::-;19591:64;;;;-1:-1:-1;;;19591:64:7;;9017:2:20;19591:64:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;19591:64:7;8815:398:20;19591:64:7;-1:-1:-1;19675:29:7;;;;:19;:29;;;;;;;;;19456:256::o;19926:278::-;20049:5;20080:17;20088:8;20080:7;:17::i;:::-;20072:64;;;;-1:-1:-1;;;20072:64:7;;9017:2:20;20072:64:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;20072:64:7;8815:398:20;20072:64:7;-1:-1:-1;20156:40:7;;;;:30;:40;;;;;;;;;19926:278::o;10165:448::-;10302:4;10332:16;10340:7;10332;:16::i;:::-;10324:63;;;;-1:-1:-1;;;10324:63:7;;9017:2:20;10324:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;10324:63:7;8815:398:20;10324:63:7;10398:21;10422:32;10446:7;10422:23;:32::i;15331:412::-;15502:43;15527:4;15533:2;15537:7;15502:24;:43::i;:::-;15580:63;15619:4;15625:2;15629:7;15638:4;15580:38;:63::i;11140:716::-;11280:13;11296:24;11312:7;11296:15;:24::i;:::-;11280:40;;11362:4;-1:-1:-1;;;;;11353:13:7;:5;-1:-1:-1;;;;;11353:13:7;;11331:129;;;;-1:-1:-1;;;11331:129:7;;26612:2:20;11331:129:7;;;26594:21:20;26651:2;26631:18;;;26624:30;26690:34;26670:18;;;26663:62;26761:34;26741:18;;;26734:62;26833:4;26812:19;;;26805:33;26855:19;;11331:129:7;26410:470:20;11331:129:7;-1:-1:-1;;;;;11493:16:7;;11471:111;;;;-1:-1:-1;;;11471:111:7;;27087:2:20;11471:111:7;;;27069:21:20;27126:2;27106:18;;;27099:30;27165:34;27145:18;;;27138:62;27236:15;27216:18;;;27209:43;27269:19;;11471:111:7;26885:409:20;11471:111:7;11647:36;11656:5;11671:1;11675:7;11647:8;:36::i;:::-;-1:-1:-1;;;;;11696:20:7;;;;;;:14;:20;;;;;:25;;11720:1;;11696:20;:25;;11720:1;;11696:25;:::i;:::-;;;;-1:-1:-1;;;;;;;11732:18:7;;;;;;:14;:18;;;;;:23;;11754:1;;11732:18;:23;;11754:1;;11732:23;:::i;:::-;;;;-1:-1:-1;;11766:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;11766:21:7;-1:-1:-1;;;;;11766:21:7;;;;;;;;;11805:43;;11766:16;;11805:43;;;;;;;11269:587;11140:716;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;17555:504:7:-;-1:-1:-1;;;;;17635:16:7;;17627:68;;;;-1:-1:-1;;;17627:68:7;;27634:2:20;17627:68:7;;;27616:21:20;27673:2;27653:18;;;27646:30;27712:34;27692:18;;;27685:62;27783:9;27763:18;;;27756:37;27810:19;;17627:68:7;27432:403:20;17627:68:7;17715:16;17723:7;17715;:16::i;:::-;17714:17;17706:64;;;;-1:-1:-1;;;17706:64:7;;28042:2:20;17706:64:7;;;28024:21:20;28081:2;28061:18;;;28054:30;28120:34;28100:18;;;28093:62;28191:4;28171:18;;;28164:32;28213:19;;17706:64:7;27840:398:20;17706:64:7;-1:-1:-1;;;;;17783:18:7;;;;;;:14;:18;;;;;:23;;17805:1;;17783:18;:23;;17805:1;;17783:23;:::i;:::-;;;;-1:-1:-1;;;;;;;17817:26:7;;;;;;:22;:26;;;;;:31;;17847:1;;17817:26;:31;;17847:1;;17817:31;:::i;:::-;;;;-1:-1:-1;;17859:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;17859:21:7;;-1:-1:-1;;17859:21:7;;;;;;;;17891:15;:24;;;;;;:29;;;;;;;;;;17938:49;17867:7;;17859:16;17938:49;;17859:16;;17938:49;18003:48;;18043:7;;-1:-1:-1;;;;;18003:48:7;;;18035:1;;18003:48;;18035:1;;18003:48;17555:504;;:::o;18067:220::-;18189:16;18197:7;18189;:16::i;:::-;18181:63;;;;-1:-1:-1;;;18181:63:7;;9017:2:20;18181:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;18181:63:7;8815:398:20;18181:63:7;18257:15;;;;:6;:15;;;;;:22;;18275:4;;18257:22;:::i;18562:702::-;18725:16;18733:7;18725;:16::i;:::-;18717:63;;;;-1:-1:-1;;;18717:63:7;;9017:2:20;18717:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;18717:63:7;8815:398:20;18717:63:7;18854:3;18837:13;:20;;;;18793:141;;;;-1:-1:-1;;;18793:141:7;;28445:2:20;18793:141:7;;;28427:21:20;28484:2;28464:18;;;28457:30;28523:34;28503:18;;;28496:62;28594:19;28574:18;;;28567:47;28631:19;;18793:141:7;28243:413:20;18793:141:7;19030:3;19002:24;:31;;;;18947:175;;;;-1:-1:-1;;;18947:175:7;;28863:2:20;18947:175:7;;;28845:21:20;28902:2;28882:18;;;28875:30;28941:34;28921:18;;;28914:62;29012:31;28992:18;;;28985:59;29061:19;;18947:175:7;28661:425:20;18947:175:7;19135:28;;;;:19;:28;;;;;;;;:44;;-1:-1:-1;;19135:44:7;;;;;;;;;;;19190:30;:39;;;;;;:66;;;;;;;;;;18562:702::o;13681:770::-;13820:21;13844:32;13868:7;13844:23;:32::i;:::-;13820:56;;13926:4;-1:-1:-1;;;;;13909:21:7;:13;-1:-1:-1;;;;;13909:21:7;;13887:137;;;;-1:-1:-1;;;13887:137:7;;26612:2:20;13887:137:7;;;26594:21:20;26651:2;26631:18;;;26624:30;26690:34;26670:18;;;26663:62;26761:34;26741:18;;;26734:62;26833:4;26812:19;;;26805:33;26855:19;;13887:137:7;26410:470:20;13887:137:7;-1:-1:-1;;;;;14057:16:7;;14035:111;;;;-1:-1:-1;;;14035:111:7;;27087:2:20;14035:111:7;;;27069:21:20;27126:2;27106:18;;;27099:30;27165:34;27145:18;;;27138:62;27236:15;27216:18;;;27209:43;27269:19;;14035:111:7;26885:409:20;14035:111:7;14211:44;14220:13;14243:1;14247:7;14211:8;:44::i;:::-;-1:-1:-1;;;;;14268:28:7;;;;;;:22;:28;;;;;:33;;14300:1;;14268:28;:33;;14300:1;;14268:33;:::i;:::-;;;;-1:-1:-1;;;;;;;14312:26:7;;;;;;:22;:26;;;;;:31;;14342:1;;14312:26;:31;;14342:1;;14312:31;:::i;:::-;;;;-1:-1:-1;;14354:24:7;;;;:15;:24;;;;;;:29;;-1:-1:-1;;14354:29:7;-1:-1:-1;;;;;14354:29:7;;;;;;;;;14401:42;;14354:24;;14401:42;;;;;;;13809:642;13681:770;;;:::o;8762:375::-;8931:8;-1:-1:-1;;;;;8922:17:7;:5;-1:-1:-1;;;;;8922:17:7;;;8900:111;;;;-1:-1:-1;;;8900:111:7;;29293:2:20;8900:111:7;;;29275:21:20;29332:2;29312:18;;;29305:30;29371:34;29351:18;;;29344:62;29442:14;29422:18;;;29415:42;29474:19;;8900:111:7;29091:408:20;8900:111:7;-1:-1:-1;;;;;9024:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;9024:46:7;;;;;;;;;;9088:41;;9024:46;;:35;:25;9088:41;;;8762:375;;;:::o;2000:104:8:-;2060:13;2092:5;2085:12;;;;;:::i;20545:573:7:-;-1:-1:-1;;;;;20718:20:7;;20696:113;;;;-1:-1:-1;;;20696:113:7;;14976:2:20;20696:113:7;;;14958:21:20;15015:2;14995:18;;;14988:30;15054:34;15034:18;;;15027:62;-1:-1:-1;;;15105:18:20;;;15098:41;15156:19;;20696:113:7;14774:407:20;20696:113:7;20830:16;20838:7;20830;:16::i;:::-;20822:63;;;;-1:-1:-1;;;20822:63:7;;9017:2:20;20822:63:7;;;8999:21:20;9056:2;9036:18;;;9029:30;9095:34;9075:18;;;9068:62;-1:-1:-1;;;9146:18:20;;;9139:32;9188:19;;20822:63:7;8815:398:20;20822:63:7;20898:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;20898:25:7;;;;;;;;;;;:54;;;20963:21;;;:12;:21;;;;;:34;;;;;;;;;;;;;;;;;-1:-1:-1;;20963:34:7;;;;;21008:23;;;:15;:23;;;;;:28;;20963:34;;21008:23;;:28;;20963:34;;21008:28;:::i;:::-;;;;-1:-1:-1;;21054:56:7;;5031:25:20;;;21074:7:7;;-1:-1:-1;;;;;21054:56:7;;;;;5019:2:20;5004:18;21054:56:7;;;;;;;20545:573;;;:::o;25503:1213::-;25674:4;-1:-1:-1;;;;;25695:13:7;;1087:20:1;1133:8;25691:1018:7;;25748:250;;;;;-1:-1:-1;;;;;25748:92:7;;;;;:250;;719:10:2;;25906:4:7;;25937:7;;25971:4;;25748:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25748:250:7;;;;;;;;-1:-1:-1;;25748:250:7;;;;;;;;;;;;:::i;:::-;;;25727:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26309:13:7;;26305:334;;26352:122;;;-1:-1:-1;;;26352:122:7;;26179:2:20;26352:122:7;;;26161:21:20;26198:18;;;26191:30;;;;26257:34;26237:18;;;26230:62;26328:34;26308:18;;;26301:62;26380:19;;26352:122:7;25977:428:20;26305:334:7;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;25727:927;26083:158;;26114:127;26083:158;;-1:-1:-1;26055:186:7;;25691:1018;-1:-1:-1;26693:4:7;25503:1213;;;;;;:::o;23692:1229::-;23862:4;-1:-1:-1;;;;;23883:13:7;;1087:20:1;1133:8;23879:1035:7;;23936:248;;;;;-1:-1:-1;;;;;23936:90:7;;;;;:248;;719:10:2;;24092:4:7;;24123:7;;24157:4;;23936:248;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23936:248:7;;;;;;;;-1:-1:-1;;23936:248:7;;;;;;;;;;;;:::i;:::-;;;23915:944;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24493:13:7;;24489:355;;24536:143;;-1:-1:-1;;;24536:143:7;;30477:2:20;24536:143:7;;;30459:21:20;30516:2;30496:18;;;30489:30;30555:34;30535:18;;;30528:62;30626:34;30606:18;;;30599:62;30698:23;30677:19;;;30670:52;30739:19;;24536:143:7;30275:489:20;23915:944:7;24269:156;;24300:125;24269:156;;-1:-1:-1;24241:184:7;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:20;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:258::-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:20;868:16;;861:27;638:258::o;901:317::-;943:3;981:5;975:12;1008:6;1003:3;996:19;1024:63;1080:6;1073:4;1068:3;1064:14;1057:4;1050:5;1046:16;1024:63;:::i;:::-;1132:2;1120:15;-1:-1:-1;;1116:88:20;1107:98;;;;1207:4;1103:109;;901:317;-1:-1:-1;;901:317:20:o;1223:220::-;1372:2;1361:9;1354:21;1335:4;1392:45;1433:2;1422:9;1418:18;1410:6;1392:45;:::i;1448:180::-;1507:6;1560:2;1548:9;1539:7;1535:23;1531:32;1528:52;;;1576:1;1573;1566:12;1528:52;-1:-1:-1;1599:23:20;;1448:180;-1:-1:-1;1448:180:20:o;1864:196::-;1932:20;;-1:-1:-1;;;;;1981:54:20;;1971:65;;1961:93;;2050:1;2047;2040:12;1961:93;1864:196;;;:::o;2065:254::-;2133:6;2141;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2309:2;2294:18;;;;2281:32;;-1:-1:-1;;;2065:254:20:o;2324:184::-;-1:-1:-1;;;2373:1:20;2366:88;2473:4;2470:1;2463:15;2497:4;2494:1;2487:15;2513:1197;2608:6;2616;2624;2632;2685:3;2673:9;2664:7;2660:23;2656:33;2653:53;;;2702:1;2699;2692:12;2653:53;2725:29;2744:9;2725:29;:::i;:::-;2715:39;;2773:38;2807:2;2796:9;2792:18;2773:38;:::i;:::-;2763:48;;2858:2;2847:9;2843:18;2830:32;2820:42;;2913:2;2902:9;2898:18;2885:32;2936:18;2977:2;2969:6;2966:14;2963:34;;;2993:1;2990;2983:12;2963:34;3031:6;3020:9;3016:22;3006:32;;3076:7;3069:4;3065:2;3061:13;3057:27;3047:55;;3098:1;3095;3088:12;3047:55;3134:2;3121:16;3156:2;3152;3149:10;3146:36;;;3162:18;;:::i;:::-;3296:2;3290:9;3358:4;3350:13;;-1:-1:-1;;3346:22:20;;;3370:2;3342:31;3338:40;3326:53;;;3394:18;;;3414:22;;;3391:46;3388:72;;;3440:18;;:::i;:::-;3480:10;3476:2;3469:22;3515:2;3507:6;3500:18;3555:7;3550:2;3545;3541;3537:11;3533:20;3530:33;3527:53;;;3576:1;3573;3566:12;3527:53;3632:2;3627;3623;3619:11;3614:2;3606:6;3602:15;3589:46;3677:1;3672:2;3667;3659:6;3655:15;3651:24;3644:35;3698:6;3688:16;;;;;;;2513:1197;;;;;;;:::o;3715:316::-;3792:6;3800;3808;3861:2;3849:9;3840:7;3836:23;3832:32;3829:52;;;3877:1;3874;3867:12;3829:52;-1:-1:-1;;3900:23:20;;;3970:2;3955:18;;3942:32;;-1:-1:-1;4021:2:20;4006:18;;;3993:32;;3715:316;-1:-1:-1;3715:316:20:o;4225:328::-;4302:6;4310;4318;4371:2;4359:9;4350:7;4346:23;4342:32;4339:52;;;4387:1;4384;4377:12;4339:52;4410:29;4429:9;4410:29;:::i;:::-;4400:39;;4458:38;4492:2;4481:9;4477:18;4458:38;:::i;:::-;4448:48;;4543:2;4532:9;4528:18;4515:32;4505:42;;4225:328;;;;;:::o;4558:322::-;4635:6;4643;4651;4704:2;4692:9;4683:7;4679:23;4675:32;4672:52;;;4720:1;4717;4710:12;4672:52;4756:9;4743:23;4733:33;;4813:2;4802:9;4798:18;4785:32;4775:42;;4836:38;4870:2;4859:9;4855:18;4836:38;:::i;:::-;4826:48;;4558:322;;;;;:::o;5067:186::-;5126:6;5179:2;5167:9;5158:7;5154:23;5150:32;5147:52;;;5195:1;5192;5185:12;5147:52;5218:29;5237:9;5218:29;:::i;5258:254::-;5326:6;5334;5387:2;5375:9;5366:7;5362:23;5358:32;5355:52;;;5403:1;5400;5393:12;5355:52;5439:9;5426:23;5416:33;;5468:38;5502:2;5491:9;5487:18;5468:38;:::i;:::-;5458:48;;5258:254;;;;;:::o;5517:248::-;5585:6;5593;5646:2;5634:9;5625:7;5621:23;5617:32;5614:52;;;5662:1;5659;5652:12;5614:52;-1:-1:-1;;5685:23:20;;;5755:2;5740:18;;;5727:32;;-1:-1:-1;5517:248:20:o;5770:156::-;5836:20;;5896:4;5885:16;;5875:27;;5865:55;;5916:1;5913;5906:12;5931:807;6025:6;6033;6041;6049;6057;6110:3;6098:9;6089:7;6085:23;6081:33;6078:53;;;6127:1;6124;6117:12;6078:53;6150:29;6169:9;6150:29;:::i;:::-;6140:39;;6230:2;6219:9;6215:18;6202:32;6253:18;6294:2;6286:6;6283:14;6280:34;;;6310:1;6307;6300:12;6280:34;6348:6;6337:9;6333:22;6323:32;;6393:7;6386:4;6382:2;6378:13;6374:27;6364:55;;6415:1;6412;6405:12;6364:55;6455:2;6442:16;6481:2;6473:6;6470:14;6467:34;;;6497:1;6494;6487:12;6467:34;6542:7;6537:2;6528:6;6524:2;6520:15;6516:24;6513:37;6510:57;;;6563:1;6560;6553:12;6510:57;6594:2;6590;6586:11;6576:21;;6616:6;6606:16;;;;;6641:36;6673:2;6662:9;6658:18;6641:36;:::i;:::-;6631:46;;6696:36;6728:2;6717:9;6713:18;6696:36;:::i;:::-;6686:46;;5931:807;;;;;;;;:::o;6743:347::-;6808:6;6816;6869:2;6857:9;6848:7;6844:23;6840:32;6837:52;;;6885:1;6882;6875:12;6837:52;6908:29;6927:9;6908:29;:::i;:::-;6898:39;;6987:2;6976:9;6972:18;6959:32;7034:5;7027:13;7020:21;7013:5;7010:32;7000:60;;7056:1;7053;7046:12;7000:60;7079:5;7069:15;;;6743:347;;;;;:::o;7095:681::-;7266:2;7318:21;;;7388:13;;7291:18;;;7410:22;;;7237:4;;7266:2;7489:15;;;;7463:2;7448:18;;;7237:4;7532:218;7546:6;7543:1;7540:13;7532:218;;;7611:13;;-1:-1:-1;;;;;7607:62:20;7595:75;;7725:15;;;;7690:12;;;;7568:1;7561:9;7532:218;;;-1:-1:-1;7767:3:20;;7095:681;-1:-1:-1;;;;;;7095:681:20:o;7781:260::-;7849:6;7857;7910:2;7898:9;7889:7;7885:23;7881:32;7878:52;;;7926:1;7923;7916:12;7878:52;7949:29;7968:9;7949:29;:::i;:::-;7939:39;;7997:38;8031:2;8020:9;8016:18;7997:38;:::i;8046:322::-;8123:6;8131;8139;8192:2;8180:9;8171:7;8167:23;8163:32;8160:52;;;8208:1;8205;8198:12;8160:52;8231:29;8250:9;8231:29;:::i;:::-;8221:39;8307:2;8292:18;;8279:32;;-1:-1:-1;8358:2:20;8343:18;;;8330:32;;8046:322;-1:-1:-1;;;8046:322:20:o;8373:437::-;8452:1;8448:12;;;;8495;;;8516:61;;8570:4;8562:6;8558:17;8548:27;;8516:61;8623:2;8615:6;8612:14;8592:18;8589:38;8586:218;;;-1:-1:-1;;;8657:1:20;8650:88;8761:4;8758:1;8751:15;8789:4;8786:1;8779:15;8586:218;;8373:437;;;:::o;11917:184::-;-1:-1:-1;;;11966:1:20;11959:88;12066:4;12063:1;12056:15;12090:4;12087:1;12080:15;12106:125;12146:4;12174:1;12171;12168:8;12165:34;;;12179:18;;:::i;:::-;-1:-1:-1;12216:9:20;;12106:125::o;12236:274::-;12276:1;12302;12292:189;;-1:-1:-1;;;12334:1:20;12327:88;12438:4;12435:1;12428:15;12466:4;12463:1;12456:15;12292:189;-1:-1:-1;12495:9:20;;12236:274::o;12934:228::-;12974:7;13100:1;-1:-1:-1;;13028:74:20;13025:1;13022:81;13017:1;13010:9;13003:17;12999:105;12996:131;;;13107:18;;:::i;:::-;-1:-1:-1;13147:9:20;;12934:228::o;13661:195::-;13699:4;13736;13733:1;13729:12;13768:4;13765:1;13761:12;13793:3;13788;13785:12;13782:38;;;13800:18;;:::i;:::-;13837:13;;;13661:195;-1:-1:-1;;;13661:195:20:o;15600:184::-;-1:-1:-1;;;15649:1:20;15642:88;15749:4;15746:1;15739:15;15773:4;15770:1;15763:15;15789:184;-1:-1:-1;;;15838:1:20;15831:88;15938:4;15935:1;15928:15;15962:4;15959:1;15952:15;15978:195;16017:3;-1:-1:-1;;16041:5:20;16038:77;16035:103;;;16118:18;;:::i;:::-;-1:-1:-1;16165:1:20;16154:13;;15978:195::o;22122:1450::-;22298:3;22336:6;22330:13;22362:4;22375:51;22419:6;22414:3;22409:2;22401:6;22397:15;22375:51;:::i;:::-;22511:13;;22448:16;;;;22484:1;;22571;22593:18;;;;22646;;;;22673:93;;22751:4;22741:8;22737:19;22725:31;;22673:93;22814:2;22804:8;22801:16;22781:18;22778:40;22775:224;;;-1:-1:-1;;;22848:3:20;22841:90;22954:4;22951:1;22944:15;22984:4;22979:3;22972:17;22775:224;23015:18;23042:168;;;;23224:1;23219:328;;;;23008:539;;23042:168;-1:-1:-1;;23081:9:20;23077:82;23070:5;23063:97;23191:8;23184:5;23180:20;23173:27;;23042:168;;23219:328;22069:1;22062:14;;;22106:4;22093:18;;23314:1;23328:169;23342:8;23339:1;23336:15;23328:169;;;23424:14;;23409:13;;;23402:37;23467:16;;;;23359:10;;23328:169;;;23332:3;;23528:8;23521:5;23517:20;23510:27;;23008:539;-1:-1:-1;23563:3:20;;22122:1450;-1:-1:-1;;;;;;;;;;22122:1450:20:o;27299:128::-;27339:3;27370:1;27366:6;27363:1;27360:13;27357:39;;;27376:18;;:::i;:::-;-1:-1:-1;27412:9:20;;27299:128::o;29504:512::-;29698:4;-1:-1:-1;;;;;29808:2:20;29800:6;29796:15;29785:9;29778:34;29860:2;29852:6;29848:15;29843:2;29832:9;29828:18;29821:43;;29900:6;29895:2;29884:9;29880:18;29873:34;29943:3;29938:2;29927:9;29923:18;29916:31;29964:46;30005:3;29994:9;29990:19;29982:6;29964:46;:::i;:::-;29956:54;29504:512;-1:-1:-1;;;;;;29504:512:20:o;30021:249::-;30090:6;30143:2;30131:9;30122:7;30118:23;30114:32;30111:52;;;30159:1;30156;30149:12;30111:52;30191:9;30185:16;30210:30;30234:5;30210:30;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./ERC1190.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev Implementation of ERC1190 with payable methods.\n */\ncontract ERC1190Tradable is ERC1190, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    event TokenMinted(\n        address creator,\n        uint8 royaltyForRental,\n        uint8 royaltyForOwnershipTransfer,\n        uint256 tokenId\n    );\n\n    // Base URI\n    string private _base;\n\n    // The price in wei of each token that can be owned.\n    mapping(uint256 => uint256) private _ownershipPrice;\n\n    // The price in wei of each token that can be creative owned.\n    mapping(uint256 => uint256) private _creativePrice;\n\n    // The price in wei of each token that can be rented.\n    mapping(uint256 => uint256) private _rentalPrice;\n\n    /**\n     * @dev See {ERC1190-constructor}.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        string memory tokenBaseUri\n    ) ERC1190(tokenName, tokenSymbol) {\n        _base = tokenBaseUri;\n    }\n\n    function availableTokens() external view returns (uint256) {\n        return _tokenIds.current();\n    }\n\n    function ownershipPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n\n        return _ownershipPrice[tokenId];\n    }\n\n    function creativeOwnershipPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n        \n        return _creativePrice[tokenId];\n    }\n\n    function rentalPriceOf(uint256 tokenId) external view returns (uint256) {\n        require(_exists(tokenId), \"ERC1190Tradable: The token does not exist.\");\n        \n        return _rentalPrice[tokenId];\n    }\n\n    /**\n     * See {ERC1190-_baseURI}.\n     */\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _base;\n    }\n\n    /**\n     * @dev Generates a new token and assigns its ownership and creative\n     * license to `creator`.\n     * The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`.\n     */\n    function mint(\n        address creator,\n        string calldata file,\n        uint8 rentalRoyalty,\n        uint8 ownershipTransferRoyalty\n    ) external onlyOwner returns (uint256) {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        super._mint(creator, newItemId);\n        super._associateFile(newItemId, file);\n        super._setRoyalties(\n            newItemId,\n            rentalRoyalty,\n            ownershipTransferRoyalty\n        );\n\n        emit TokenMinted(creator, rentalRoyalty, ownershipTransferRoyalty, newItemId);\n\n        return newItemId;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the ownership license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setOwnershipLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The ownership license cost must be greater than 0.\"\n        );\n\n        _ownershipPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for acquiring property of the creative license of token\n     * `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setCreativeLicensePrice(uint256 tokenId, uint256 priceInWei)\n        external\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The creative license cost must be greater than 0.\"\n        );\n\n        _creativePrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Sets the price for renting `tokenId` for 1 second.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - `priceInWei` must be greater than 0.\n     */\n    function setRentalPrice(uint256 tokenId, uint256 priceInWei) external {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            priceInWei > 0,\n            \"ERC1190Tradable: The rental cost per second must be greater than 0.\"\n        );\n\n        _rentalPrice[tokenId] = priceInWei;\n    }\n\n    /**\n     * @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A rental price must have been set via {setRentalPrice}.\n     * - `rentExpirationDateInMillis` should correspond to a future date.\n     * - `rentExpirationDateInMillis` - `rentStartingDateInMillis` should be greater than 0.\n     * - the sent money should be enough to cover the renting expenses.\n     */\n    function rentAsset(uint256 tokenId, uint256 rentStartingDateInMillis, uint256 rentExpirationDateInMillis)\n        external\n        payable\n    {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _rentalPrice[tokenId] > 0,\n            \"ERC1190Tradable: The asset related to this token is not rentable.\"\n        );\n\n        uint256 rentTimeInSeconds = (rentExpirationDateInMillis - rentStartingDateInMillis) / 1000;\n\n        require(\n            rentTimeInSeconds > 0,\n            \"ERC1190Tradable: The rental time must be positive.\"\n        );\n\n        uint256 rentalTotalPrice = rentTimeInSeconds * _rentalPrice[tokenId];\n\n        require(\n            msg.value >= rentalTotalPrice,\n            \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.rentAsset(\n            super._msgSender(),\n            tokenId,\n            rentExpirationDateInMillis\n        );\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForRental(tokenId);\n\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferOwnershipLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\n        );\n\n        address owner = super.ownerOf(tokenId);\n\n        require(\n            super._msgSender() == owner,\n            \"ERC1190Tradable: The sender does not own the ownership license.\"\n        );\n\n        super.transferOwnershipLicense(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the ownership license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A ownership license price must have been set via {setOwnershipLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainOwnershipLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _ownershipPrice[tokenId] > 0,\n            \"ERC1190Tradable: The ownership license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _ownershipPrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\"\n        );\n\n        address payable owner = payable(super.ownerOf(tokenId));\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferOwnershipLicense(owner, super._msgSender(), tokenId);\n\n        if (owner == creativeOwner) {\n            owner.transfer(msg.value);\n        } else {\n            uint8 royalty = super._royaltyForOwnershipTransfer(tokenId);\n            owner.transfer((msg.value * (100 - royalty)) / 100);\n            creativeOwner.transfer((msg.value * royalty) / 100);\n        }\n    }\n\n    /**\n     * @dev Transfers the creative license from the current creative owner to the account `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - the sender of the request must be the creative owner.\n     * - the receiver account `to` must not be the zero address.\n     */\n    function transferCreativeLicense(uint256 tokenId, address to) external {\n        require(\n            to != address(0),\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\n        );\n\n        address creativeOwner = super.creativeOwnerOf(tokenId);\n\n        require(\n            super._msgSender() == creativeOwner,\n            \"ERC1190Tradable: The sender does not own the creative license.\"\n        );\n\n        super.transferCreativeLicense(creativeOwner, to, tokenId);\n    }\n\n    /**\n     * @dev Transfers the creative license from the current owner to the sender of the request.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     * - A creative license price must have been set via {setCreativeLicensePrice}.\n     * - the sent money should be enough to cover the license expense.\n     */\n    function obtainCreativeLicense(uint256 tokenId) external payable {\n        require(\n            super._exists(tokenId),\n            \"ERC1190Tradable: The token does not exist.\"\n        );\n\n        require(\n            _creativePrice[tokenId] > 0,\n            \"ERC1190Tradable: The creative license of this token cannot be transferred.\"\n        );\n\n        require(\n            msg.value >= _creativePrice[tokenId],\n            \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\"\n        );\n\n        require(\n            super._msgSender() != address(0),\n            \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\"\n        );\n\n        address payable creativeOwner = payable(super.creativeOwnerOf(tokenId));\n\n        super.transferCreativeLicense(\n            creativeOwner,\n            super._msgSender(),\n            tokenId\n        );\n\n        creativeOwner.transfer(msg.value);\n    }\n}\n",
  "sourcePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
  "ast": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2355
      ],
      "ERC1190Tradable": [
        3061
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        3077
      ],
      "IERC1190Approver": [
        3133
      ],
      "IERC1190CreativeLicenseReceiver": [
        3151
      ],
      "IERC1190CreativeOwner": [
        3213
      ],
      "IERC1190Metadata": [
        3240
      ],
      "IERC1190Owner": [
        3302
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3320
      ],
      "IERC1190Renter": [
        3383
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 3062,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2357,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 2356,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2359,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2360,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2362,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2355,
              "src": "289:7:8"
            },
            "id": 2363,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2364,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2365,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2361,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 3061,
        "linearizedBaseContracts": [
          3061,
          104,
          2355,
          3240,
          3077,
          3383,
          3213,
          3302,
          3133,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2369,
            "libraryName": {
              "id": 2366,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2367,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2372,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2370,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2382,
            "name": "TokenMinted",
            "nameLocation": "400:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "429:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "421:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "452:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "446:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2378,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "484:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "478:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "529:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "521:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:131:8"
            },
            "src": "394:149:8"
          },
          {
            "constant": false,
            "id": 2384,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "580:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "565:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2383,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "565:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2388,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "685:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "649:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2387,
              "keyType": {
                "id": 2385,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "649:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2386,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2392,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "809:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "773:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2391,
              "keyType": {
                "id": 2389,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "773:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2390,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2396,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "924:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "888:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2395,
              "keyType": {
                "id": 2393,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "888:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2394,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1152:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2410,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2384,
                      "src": "1162:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2411,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2403,
                      "src": "1170:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1162:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2397,
              "nodeType": "StructuredDocumentation",
              "src": "943:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2406,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2399,
                    "src": "1128:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2407,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2401,
                    "src": "1139:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2408,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2405,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2355,
                  "src": "1120:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1033:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1019:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1066:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1052:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1101:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1087:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:110:8"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:8"
            },
            "scope": 3061,
            "src": "998:191:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "1254:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2420,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "1271:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1271:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2419,
                  "id": 2423,
                  "nodeType": "Return",
                  "src": "1264:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1204:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:8"
            },
            "returnParameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "1245:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:8"
            },
            "scope": 3061,
            "src": "1195:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2443,
              "nodeType": "Block",
              "src": "1378:130:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2434,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "1404:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2433,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1396:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2439,
                      "name": "_ownershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "1477:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2441,
                    "indexExpression": {
                      "id": 2440,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
                      "src": "1493:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1477:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2431,
                  "id": 2442,
                  "nodeType": "Return",
                  "src": "1470:31:8"
                }
              ]
            },
            "functionSelector": "ef1e00e0",
            "id": 2444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipPriceOf",
            "nameLocation": "1312:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1337:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1329:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:17:8"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1369:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:8"
            },
            "scope": 3061,
            "src": "1303:205:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2462,
              "nodeType": "Block",
              "src": "1597:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2453,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2446,
                            "src": "1623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2452,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1615:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2458,
                      "name": "_creativePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2392,
                      "src": "1704:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2460,
                    "indexExpression": {
                      "id": 2459,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2446,
                      "src": "1719:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1704:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2450,
                  "id": 2461,
                  "nodeType": "Return",
                  "src": "1697:30:8"
                }
              ]
            },
            "functionSelector": "6f902516",
            "id": 2463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creativeOwnershipPriceOf",
            "nameLocation": "1523:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1556:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2463,
                  "src": "1548:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:17:8"
            },
            "returnParameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2463,
                  "src": "1588:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:9:8"
            },
            "scope": 3061,
            "src": "1514:220:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2481,
              "nodeType": "Block",
              "src": "1812:135:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2472,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2465,
                            "src": "1838:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2471,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1830:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2476,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2477,
                      "name": "_rentalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2396,
                      "src": "1919:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2479,
                    "indexExpression": {
                      "id": 2478,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2465,
                      "src": "1932:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2469,
                  "id": 2480,
                  "nodeType": "Return",
                  "src": "1912:28:8"
                }
              ]
            },
            "functionSelector": "bf0a660b",
            "id": 2482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentalPriceOf",
            "nameLocation": "1749:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1771:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "1763:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:17:8"
            },
            "returnParameters": {
              "id": 2469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "1803:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:9:8"
            },
            "scope": 3061,
            "src": "1740:207:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2491,
              "nodeType": "Block",
              "src": "2075:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2489,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2384,
                    "src": "2092:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2488,
                  "id": 2490,
                  "nodeType": "Return",
                  "src": "2085:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2483,
              "nodeType": "StructuredDocumentation",
              "src": "1953:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "2009:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:8"
            },
            "parameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:2:8"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "2060:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:15:8"
            },
            "scope": 3061,
            "src": "2000:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2550,
              "nodeType": "Block",
              "src": "2490:418:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2508,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "2500:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "2500:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2512,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:21:8"
                },
                {
                  "assignments": [
                    2514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2514,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "2540:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "2532:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2513,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2532:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2518,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2515,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "2552:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "2552:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2522,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "2593:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2523,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2602:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2519,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2581:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1855,
                      "src": "2581:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2529,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2643:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2530,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "2654:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2526,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "2622:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2536,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2702:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2537,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "2725:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2538,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "2752:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2533,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2669:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "2669:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:117:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:117:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2542,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "2814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2543,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "2823:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2544,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "2838:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2545,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2864:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2541,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2382,
                      "src": "2802:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2547,
                  "nodeType": "EmitStatement",
                  "src": "2797:77:8"
                },
                {
                  "expression": {
                    "id": 2548,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "2892:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2507,
                  "id": 2549,
                  "nodeType": "Return",
                  "src": "2885:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2493,
              "nodeType": "StructuredDocumentation",
              "src": "2110:194:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
            },
            "functionSelector": "9940a11a",
            "id": 2551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2503,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2462:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "2318:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "2340:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2332:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "2373:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2357:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "rentalRoyalty",
                  "nameLocation": "2393:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2387:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "ownershipTransferRoyalty",
                  "nameLocation": "2422:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2416:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:130:8"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 3061,
            "src": "2309:599:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2580,
              "nodeType": "Block",
              "src": "3236:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2562,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "3281:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2560,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3267:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3267:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3303:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2568,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "3389:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3402:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3389:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3368:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2573,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:128:8"
                },
                {
                  "expression": {
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2574,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "3507:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2576,
                      "indexExpression": {
                        "id": 2575,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "3523:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3507:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2577,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "3534:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3507:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2552,
              "nodeType": "StructuredDocumentation",
              "src": "2914:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "3153:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2554,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3186:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2581,
                  "src": "3178:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2556,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3203:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2581,
                  "src": "3195:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3177:37:8"
            },
            "returnParameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:8"
            },
            "scope": 3061,
            "src": "3144:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2610,
              "nodeType": "Block",
              "src": "3877:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2592,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "3922:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2590,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3908:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3908:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3908:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2598,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2586,
                          "src": "4030:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4043:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4030:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4009:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:127:8"
                },
                {
                  "expression": {
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2604,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2392,
                        "src": "4147:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2606,
                      "indexExpression": {
                        "id": 2605,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "4162:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2607,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2586,
                      "src": "4173:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4147:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2609,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2582,
              "nodeType": "StructuredDocumentation",
              "src": "3557:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3795:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2584,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3827:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2611,
                  "src": "3819:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3844:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2611,
                  "src": "3836:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3836:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:37:8"
            },
            "returnParameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:8"
            },
            "scope": 3061,
            "src": "3786:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "4457:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2622,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2614,
                            "src": "4502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2620,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4488:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4488:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4488:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4524:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4467:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2626,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2628,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2616,
                          "src": "4610:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4623:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4610:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4589:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2633,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:128:8"
                },
                {
                  "expression": {
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2634,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "4728:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2636,
                      "indexExpression": {
                        "id": 2635,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4741:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4728:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2637,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "4752:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4728:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2639,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2612,
              "nodeType": "StructuredDocumentation",
              "src": "4196:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "4396:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2614,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4419:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "4411:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "4436:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "4428:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4410:37:8"
            },
            "returnParameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4457:0:8"
            },
            "scope": 3061,
            "src": "4387:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2777,
              "nodeType": "Block",
              "src": "5397:1331:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2654,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "5442:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2652,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5428:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "5428:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5428:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5464:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5407:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5407:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "5407:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2660,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2396,
                            "src": "5550:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2662,
                          "indexExpression": {
                            "id": 2661,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "5563:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5550:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5574:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5550:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5589:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5529:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2667,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:137:8"
                },
                {
                  "assignments": [
                    2669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2669,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5685:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "5677:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2668,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5677:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2670,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2648,
                            "src": "5706:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2671,
                            "name": "rentStartingDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "5735:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5706:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2673,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5705:55:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 2674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5763:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "5705:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5677:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2678,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "5799:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5819:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5799:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5834:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5778:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5778:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2683,
                  "nodeType": "ExpressionStatement",
                  "src": "5778:118:8"
                },
                {
                  "assignments": [
                    2685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2685,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5915:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "5907:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2684,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5907:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2691,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2686,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "5934:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2687,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "5954:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2689,
                      "indexExpression": {
                        "id": 2688,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "5967:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5954:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5934:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5907:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6007:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6007:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2695,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2685,
                          "src": "6020:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6007:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6050:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5986:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2699,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:161:8"
                },
                {
                  "assignments": [
                    2701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2701,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6174:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "6158:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2700,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6158:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2706,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "6204:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2704,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6190:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "6190:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6190:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6182:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2702,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6182:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6158:55:8"
                },
                {
                  "assignments": [
                    2711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2711,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "6239:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "6223:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6223:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2716,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "6285:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2714,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6263:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "6263:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6263:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6255:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2712,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6255:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6255:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6223:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2723,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6334:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "6334:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6334:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2726,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "6366:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2727,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "6387:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2720,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6305:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2008,
                      "src": "6305:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6305:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "6305:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2730,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "6438:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2731,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2711,
                      "src": "6447:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6438:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2775,
                    "nodeType": "Block",
                    "src": "6518:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2742
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2742,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "6538:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2775,
                            "src": "6532:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2741,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6532:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2747,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2745,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "6572:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2743,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6548:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1959,
                            "src": "6548:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6548:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6532:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2751,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6611:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2752,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6611:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2755,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2753,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6624:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2754,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2742,
                                            "src": "6630:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6624:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2756,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6623:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6611:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2758,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6610:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6610:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2748,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "6595:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6595:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6595:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2762,
                        "nodeType": "ExpressionStatement",
                        "src": "6595:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2766,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6684:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6684:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2768,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2742,
                                      "src": "6696:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6684:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2770,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6683:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6707:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6683:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2763,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2711,
                              "src": "6660:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6660:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6660:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2774,
                        "nodeType": "ExpressionStatement",
                        "src": "6660:51:8"
                      }
                    ]
                  },
                  "id": 2776,
                  "nodeType": "IfStatement",
                  "src": "6434:288:8",
                  "trueBody": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "6462:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2736,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6491:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6491:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2733,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "6476:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6476:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6476:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "6476:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "4775:474:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - `rentExpirationDateInMillis` - `rentStartingDateInMillis` should be greater than 0.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "0c2e6c16",
            "id": 2778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "5263:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5281:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5273:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "rentStartingDateInMillis",
                  "nameLocation": "5298:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5290:32:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "5332:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5324:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5272:87:8"
            },
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5397:0:8"
            },
            "scope": 3061,
            "src": "5254:1474:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2820,
              "nodeType": "Block",
              "src": "7095:413:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2787,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2783,
                          "src": "7126:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7140:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7132:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2788,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7132:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7132:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7126:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7156:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7105:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2795,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:138:8"
                },
                {
                  "assignments": [
                    2797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2797,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7262:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2820,
                      "src": "7254:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2796,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7254:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2800,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "7284:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2798,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7270:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "7270:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7254:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2804,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7324:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7324:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7324:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2807,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2797,
                          "src": "7346:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7324:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7365:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7303:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7303:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2811,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2815,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2797,
                        "src": "7482:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2816,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "7489:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2817,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "7493:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2812,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7451:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "7451:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7451:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "7451:50:8"
                }
              ]
            },
            "documentation": {
              "id": 2779,
              "nodeType": "StructuredDocumentation",
              "src": "6734:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "7032:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2781,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7065:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2821,
                  "src": "7057:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7057:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2783,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7082:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2821,
                  "src": "7074:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7074:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7056:29:8"
            },
            "returnParameters": {
              "id": 2785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:8"
            },
            "scope": 3061,
            "src": "7023:485:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2943,
              "nodeType": "Block",
              "src": "7916:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2830,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "7961:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2828,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7947:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7947:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7947:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7983:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7926:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2836,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "8069:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2838,
                          "indexExpression": {
                            "id": 2837,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8085:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8069:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8096:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8069:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8111:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8048:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8048:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2843,
                  "nodeType": "ExpressionStatement",
                  "src": "8048:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2845,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8230:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8230:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2847,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "8243:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2849,
                          "indexExpression": {
                            "id": 2848,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8259:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8243:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8230:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8281:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2855,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8433:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8433:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8433:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8463:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8455:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2858,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8455:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8455:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8433:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8479:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8412:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:154:8"
                },
                {
                  "assignments": [
                    2867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2867,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8593:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2943,
                      "src": "8577:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2866,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2875,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2872,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2870,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8609:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8609:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8609:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8601:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8601:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8601:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8577:55:8"
                },
                {
                  "assignments": [
                    2877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2877,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8658:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2943,
                      "src": "8642:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2876,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8642:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2885,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2882,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8704:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2880,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8682:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8682:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8674:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2878,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8674:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8674:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8642:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2889,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "8755:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2890,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8762:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8762:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8762:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2893,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "8782:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2886,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8724:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "8724:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2896,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "8805:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2897,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "8814:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8805:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2941,
                    "nodeType": "Block",
                    "src": "8885:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2908
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2908,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8905:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2941,
                            "src": "8899:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2907,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8899:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2913,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2911,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2824,
                              "src": "8950:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2909,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8915:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1990,
                            "src": "8915:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8915:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8899:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2917,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8988:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8988:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2921,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9001:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2920,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2908,
                                            "src": "9007:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "9001:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2922,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9000:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8988:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2924,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8987:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9019:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8987:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "8972:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8972:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8972:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2928,
                        "nodeType": "ExpressionStatement",
                        "src": "8972:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2932,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "9061:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2933,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "9061:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2934,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2908,
                                      "src": "9073:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "9061:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2936,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9060:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9084:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "9060:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2929,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2877,
                              "src": "9037:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "9037:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9037:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2940,
                        "nodeType": "ExpressionStatement",
                        "src": "9037:51:8"
                      }
                    ]
                  },
                  "id": 2942,
                  "nodeType": "IfStatement",
                  "src": "8801:298:8",
                  "trueBody": {
                    "id": 2906,
                    "nodeType": "Block",
                    "src": "8829:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2902,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8858:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8858:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2899,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "8843:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8843:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8843:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2905,
                        "nodeType": "ExpressionStatement",
                        "src": "8843:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2822,
              "nodeType": "StructuredDocumentation",
              "src": "7514:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7859:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7890:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "7882:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7881:17:8"
            },
            "returnParameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:8"
            },
            "scope": 3061,
            "src": "7850:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2986,
              "nodeType": "Block",
              "src": "9488:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2953,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2949,
                          "src": "9519:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9533:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9525:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9525:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9525:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9519:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9549:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9498:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9498:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "9498:137:8"
                },
                {
                  "assignments": [
                    2963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2963,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9654:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "9646:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2962,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9646:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2966,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9692:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2964,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9670:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9670:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9670:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9646:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2970,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9732:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9732:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9732:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2973,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2963,
                          "src": "9754:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9732:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9781:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9711:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9711:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2977,
                  "nodeType": "ExpressionStatement",
                  "src": "9711:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2981,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "9896:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2982,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "9911:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2983,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9915:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2978,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9866:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "9866:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9866:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2985,
                  "nodeType": "ExpressionStatement",
                  "src": "9866:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2945,
              "nodeType": "StructuredDocumentation",
              "src": "9111:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "9426:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9458:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "9450:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9475:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "9467:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9467:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:29:8"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:0:8"
            },
            "scope": 3061,
            "src": "9417:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3059,
              "nodeType": "Block",
              "src": "10334:908:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2996,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10379:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2994,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10365:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "10365:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10365:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10401:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10344:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3000,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3002,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2392,
                            "src": "10487:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3004,
                          "indexExpression": {
                            "id": 3003,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10487:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10513:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10487:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 3007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10528:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 3001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10466:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10466:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3009,
                  "nodeType": "ExpressionStatement",
                  "src": "10466:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3011,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10646:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10646:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3013,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2392,
                            "src": "10659:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3015,
                          "indexExpression": {
                            "id": 3014,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10674:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10659:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10646:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 3017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10696:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 3010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10625:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10625:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3019,
                  "nodeType": "ExpressionStatement",
                  "src": "10625:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3021,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10847:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10847:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10847:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10877:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10869:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10869:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10869:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10847:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 3029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10893:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 3020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10826:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10826:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3031,
                  "nodeType": "ExpressionStatement",
                  "src": "10826:153:8"
                },
                {
                  "assignments": [
                    3033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3033,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "11006:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3059,
                      "src": "10990:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 3032,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10990:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3041,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3038,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "11052:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3036,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11030:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "11030:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11030:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11022:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 3034,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11022:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11022:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10990:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3045,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3033,
                        "src": "11115:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3046,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11142:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "11142:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11142:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3049,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "11174:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3042,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "11072:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "11072:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11072:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3051,
                  "nodeType": "ExpressionStatement",
                  "src": "11072:119:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3055,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11225:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11225:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3052,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3033,
                        "src": "11202:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11202:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11202:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3058,
                  "nodeType": "ExpressionStatement",
                  "src": "11202:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2988,
              "nodeType": "StructuredDocumentation",
              "src": "9936:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 3060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "10278:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10308:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3060,
                  "src": "10300:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10300:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10299:17:8"
            },
            "returnParameters": {
              "id": 2992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:0:8"
            },
            "scope": 3061,
            "src": "10269:973:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3062,
        "src": "261:10983:8",
        "usedErrors": []
      }
    ],
    "src": "32:11213:8"
  },
  "legacyAST": {
    "absolutePath": "non-fungible-royalty-token/contracts/ERC1190Tradable.sol",
    "exportedSymbols": {
      "Address": [
        401
      ],
      "Context": [
        423
      ],
      "Counters": [
        497
      ],
      "ERC1190": [
        2355
      ],
      "ERC1190Tradable": [
        3061
      ],
      "ERC165": [
        724
      ],
      "IERC1190": [
        3077
      ],
      "IERC1190Approver": [
        3133
      ],
      "IERC1190CreativeLicenseReceiver": [
        3151
      ],
      "IERC1190CreativeOwner": [
        3213
      ],
      "IERC1190Metadata": [
        3240
      ],
      "IERC1190Owner": [
        3302
      ],
      "IERC1190OwnershipLicenseReceiver": [
        3320
      ],
      "IERC1190Renter": [
        3383
      ],
      "IERC165": [
        736
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        700
      ]
    },
    "id": 3062,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2357,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "non-fungible-royalty-token/contracts/ERC1190.sol",
        "file": "./ERC1190.sol",
        "id": 2358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 2356,
        "src": "66:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 2359,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 498,
        "src": "90:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2360,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3062,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2362,
              "name": "ERC1190",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2355,
              "src": "289:7:8"
            },
            "id": 2363,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:8"
          },
          {
            "baseName": {
              "id": 2364,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "298:7:8"
            },
            "id": 2365,
            "nodeType": "InheritanceSpecifier",
            "src": "298:7:8"
          }
        ],
        "canonicalName": "ERC1190Tradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2361,
          "nodeType": "StructuredDocumentation",
          "src": "197:63:8",
          "text": " @dev Implementation of ERC1190 with payable methods."
        },
        "fullyImplemented": true,
        "id": 3061,
        "linearizedBaseContracts": [
          3061,
          104,
          2355,
          3240,
          3077,
          3383,
          3213,
          3302,
          3133,
          724,
          736,
          423
        ],
        "name": "ERC1190Tradable",
        "nameLocation": "270:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2369,
            "libraryName": {
              "id": 2366,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 497,
              "src": "318:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "312:36:8",
            "typeName": {
              "id": 2368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2367,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "331:16:8"
              },
              "referencedDeclaration": 429,
              "src": "331:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2372,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "378:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "353:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$429_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 2371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2370,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 429,
                "src": "353:16:8"
              },
              "referencedDeclaration": 429,
              "src": "353:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$429_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2382,
            "name": "TokenMinted",
            "nameLocation": "400:11:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "429:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "421:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForRental",
                  "nameLocation": "452:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "446:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2378,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "royaltyForOwnershipTransfer",
                  "nameLocation": "484:27:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "478:33:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "529:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "521:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:131:8"
            },
            "src": "394:149:8"
          },
          {
            "constant": false,
            "id": 2384,
            "mutability": "mutable",
            "name": "_base",
            "nameLocation": "580:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "565:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2383,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "565:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2388,
            "mutability": "mutable",
            "name": "_ownershipPrice",
            "nameLocation": "685:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "649:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2387,
              "keyType": {
                "id": 2385,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "657:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "649:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2386,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2392,
            "mutability": "mutable",
            "name": "_creativePrice",
            "nameLocation": "809:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "773:50:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2391,
              "keyType": {
                "id": 2389,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "773:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2390,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2396,
            "mutability": "mutable",
            "name": "_rentalPrice",
            "nameLocation": "924:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 3061,
            "src": "888:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 2395,
              "keyType": {
                "id": 2393,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "896:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "888:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 2394,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1152:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2410,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2384,
                      "src": "1162:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2411,
                      "name": "tokenBaseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2403,
                      "src": "1170:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1162:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:20:8"
                }
              ]
            },
            "documentation": {
              "id": 2397,
              "nodeType": "StructuredDocumentation",
              "src": "943:50:8",
              "text": " @dev See {ERC1190-constructor}."
            },
            "id": 2415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2406,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2399,
                    "src": "1128:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2407,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2401,
                    "src": "1139:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2408,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2405,
                  "name": "ERC1190",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2355,
                  "src": "1120:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1120:31:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1033:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1019:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1066:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1052:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "mutability": "mutable",
                  "name": "tokenBaseUri",
                  "nameLocation": "1101:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1087:26:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:110:8"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:8"
            },
            "scope": 3061,
            "src": "998:191:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "1254:43:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2420,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "1271:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "1271:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2419,
                  "id": 2423,
                  "nodeType": "Return",
                  "src": "1264:26:8"
                }
              ]
            },
            "functionSelector": "69bb4dc2",
            "id": 2425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableTokens",
            "nameLocation": "1204:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:8"
            },
            "returnParameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "1245:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:8"
            },
            "scope": 3061,
            "src": "1195:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2443,
              "nodeType": "Block",
              "src": "1378:130:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2434,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "1404:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2433,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1396:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1396:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1388:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2439,
                      "name": "_ownershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "1477:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2441,
                    "indexExpression": {
                      "id": 2440,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
                      "src": "1493:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1477:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2431,
                  "id": 2442,
                  "nodeType": "Return",
                  "src": "1470:31:8"
                }
              ]
            },
            "functionSelector": "ef1e00e0",
            "id": 2444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipPriceOf",
            "nameLocation": "1312:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1337:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1329:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:17:8"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "1369:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:8"
            },
            "scope": 3061,
            "src": "1303:205:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2462,
              "nodeType": "Block",
              "src": "1597:137:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2453,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2446,
                            "src": "1623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2452,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1615:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2458,
                      "name": "_creativePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2392,
                      "src": "1704:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2460,
                    "indexExpression": {
                      "id": 2459,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2446,
                      "src": "1719:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1704:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2450,
                  "id": 2461,
                  "nodeType": "Return",
                  "src": "1697:30:8"
                }
              ]
            },
            "functionSelector": "6f902516",
            "id": 2463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creativeOwnershipPriceOf",
            "nameLocation": "1523:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1556:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2463,
                  "src": "1548:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:17:8"
            },
            "returnParameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2463,
                  "src": "1588:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:9:8"
            },
            "scope": 3061,
            "src": "1514:220:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2481,
              "nodeType": "Block",
              "src": "1812:135:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2472,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2465,
                            "src": "1838:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2471,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1830:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:16:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1822:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2476,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:71:8"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2477,
                      "name": "_rentalPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2396,
                      "src": "1919:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2479,
                    "indexExpression": {
                      "id": 2478,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2465,
                      "src": "1932:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2469,
                  "id": 2480,
                  "nodeType": "Return",
                  "src": "1912:28:8"
                }
              ]
            },
            "functionSelector": "bf0a660b",
            "id": 2482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentalPriceOf",
            "nameLocation": "1749:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1771:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "1763:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:17:8"
            },
            "returnParameters": {
              "id": 2469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "1803:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:9:8"
            },
            "scope": 3061,
            "src": "1740:207:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1121
            ],
            "body": {
              "id": 2491,
              "nodeType": "Block",
              "src": "2075:29:8",
              "statements": [
                {
                  "expression": {
                    "id": 2489,
                    "name": "_base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2384,
                    "src": "2092:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2488,
                  "id": 2490,
                  "nodeType": "Return",
                  "src": "2085:12:8"
                }
              ]
            },
            "documentation": {
              "id": 2483,
              "nodeType": "StructuredDocumentation",
              "src": "1953:42:8",
              "text": " See {ERC1190-_baseURI}."
            },
            "id": 2492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "2009:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2042:8:8"
            },
            "parameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2017:2:8"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "2060:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:15:8"
            },
            "scope": 3061,
            "src": "2000:104:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2550,
              "nodeType": "Block",
              "src": "2490:418:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2508,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "2500:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "2500:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$429_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2512,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:21:8"
                },
                {
                  "assignments": [
                    2514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2514,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "2540:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "2532:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2513,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2532:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2518,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2515,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "2552:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$429_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 441,
                      "src": "2552:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$429_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$429_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2532:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2522,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "2593:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2523,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2602:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2519,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2581:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1855,
                      "src": "2581:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2529,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2643:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2530,
                        "name": "file",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "2654:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2526,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2622:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_associateFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "2622:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,string calldata)"
                      }
                    },
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:37:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2536,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2702:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2537,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "2725:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2538,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "2752:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 2533,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2669:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRoyalties",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "2669:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,uint8,uint8)"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:117:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:117:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2542,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "2814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2543,
                        "name": "rentalRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "2823:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2544,
                        "name": "ownershipTransferRoyalty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "2838:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2545,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "2864:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2541,
                      "name": "TokenMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2382,
                      "src": "2802:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint8,uint8,uint256)"
                      }
                    },
                    "id": 2546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2547,
                  "nodeType": "EmitStatement",
                  "src": "2797:77:8"
                },
                {
                  "expression": {
                    "id": 2548,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "2892:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2507,
                  "id": 2549,
                  "nodeType": "Return",
                  "src": "2885:16:8"
                }
              ]
            },
            "documentation": {
              "id": 2493,
              "nodeType": "StructuredDocumentation",
              "src": "2110:194:8",
              "text": " @dev Generates a new token and assigns its ownership and creative\n license to `creator`.\n The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
            },
            "functionSelector": "9940a11a",
            "id": 2551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2503,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "2462:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:9:8"
              }
            ],
            "name": "mint",
            "nameLocation": "2318:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "2340:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2332:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "file",
                  "nameLocation": "2373:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2357:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "rentalRoyalty",
                  "nameLocation": "2393:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2387:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "ownershipTransferRoyalty",
                  "nameLocation": "2422:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2416:30:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2322:130:8"
            },
            "returnParameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 3061,
            "src": "2309:599:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2580,
              "nodeType": "Block",
              "src": "3236:315:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2562,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "3281:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2560,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3267:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3267:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3303:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3246:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "3246:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2568,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "3389:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3402:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3389:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The ownership license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0681675e15639dde844d4fbc71824bd1bcbdc3b65580fc700b39571a28c085c",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3368:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2573,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:128:8"
                },
                {
                  "expression": {
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2574,
                        "name": "_ownershipPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2388,
                        "src": "3507:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2576,
                      "indexExpression": {
                        "id": 2575,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "3523:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3507:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2577,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "3534:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3507:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "3507:37:8"
                }
              ]
            },
            "documentation": {
              "id": 2552,
              "nodeType": "StructuredDocumentation",
              "src": "2914:225:8",
              "text": " @dev Sets the price for acquiring property of the ownership license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "79b66eb7",
            "id": 2581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOwnershipLicensePrice",
            "nameLocation": "3153:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2554,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3186:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2581,
                  "src": "3178:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3178:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2556,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3203:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2581,
                  "src": "3195:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3177:37:8"
            },
            "returnParameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:0:8"
            },
            "scope": 3061,
            "src": "3144:407:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2610,
              "nodeType": "Block",
              "src": "3877:313:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2592,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "3922:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2590,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "3908:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "3908:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3908:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "3887:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2598,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2586,
                          "src": "4030:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4043:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4030:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e736520636f7374206d7573742062652067726561746572207468616e20302e",
                        "id": 2601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The creative license cost must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17f23d1701cab6e93c2c567bc819c120c4f643ac96eb815817afbd0977756862",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license cost must be greater than 0.\""
                        }
                      ],
                      "id": 2597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4009:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:127:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:127:8"
                },
                {
                  "expression": {
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2604,
                        "name": "_creativePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2392,
                        "src": "4147:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2606,
                      "indexExpression": {
                        "id": 2605,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "4162:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2607,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2586,
                      "src": "4173:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4147:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2609,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:36:8"
                }
              ]
            },
            "documentation": {
              "id": 2582,
              "nodeType": "StructuredDocumentation",
              "src": "3557:224:8",
              "text": " @dev Sets the price for acquiring property of the creative license of token\n `tokenId`.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "de8e7bab",
            "id": 2611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCreativeLicensePrice",
            "nameLocation": "3795:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2584,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3827:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2611,
                  "src": "3819:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "3844:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2611,
                  "src": "3836:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3836:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:37:8"
            },
            "returnParameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:8"
            },
            "scope": 3061,
            "src": "3786:404:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "4457:312:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2622,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2614,
                            "src": "4502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2620,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "4488:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "4488:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4488:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4524:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4467:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4467:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2626,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2628,
                          "name": "priceInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2616,
                          "src": "4610:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4623:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4610:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c20636f737420706572207365636f6e64206d7573742062652067726561746572207468616e20302e",
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:69:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        },
                        "value": "ERC1190Tradable: The rental cost per second must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74427f3c813219cf3b9273e3103e510faed24e727314aa8dcbad15b7d044be3c",
                          "typeString": "literal_string \"ERC1190Tradable: The rental cost per second must be greater than 0.\""
                        }
                      ],
                      "id": 2627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4589:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2633,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:128:8"
                },
                {
                  "expression": {
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2634,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "4728:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2636,
                      "indexExpression": {
                        "id": 2635,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4741:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4728:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2637,
                      "name": "priceInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "4752:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4728:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2639,
                  "nodeType": "ExpressionStatement",
                  "src": "4728:34:8"
                }
              ]
            },
            "documentation": {
              "id": 2612,
              "nodeType": "StructuredDocumentation",
              "src": "4196:186:8",
              "text": " @dev Sets the price for renting `tokenId` for 1 second.\n Requirements:\n - `tokenId` must exist.\n - `priceInWei` must be greater than 0."
            },
            "functionSelector": "ec2b20ac",
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRentalPrice",
            "nameLocation": "4396:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2614,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4419:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "4411:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "priceInWei",
                  "nameLocation": "4436:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "4428:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4410:37:8"
            },
            "returnParameters": {
              "id": 2618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4457:0:8"
            },
            "scope": 3061,
            "src": "4387:382:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2777,
              "nodeType": "Block",
              "src": "5397:1331:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2654,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "5442:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2652,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "5428:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "5428:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5428:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5464:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5407:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5407:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "5407:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2660,
                            "name": "_rentalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2396,
                            "src": "5550:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2662,
                          "indexExpression": {
                            "id": 2661,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "5563:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5550:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5574:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5550:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652061737365742072656c6174656420746f207468697320746f6b656e206973206e6f742072656e7461626c652e",
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5589:67:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        },
                        "value": "ERC1190Tradable: The asset related to this token is not rentable."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38f967f101fcbb51343cf1b1e79f1c5d098e94e64cdd4cbef2808bdc0a3d410e",
                          "typeString": "literal_string \"ERC1190Tradable: The asset related to this token is not rentable.\""
                        }
                      ],
                      "id": 2659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5529:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2667,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:137:8"
                },
                {
                  "assignments": [
                    2669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2669,
                      "mutability": "mutable",
                      "name": "rentTimeInSeconds",
                      "nameLocation": "5685:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "5677:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2668,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5677:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2670,
                            "name": "rentExpirationDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2648,
                            "src": "5706:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2671,
                            "name": "rentStartingDateInMillis",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "5735:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5706:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2673,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5705:55:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 2674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5763:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "5705:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5677:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2678,
                          "name": "rentTimeInSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "5799:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5819:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5799:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652072656e74616c2074696d65206d75737420626520706f7369746976652e",
                        "id": 2681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5834:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        },
                        "value": "ERC1190Tradable: The rental time must be positive."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e5114cc873dc2ee0a25b7aadacc4c8bb7d105418a4c2e76dd10937642614de",
                          "typeString": "literal_string \"ERC1190Tradable: The rental time must be positive.\""
                        }
                      ],
                      "id": 2677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5778:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5778:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2683,
                  "nodeType": "ExpressionStatement",
                  "src": "5778:118:8"
                },
                {
                  "assignments": [
                    2685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2685,
                      "mutability": "mutable",
                      "name": "rentalTotalPrice",
                      "nameLocation": "5915:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "5907:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2684,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5907:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2691,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2686,
                      "name": "rentTimeInSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "5934:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 2687,
                        "name": "_rentalPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "5954:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2689,
                      "indexExpression": {
                        "id": 2688,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "5967:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5954:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5934:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5907:68:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6007:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6007:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2695,
                          "name": "rentalTotalPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2685,
                          "src": "6020:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6007:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420746f20636f766572207468652072656e7420657870656e7365732e",
                        "id": 2697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6050:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1aadbcd272749aaf046045205566d42c48dda7c29e68529d8e7102b23fbc87e",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient to cover the rent expenses.\""
                        }
                      ],
                      "id": 2692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5986:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:161:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2699,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:161:8"
                },
                {
                  "assignments": [
                    2701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2701,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6174:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "6158:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2700,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6158:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2706,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "6204:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2704,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6190:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "6190:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6190:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6182:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2702,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6182:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6182:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6158:55:8"
                },
                {
                  "assignments": [
                    2711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2711,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "6239:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2777,
                      "src": "6223:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6223:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2716,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "6285:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2714,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6263:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "6263:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6263:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6255:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2712,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6255:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6255:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6223:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2723,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "6334:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "6334:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6334:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2726,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2644,
                        "src": "6366:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2727,
                        "name": "rentExpirationDateInMillis",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "6387:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2720,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6305:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2008,
                      "src": "6305:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6305:118:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "6305:118:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2730,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "6438:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2731,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2711,
                      "src": "6447:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6438:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2775,
                    "nodeType": "Block",
                    "src": "6518:204:8",
                    "statements": [
                      {
                        "assignments": [
                          2742
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2742,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "6538:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2775,
                            "src": "6532:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2741,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6532:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2747,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2745,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "6572:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2743,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "6548:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForRental",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1959,
                            "src": "6548:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6548:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6532:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2751,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6611:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2752,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6611:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2755,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2753,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6624:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2754,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2742,
                                            "src": "6630:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "6624:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2756,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "6623:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6611:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2758,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6610:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6610:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2748,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "6595:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6595:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6595:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2762,
                        "nodeType": "ExpressionStatement",
                        "src": "6595:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2766,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "6684:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "6684:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2768,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2742,
                                      "src": "6696:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "6684:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2770,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6683:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6707:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "6683:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2763,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2711,
                              "src": "6660:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6660:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6660:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2774,
                        "nodeType": "ExpressionStatement",
                        "src": "6660:51:8"
                      }
                    ]
                  },
                  "id": 2776,
                  "nodeType": "IfStatement",
                  "src": "6434:288:8",
                  "trueBody": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "6462:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2736,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6491:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6491:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2733,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "6476:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6476:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6476:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "6476:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "4775:474:8",
              "text": " @dev Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms.\n Requirements:\n - `tokenId` must exist.\n - A rental price must have been set via {setRentalPrice}.\n - `rentExpirationDateInMillis` should correspond to a future date.\n - `rentExpirationDateInMillis` - `rentStartingDateInMillis` should be greater than 0.\n - the sent money should be enough to cover the renting expenses."
            },
            "functionSelector": "0c2e6c16",
            "id": 2778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentAsset",
            "nameLocation": "5263:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5281:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5273:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2646,
                  "mutability": "mutable",
                  "name": "rentStartingDateInMillis",
                  "nameLocation": "5298:24:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5290:32:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2648,
                  "mutability": "mutable",
                  "name": "rentExpirationDateInMillis",
                  "nameLocation": "5332:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2778,
                  "src": "5324:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5324:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5272:87:8"
            },
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5397:0:8"
            },
            "scope": 3061,
            "src": "5254:1474:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2820,
              "nodeType": "Block",
              "src": "7095:413:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2787,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2783,
                          "src": "7126:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7140:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7132:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2788,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7132:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7132:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7126:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7156:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7105:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:138:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2795,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:138:8"
                },
                {
                  "assignments": [
                    2797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2797,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7262:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2820,
                      "src": "7254:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2796,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7254:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2802,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2800,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "7284:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2798,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7270:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "7270:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7254:38:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2804,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "7324:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "7324:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7324:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2807,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2797,
                          "src": "7346:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7324:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206f776e657273686970206c6963656e73652e",
                        "id": 2809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7365:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the ownership license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58385320c86cf9b301296ae88cd6e86d2337fd8bf36d8cda05a4c07cfdc292f5",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the ownership license.\""
                        }
                      ],
                      "id": 2803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7303:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7303:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2811,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:137:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2815,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2797,
                        "src": "7482:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2816,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "7489:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2817,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "7493:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2812,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "7451:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "7451:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7451:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "7451:50:8"
                }
              ]
            },
            "documentation": {
              "id": 2779,
              "nodeType": "StructuredDocumentation",
              "src": "6734:284:8",
              "text": " @dev Transfers the ownership license from the current owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "8d6cf8bc",
            "id": 2821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipLicense",
            "nameLocation": "7032:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2781,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7065:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2821,
                  "src": "7057:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7057:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2783,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7082:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2821,
                  "src": "7074:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7074:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7056:29:8"
            },
            "returnParameters": {
              "id": 2785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:8"
            },
            "scope": 3061,
            "src": "7023:485:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2943,
              "nodeType": "Block",
              "src": "7916:1189:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2830,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "7961:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2828,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "7947:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "7947:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7947:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7983:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7926:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2836,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "8069:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2838,
                          "indexExpression": {
                            "id": 2837,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8085:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8069:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8096:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8069:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 2841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8111:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The ownership license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_989b17806732ef5009d3c280c71cc8cd30422fa6cffce7ca2b846dadc22004a0",
                          "typeString": "literal_string \"ERC1190Tradable: The ownership license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 2835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8048:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8048:150:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2843,
                  "nodeType": "ExpressionStatement",
                  "src": "8048:150:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2845,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8230:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8230:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 2847,
                            "name": "_ownershipPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2388,
                            "src": "8243:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2849,
                          "indexExpression": {
                            "id": 2848,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8259:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8243:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8230:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206f776e657273686970206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8281:110:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c8d0406cfb92403f8ede8dc6b0ef495276fcdc037efbaf649c312dcdf550d5b",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the ownership license of this token.\""
                        }
                      ],
                      "id": 2844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8209:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:192:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:192:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2855,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8433:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "8433:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8433:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8463:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8455:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2858,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8455:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8455:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8433:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206f776e657273686970206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8479:77:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the ownership license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06821014b54e8dd567b4b5fc8c3b4d14f1269012b5f61a2ce383dc400ebe8db",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the ownership license to the zero address.\""
                        }
                      ],
                      "id": 2854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8412:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:154:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:154:8"
                },
                {
                  "assignments": [
                    2867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2867,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8593:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2943,
                      "src": "8577:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2866,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2875,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2872,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8623:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2870,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8609:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 966,
                          "src": "8609:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8609:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8601:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8601:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8601:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8577:55:8"
                },
                {
                  "assignments": [
                    2877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2877,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "8658:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2943,
                      "src": "8642:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2876,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8642:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2885,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2882,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2824,
                            "src": "8704:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2880,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8682:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "8682:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8674:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 2878,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8674:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8674:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8642:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2889,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "8755:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2890,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "8762:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "8762:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8762:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2893,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "8782:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2886,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "8724:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1410,
                      "src": "8724:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:66:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:66:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2896,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "8805:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 2897,
                      "name": "creativeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "8814:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8805:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2941,
                    "nodeType": "Block",
                    "src": "8885:214:8",
                    "statements": [
                      {
                        "assignments": [
                          2908
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2908,
                            "mutability": "mutable",
                            "name": "royalty",
                            "nameLocation": "8905:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2941,
                            "src": "8899:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 2907,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8899:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2913,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2911,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2824,
                              "src": "8950:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2909,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "8915:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_royaltyForOwnershipTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1990,
                            "src": "8915:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 2912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8915:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8899:59:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2917,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8988:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "8988:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 2921,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "313030",
                                            "id": 2919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9001:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 2920,
                                            "name": "royalty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2908,
                                            "src": "9007:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "9001:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 2922,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9000:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "8988:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2924,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8987:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9019:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "8987:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "8972:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8972:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8972:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2928,
                        "nodeType": "ExpressionStatement",
                        "src": "8972:51:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2932,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "9061:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2933,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "9061:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 2934,
                                      "name": "royalty",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2908,
                                      "src": "9073:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "9061:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2936,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9060:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9084:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "9060:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2929,
                              "name": "creativeOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2877,
                              "src": "9037:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "9037:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9037:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2940,
                        "nodeType": "ExpressionStatement",
                        "src": "9037:51:8"
                      }
                    ]
                  },
                  "id": 2942,
                  "nodeType": "IfStatement",
                  "src": "8801:298:8",
                  "trueBody": {
                    "id": 2906,
                    "nodeType": "Block",
                    "src": "8829:50:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2902,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8858:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8858:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2899,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "8843:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8843:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8843:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2905,
                        "nodeType": "ExpressionStatement",
                        "src": "8843:25:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2822,
              "nodeType": "StructuredDocumentation",
              "src": "7514:331:8",
              "text": " @dev Transfers the ownership license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A ownership license price must have been set via {setOwnershipLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "f9de1d83",
            "id": 2944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainOwnershipLicense",
            "nameLocation": "7859:22:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7890:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "7882:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7881:17:8"
            },
            "returnParameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:8"
            },
            "scope": 3061,
            "src": "7850:1255:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2986,
              "nodeType": "Block",
              "src": "9488:442:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2953,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2949,
                          "src": "9519:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9533:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9525:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9525:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9525:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9519:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 2959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9549:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 2952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9498:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9498:137:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "9498:137:8"
                },
                {
                  "assignments": [
                    2963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2963,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "9654:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2986,
                      "src": "9646:21:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2962,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9646:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2966,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9692:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2964,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9670:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "creativeOwnerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "9670:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9670:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9646:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2970,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "9732:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 2971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "9732:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9732:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2973,
                          "name": "creativeOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2963,
                          "src": "9754:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9732:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a205468652073656e64657220646f6573206e6f74206f776e20746865206372656174697665206c6963656e73652e",
                        "id": 2975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9781:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        },
                        "value": "ERC1190Tradable: The sender does not own the creative license."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93449149768c4c7c2f31e2f32327f0f0c57ef3c47e66eeef41117469c159b542",
                          "typeString": "literal_string \"ERC1190Tradable: The sender does not own the creative license.\""
                        }
                      ],
                      "id": 2969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9711:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9711:144:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2977,
                  "nodeType": "ExpressionStatement",
                  "src": "9711:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2981,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "9896:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2982,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2949,
                        "src": "9911:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2983,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "9915:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2978,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9866:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "9866:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9866:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2985,
                  "nodeType": "ExpressionStatement",
                  "src": "9866:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2945,
              "nodeType": "StructuredDocumentation",
              "src": "9111:301:8",
              "text": " @dev Transfers the creative license from the current creative owner to the account `to`.\n Requirements:\n - `tokenId` must exist.\n - the sender of the request must be the creative owner.\n - the receiver account `to` must not be the zero address."
            },
            "functionSelector": "6ebd773d",
            "id": 2987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferCreativeLicense",
            "nameLocation": "9426:23:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9458:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "9450:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9475:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "9467:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9467:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:29:8"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:0:8"
            },
            "scope": 3061,
            "src": "9417:513:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3059,
              "nodeType": "Block",
              "src": "10334:908:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2996,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10379:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2994,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "10365:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1057,
                          "src": "10365:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10365:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520746f6b656e20646f6573206e6f742065786973742e",
                        "id": 2998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10401:44:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        },
                        "value": "ERC1190Tradable: The token does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99697220716af775475639436b163649a184f5f3b7e3cf7d649a5802e2d6399d",
                          "typeString": "literal_string \"ERC1190Tradable: The token does not exist.\""
                        }
                      ],
                      "id": 2993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10344:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3000,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3002,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2392,
                            "src": "10487:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3004,
                          "indexExpression": {
                            "id": 3003,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10487:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10513:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10487:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a20546865206372656174697665206c6963656e7365206f66207468697320746f6b656e2063616e6e6f74206265207472616e736665727265642e",
                        "id": 3007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10528:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        },
                        "value": "ERC1190Tradable: The creative license of this token cannot be transferred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e86645ff7bcdeb1a065f97536085819ca3be912aeb7d58bb79d79fa7c7fee67",
                          "typeString": "literal_string \"ERC1190Tradable: The creative license of this token cannot be transferred.\""
                        }
                      ],
                      "id": 3001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10466:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10466:148:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3009,
                  "nodeType": "ExpressionStatement",
                  "src": "10466:148:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3011,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10646:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10646:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3013,
                            "name": "_creativePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2392,
                            "src": "10659:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3015,
                          "indexExpression": {
                            "id": 3014,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "10674:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10659:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10646:36:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2054686520616d6f756e74206f66207765692073656e74206973206e6f742073756666696369656e7420666f72206f627461696e696e6720746865206372656174697665206c6963656e7365206f66207468697320746f6b656e2e",
                        "id": 3017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10696:109:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        },
                        "value": "ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40f6384684d41ccfa82cb96a4b97002d106bed591fced1dd7c6ecabe34cd6e32",
                          "typeString": "literal_string \"ERC1190Tradable: The amount of wei sent is not sufficient for obtaining the creative license of this token.\""
                        }
                      ],
                      "id": 3010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10625:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10625:190:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3019,
                  "nodeType": "ExpressionStatement",
                  "src": "10625:190:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3021,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "10847:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                                "typeString": "type(contract super ERC1190Tradable)"
                              }
                            },
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_msgSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 413,
                            "src": "10847:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10847:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10877:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10869:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3024,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10869:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10869:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10847:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313139305472616461626c653a2043616e6e6f74207472616e7366657220746865206372656174697665206c6963656e736520746f20746865207a65726f20616464726573732e",
                        "id": 3029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10893:76:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        },
                        "value": "ERC1190Tradable: Cannot transfer the creative license to the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f62030243afb94e0e93203c89e12235e3ed51326934d0896e1c045ffad96e2",
                          "typeString": "literal_string \"ERC1190Tradable: Cannot transfer the creative license to the zero address.\""
                        }
                      ],
                      "id": 3020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10826:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10826:153:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3031,
                  "nodeType": "ExpressionStatement",
                  "src": "10826:153:8"
                },
                {
                  "assignments": [
                    3033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3033,
                      "mutability": "mutable",
                      "name": "creativeOwner",
                      "nameLocation": "11006:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3059,
                      "src": "10990:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 3032,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10990:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3041,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3038,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "11052:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3036,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11030:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creativeOwnerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "11030:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11030:30:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11022:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 3034,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11022:8:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11022:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10990:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3045,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3033,
                        "src": "11115:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3046,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967271,
                            "src": "11142:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                              "typeString": "type(contract super ERC1190Tradable)"
                            }
                          },
                          "id": 3047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_msgSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 413,
                          "src": "11142:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11142:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3049,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "11174:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3042,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "11072:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1190Tradable_$3061_$",
                          "typeString": "type(contract super ERC1190Tradable)"
                        }
                      },
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferCreativeLicense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "11072:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11072:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3051,
                  "nodeType": "ExpressionStatement",
                  "src": "11072:119:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3055,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11225:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "11225:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3052,
                        "name": "creativeOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3033,
                        "src": "11202:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11202:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11202:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3058,
                  "nodeType": "ExpressionStatement",
                  "src": "11202:33:8"
                }
              ]
            },
            "documentation": {
              "id": 2988,
              "nodeType": "StructuredDocumentation",
              "src": "9936:328:8",
              "text": " @dev Transfers the creative license from the current owner to the sender of the request.\n Requirements:\n - `tokenId` must exist.\n - A creative license price must have been set via {setCreativeLicensePrice}.\n - the sent money should be enough to cover the license expense."
            },
            "functionSelector": "afe9a4ff",
            "id": 3060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "obtainCreativeLicense",
            "nameLocation": "10278:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10308:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3060,
                  "src": "10300:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10300:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10299:17:8"
            },
            "returnParameters": {
              "id": 2992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:0:8"
            },
            "scope": 3061,
            "src": "10269:973:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3062,
        "src": "261:10983:8",
        "usedErrors": []
      }
    ],
    "src": "32:11213:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-06T10:14:52.933Z",
  "devdoc": {
    "details": "Implementation of ERC1190 with payable methods.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC1190-approve}."
      },
      "balanceOfCreativeOwner(address)": {
        "details": "See {IERC1190-balanceOfCreativeOwner}."
      },
      "balanceOfOwner(address)": {
        "details": "See {IERC1190-balanceOfOwner}."
      },
      "balanceOfRenter(address)": {
        "details": "See {IERC1190-balanceOfRenter}."
      },
      "constructor": {
        "details": "See {ERC1190-constructor}."
      },
      "creativeOwnerOf(uint256)": {
        "details": "See {IERC1190-creativeOwnerOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC1190-getApproved}."
      },
      "getRentalDate(uint256,address)": {
        "details": "See {IERC1190-getRentalDate}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1190-isApprovedForAll}."
      },
      "mint(address,string,uint8,uint8)": {
        "details": "Generates a new token and assigns its ownership and creative license to `creator`. The royalties are set via `rentalRoyalty` and `ownershipTransferRoyalty`."
      },
      "name()": {
        "details": "See {IERC1190Metadata-name}."
      },
      "obtainCreativeLicense(uint256)": {
        "details": "Transfers the creative license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A creative license price must have been set via {setCreativeLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "obtainOwnershipLicense(uint256)": {
        "details": "Transfers the ownership license from the current owner to the sender of the request. Requirements: - `tokenId` must exist. - A ownership license price must have been set via {setOwnershipLicensePrice}. - the sent money should be enough to cover the license expense."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC1190-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rentAsset(address,uint256,uint256)": {
        "details": "See {IERC1190-rentAsset}."
      },
      "rentAsset(uint256,uint256,uint256)": {
        "details": "Rents the token `tokenId` for a total amount of `rentExpirationDateInMillis` ms. Requirements: - `tokenId` must exist. - A rental price must have been set via {setRentalPrice}. - `rentExpirationDateInMillis` should correspond to a future date. - `rentExpirationDateInMillis` - `rentStartingDateInMillis` should be greater than 0. - the sent money should be enough to cover the renting expenses."
      },
      "rentersOf(uint256)": {
        "details": "See {IERC1190-rentersOf}."
      },
      "safeTransferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferCreativeLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferCreativeLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "safeTransferOwnershipLicense(address,address,uint256,bytes)": {
        "details": "See {IERC1190-safeTransferOwnershipLicense}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1190-setApprovalForAll}."
      },
      "setCreativeLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the creative license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setOwnershipLicensePrice(uint256,uint256)": {
        "details": "Sets the price for acquiring property of the ownership license of token `tokenId`. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "setRentalPrice(uint256,uint256)": {
        "details": "Sets the price for renting `tokenId` for 1 second. Requirements: - `tokenId` must exist. - `priceInWei` must be greater than 0."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC1190Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC1190Metadata-tokenURI}."
      },
      "transferCreativeLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferCreativeLicense}."
      },
      "transferCreativeLicense(uint256,address)": {
        "details": "Transfers the creative license from the current creative owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the creative owner. - the receiver account `to` must not be the zero address."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferOwnershipLicense(address,address,uint256)": {
        "details": "See {IERC1190-transferOwnershipLicense}."
      },
      "transferOwnershipLicense(uint256,address)": {
        "details": "Transfers the ownership license from the current owner to the account `to`. Requirements: - `tokenId` must exist. - the sender of the request must be the owner. - the receiver account `to` must not be the zero address."
      },
      "updateEndRentalDate(uint256,uint256,address)": {
        "details": "See {IERC1190-updateEndRentalDate}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}